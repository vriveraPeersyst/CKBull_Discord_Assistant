

id178783
 
 
IMPLEMENTACIÓ D'UN SISTEMA DE FIRMES
DIGITALS SOBRE UN REGISTRE
DESCENTRALITZAT BLOCKCHAIN
GUILLEM GARCÍA GIL
Director/a: FERRAN PRAT TIÓ (PEERSYST TECHNOLOGY SL )
Ponent: CARLES FARRE TOST (Departament d'Enginyeria de Serveis i Sistemes d'Informació)
Titulació: Grau en Enginyeria Informàtica (Enginyeria del Software )
Memòria del projecte
Facultat d'Informàtica de Barcelona (FIB)
Universitat Politècnica de Catalunya (UPC) - BarcelonaTech
29/06/2023

Resum
Aquest document representa la mem`oria del Treball de Fi de Grau de modalitat B en conveni amb
l’empresa Peersyst, consultora de tecnologiesblockchain.
El  projecte  desenvolupat  t ́e  com  a  objectiu  poder  millorar  l’experi`encia  d’ ́us  i  l’adopci ́o  de  la
blockchainCKB  mitjan ̧cant  una  plataforma  que  permeti  gestionar  transaccions  d’actius  digitals
entre aplicacions descentralitzades i els usuaris.

Resumen
Este documento representa la mem ́oria del Trabajo Final de Grado de modalidad B en convenio
con la empresa Peersyst, consultora de tecnolog ́ıasblockchain.
El proyecto desarrollado tiene como  objetivo  poder mejorar  la experiencia de uso y  la adopci ́on
de  lablockchainCKB  mediante  una  plataforma  que  permita  gestionar  transacciones  de  activos
digitales entre aplicaciones descentralizadas y los usuarios.

Abstract
This document constitutes the final degree project report of modality B under a collaboration agre-
ement with the blockchain technology consultant firm Peersyst.
The project’s goal is to improve user satisfaction and adoption of the CKB blockchain by providing
a platform to manage the transfer of digital assets between users and decentralized applications.

 ́
Index
1   Context10
1.1    Introducci ́o   .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   10
1.2    Termes i conceptes previs   .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   10
2   Definici ́o13
2.1    Oportunitat  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   13
2.2    Actors implicats   .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   14
3   Justificaci ́o16
3.1    Estudi de mercat  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   16
3.2    Conclusions  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   17
4   Abast19
4.1    Objectius   .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   19
4.2    Requisits funcionals    .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   20
4.3    Requisits no funcionals .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   20
4.4    Obstacles i riscos  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   21
5   Metodologia i rigor22
5.1    Metodologia de treball  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   22
5.2    Eines de suport a la metodologia   .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   23
6   Planificaci ́o24
6.1    Descripci ́o de les tasques .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   24
6.1.1Gesti ́o i documentaci ́o del projecte  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   25
6.1.2Desenvolupament de CKBull Developer Console   .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   25
6.1.3Desenvolupament de CKBull Wallet   .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   26
6.2    Recursos .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   27
6.3    Resum  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   29
7   Riscos32
8   Pressupost33
8.1    Identificaci ́o dels costos    .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   33
8.1.1Costos sobre recursos humans interns    .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   34
8.1.2Costos sobre els recursos humans externs   .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   35
8.1.3Costos sobre els recursos f ́ısics    .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   36
8.1.4Costos sobre els recursos espacials   .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   36
1

8.1.5Costos sobre els recursos digitals   .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   36
8.1.6Resum dels costos   .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   36
8.2    Estimaci ́o dels costos .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   37
8.2.1Costos de conting`encia .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   37
8.2.2Costos associats als riscos  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   38
8.2.3Pressupost final .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   38
8.3    Desviacions sobre els costos del projecte  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   38
9   Especificaci ́o40
9.1    Descripci ́o t`ecnica de les transaccions a CKB   .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   40
9.2    Casos d’ ́us del sistema  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   44
9.2.1Casos d’ ́us de CKBull Developer Console   .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   45
9.2.2Casos d’ ́us de CKBull Wallet  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   55
9.3    Esquema conceptual de dades  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   60
9.3.1Descripci ́o de les classes  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   61
9.4    Cicles de vida d’una Request   .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   63
9.4.1SignInRequest (petici ́o d’inici de sessi ́o)   .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   63
9.4.2TransactionRequest (petici ́o de transacci ́o)   .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   64
9.5    Especificaci ́o dels processos cr ́ıtics    .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   65
9.5.1Proc ́es d’acceptaci ́o d’una petici ́o d’inici de sessi ́o .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   66
9.5.2Proc ́es de signatura d’una petici ́o de transacci ́o  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   67
10 Disseny69
10.1  Arquitectura del sistema  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   69
10.2  Disseny de les interf ́ıcies  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   71
10.2.1  Disseny de CKBull Developer Console  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   71
10.2.2  Disseny de CKBull Wallet  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   82
10.3  Disseny de domini   .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   88
10.3.1  Disseny de l’API  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   88
10.4  Disseny de la persist`encia   .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   93
10.4.1  Disseny de la base de dades  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   93
10.5  Patrons de disseny   .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   97
10.5.1  Patrons creacionals .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   97
11 Implementaci ́o99
11.1  Tecnolog ́ıes comunes  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   99
11.2  CKBull Developer Console .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  100
11.2.1  Tecnolog ́ıes   .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  100
11.3  CKBull Signer API i base de dades  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  101
11.3.1  Tecnolog ́ıes de l’API  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  101
11.3.2  Tecnolog ́ıes de la base de dades  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  102
11.3.3  Seguretat   .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  102
11.4  CKBull Wallet   .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  104
11.5  T ́ecniques i pr`actiques  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  106
11.5.1  Monorepo  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  106
11.5.2  Estructura modular   .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  106
11.5.3  Entorns   .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  107
11.6  Patrons de disseny   .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  108
2

11.6.1  Patrons creacionals .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  108
11.6.2  Patrons estructurals   .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  108
12 Tests i validaci ́o de requisits109
12.1  T`ecniques de validaci ́o  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  109
12.1.1  Tests unitaris  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  109
12.1.2Mock objects.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  110
12.1.3  Proves no automatitzades end-2-end  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  111
12.2  Validaci ́o de requisits .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  113
12.2.1  Requisits funcionals   .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  113
12.2.2  Requisits no funcionals .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  116
12.3  Resum de validaci ́o  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  118
13 Desplegament i documentaci ́o119
13.1  Desplegament  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  119
13.1.1  Desplegament de CKBull Developer Console i CKBull Signer API   .  .  .  .  .  .  119
13.1.2  Desplegament de CKBull Wallet   .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  120
13.2  Documentaci ́o .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  120
14 Lleis i regulacions122
14.1  Identificaci ́o de lleis .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  122
14.2  Llic`encies   .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  123
15 Resultats de desenvolupament124
15.1  Desviacions sobre el pla inicial   .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  124
15.2  Afectacions sobre el pressupost   .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  128
16 Informe de sostenibilitat130
16.1  Sostenibilitat ambiental   .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  130
16.1.1  Posada en producci ́o del projecte (PPP)  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  130
16.1.2  Vida  ́util    .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  132
16.1.3  Riscos  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  133
16.2  Sostenibilitat econ ́omica  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  133
16.2.1  Posada en producci ́o del projecte (PPP)  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  133
16.2.2  Vida  ́util    .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  133
16.3  Sostenibilitat social .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  134
16.3.1  Posada en producci ́o del projecte  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  134
16.3.2  Vida  ́util    .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  134
16.3.3  Riscos  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  134
17 Conclusions135
Refer`encies136
A  Especificaci ́o140
A.1   Diagrama de casos d’ ́us   .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  140
3

B  Disseny142
B.1   Rutes de CKBull Signer API   .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  142
B.1.1   Rutes per peticions d’inici de sessi ́o (sign-in-requests)   .  .  .  .  .  .  .  .  .  .  .  .  .  142
B.1.2   Rutes per peticions d’autenticaci ́o   .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  146
B.1.3   Rutes per peticions d’usuari .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  148
B.1.4   Rutes per peticions de fitxers  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  149
B.1.5   Rutes per peticions de dApps  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  150
B.1.6   Rutes per peticions de transacci ́o  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  154
B.1.7   Rutes per peticions deplayground.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  161
4

 ́
Index de figures
1Representaci ́o de UTXOs dins d’unablockchain. .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   12
2Exemple d’una transacci ́o entre una dApp i un usuari amb la nova funcionalitat.   .  .   14
3Diagrama del funcionament d’unSprintambScrum.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   23
4Diagrama de Gantt .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   31
5Transfer`encia simplificada entre dos entitats.    .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   40
6Diagrama simplificat d’una transacci ́o.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   41
7Diagrama del funcionament d’un OutPoint.   .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   42
8Diagrama parcial d’una transacci ́o.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   42
9Estructura de dades del Script.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   43
10Diagrama parcial d’una transacci ́o a CKB  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   44
11Casos d’ ́usCKBull Developer Console.
`
Ambit autoritzaci ́o i autenticaci ́o.   .  .  .  .  .  .   46
12Casos d’ ́usCKBull Developer Console.
`
Ambit de gesti ́o de dApps.   .  .  .  .  .  .  .  .  .  .   49
13Casos d’ ́usCKBull Developer Console.
`
Ambit de generaci ́o de peticions.  .  .  .  .  .  .  .   53
14Casos d’ ́us CKBull Wallet. .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   55
15Esquema conceptual de dades del sistema   .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   60
16Cicle de vida d’una SignInRequest.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   64
17Cicle de vida d’una TransactionRequest.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   65
18Proc ́es d’acceptaci ́o duna petici ́o d’inici de sessi ́o.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   67
19Proc ́es de signatura d’una petici ́o de transacci ́o. .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   68
20Arquitectura general del sistema.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   70
21Arquitectura dels components a dissenyar.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   71
22Arquitectura de CKBull Developer Console.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   72
23Mapa de navegabilitat de CKBull Developer Console.    .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   73
24Disseny de p`agina d’inici de sessi ́o.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   74
25Disseny de p`agina de verificaci ́o de compte.   .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   75
26Disseny de p`agina de les meves dApps. .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   76
27Disseny de creaci ́o de dApps.   .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   77
28Disseny del modal de credencials de la dApp.   .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   78
29Disseny de p`agina d’edici ́o de dApp.   .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   79
30Connexi ́o entre capa de presentaci ́o i domini CKBull Developer Console.  .  .  .  .  .  .  .   80
31Disseny de capa de domini de CKBull Developer Console.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   81
32Conexi ́o entre capa de domini i acc ́ess a dades CKBull Developer Console.  .  .  .  .  .  .   82
33Diagrama de navegaci ́o de CKBull Wallet.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   83
34Disseny de la p`agina d’activitat.    .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   84
5

35Dissenys del modal d’inici de sessi ́o.   .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   85
36Dissenys del di`aleg de declinaci ́o d’inici de sessi ́o.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   86
37Disseny de p`agina d’`exit de signatura de transacci ́o.   .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   87
38Arquitectura de CKBull Signer API.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   88
39Diagrama de la capa de controladors de l’API.   .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   89
40Diagrama de serveis de l’API.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   90
41Diagrama de serveis amb interf ́ıcies de repositoris.   .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   91
42Diagrama de repositoris de l’API. .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   92
43Disseny de les taules de la base de dades.   .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   97
44Proc ́es d’autenticaci ́o amb JWT.   .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  103
45Proc ́es d’autenticaci ́o per dApps.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  104
46Estructura de carpetes del monorepo.   .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  106
47Exemples d’estructura modular a CKBull Developer Console.  .  .  .  .  .  .  .  .  .  .  .  .  .  107
48Relaci ́o entre entorns.   .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  107
49Test unitari del component DAppList.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  110
50Mock de la classe CompleteDAppDto.   .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  110
51Prova del cas d’ ́us Signar transacci ́o.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  112
52Tests unitaris realitzats sobre els components del sistema.   .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  118
53Exemple desplegament gestionat desde Expo.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  120
54Resultat de la tascaPlayground.   .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  126
55Codi QR de petici ́o d’inici de sessi ́o.   .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  127
56Formulari per crear una petici ́o de transacci ́o   .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  127
57Elements de la llista d’events.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  128
58Diagrama de casos d’ ́us.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  141
6

 ́
Index de taules
1Comparativa de mercat entre diferents productes i la soluci ́o del projecte.   .  .  .  .  .  .   17
2Recursos humans interns.   .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   27
3Recursos humans externs.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   27
4Recursos f ́ısics.   .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   28
5Costs sobre recursos espaials.   .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   28
6Recursos digitals.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   28
7Resum de les tasques.   .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   30
8Riscos detectats en el projecte.   .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   32
9Costos sobre recursos humans interns.   .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   34
10Resum de les tasques.   .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   35
11Costos sobre recursos humans externs.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   36
12Costos sobre recursos f ́ısics.   .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   36
13Costs sobre recursos espaials.   .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   36
14Costos sobre recursos digitals. .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   37
15Resum dels costos.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   37
16Costos de conting`encia.   .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   37
17Riscos detectats en el projecte.   .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   38
18Pressupost final.   .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   38
19Actors dins del nostre sistema.   .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   45
20Descripci ́o de cas d’ ́usEnregistrar-se. .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   46
21Descripci ́o de cas d’ ́usIniciar sessi ́o.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   47
22Descripci ́o de cas d’ ́usIniciar sessi ́o.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   47
23Descripci ́o de cas d’ ́usReestablir contrasenya.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   48
24Descripci ́o de cas d’ ́usValidat compte.   .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   48
25Descripci ́o de cas d’ ́usTancar sessi ́o.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   49
26Descripci ́o de cas d’ ́usCrear dApp.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   50
27Descripci ́o de cas d’ ́usGenerar claus API.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   50
28Descripci ́o de cas d’ ́usEditar dApp.    .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   51
29Descripci ́o de cas d’ ́usEliminar dApp.   .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   51
30Descripci ́o de cas d’ ́usRegenerar clau secreta API.   .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   52
31Descripci ́o de cas d’ ́usVeure dApps.   .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   52
32Descripci ́o de cas d’ ́usGenerar petici ́o d’inici de sessi ́o.   .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   53
33Descripci ́o de cas d’ ́usConsultar petici ́o d’inici de sessi ́o.    .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   54
34Descripci ́o de cas d’ ́usGenerar petici ́o de transacci ́o.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   54
35Descripci ́o de cas d’ ́usConsultar petici ́o de transacci ́o.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   55
7

36Descripci ́o de cas d’ ́usVeure aplicacions connectades.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   56
37Descripci ́o de cas d’ ́usEscanejar codi inici de sessi ́o.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   56
38Descripci ́o de cas d’ ́usRebutjar inici de sessi ́o.   .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   57
39Descripci ́o de cas d’ ́usAcceptar inici de sessi ́o.   .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   57
40Descripci ́o de cas d’ ́usVeure peticions de transaccions.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   58
41Descripci ́o de cas d’ ́usSignar transacci ́o. .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   58
42Descripci ́o de cas d’ ́usRebutjar transacci ́o. .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   59
43Atributs de la classe Developer.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   61
44Atributs de la classe DApp.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   61
45Atributs de la classe Credentials.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   62
46Atributs de la classe SignInRequest.   .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   62
47Atributs de la classe TransactionRequest.   .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   62
48Atributs de la classe Transaction.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   63
49Atributs de la classe Wallet.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   63
50Restriccions de la taula AccountMetadata. .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   93
51Restriccions de la taula SignInRequest. .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   94
52Restriccions de la taula TransactionRequest. .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   94
53Restriccions de la taula Transaction.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   94
54Restriccions de la taula DApp.   .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   95
55Restriccions de la taula User.   .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   95
56Restriccions de la taula VerifyEmailToken. .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   96
57Restriccions de la taula ResetToken.   .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .   96
58Validaci ́o de RF1. .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  113
59Validaci ́o de RF2. .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  113
60Validaci ́o de RF3. .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  114
61Validaci ́o de RF4. .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  114
62Validaci ́o de RF5. .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  115
63Validaci ́o de RF6. .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  115
64Validaci ́o de RF7. .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  116
65Validaci ́o de RF8. .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  116
66Validaci ́o de RF9. .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  116
67Validaci ́o de RNF1. .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  117
68Validaci ́o de RNF2. .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  117
69Validaci ́o de RNF3. .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  117
70Validaci ́o de RNF4. .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  117
71Validaci ́o de RNF5. .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  118
72Validaci ́o de RNF6. .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  118
73Desviacions persprints.   .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  124
74Petici ́o per obtindre peticions d’inici de sessi ́o. .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  142
75Petici ́o per crear una petici ́o d’inici de sessi ́o.   .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  143
76Petici ́o per obtindre les peticions d’inici de sessi ́o creades per una dApp.  .  .  .  .  .  .  .  143
77Petici ́o per obtenir informaci ́o d’una petici ́o d’inici de sessi ́o. .  .  .  .  .  .  .  .  .  .  .  .  .  .  144
78Petici ́o per ferpollingd’una petici ́o d’inici de sessi ́o.   .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  144
79Petici ́o d’acceptaci ́o d’una petici ́o d’inici de sessi ́o.   .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  145
80Petici ́o de declinaci ́o d’una petici ́o de d’inici de sessi ́o.   .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  145
8

81Petici ́o de desconnexi ́o de dApps.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  146
82Petici ́o per iniciar sessi ́o com desenvolupador.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  146
83Petici ́o per iniciar sessi ́o amb Google com desenvolupador.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  146
84Petici ́o per redirigir despr ́es d’iniciar sessi ́o .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  146
85Petici ́o per validar direcci ́o de correu com desenvolupador.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  147
86Petici ́o per recuperar la contrasenya com desenvolupador.   .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  147
87Petici ́o per a restablir la contrasenya com desenvolupador.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  147
88Petici ́o per a obtenir informaci ́o d’un usuari. .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  148
89Petici ́o per a enregistrar un usuari.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  148
90Petici ́o per a editar un usuari. .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  149
91Petici ́o per eliminar un usuari.    .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  149
92Petici ́o per a pujar una imatge.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  149
93Petici ́o per a obtindre totes les dApps d’un usuari.   .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  150
94Petici ́o per a obtindre una dApp.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  151
95Petici ́o per a enregistrar una dApp. .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  152
96Petici ́o per a enregistrar una dApp. .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  153
97Petici ́o per eliminar una dApp.   .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  153
98Petici ́o per eliminar una dApp.   .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  154
99Petici ́o d’obtenci ́o de peticions de transaccions.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  154
100   Petici ́o de creaci ́o de peticions de transaccions.   .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  155
101   Petici ́o d’obtenci ́o de peticions de transacci ́o per dApp.    .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  156
102   Petici ́o d’obtenci ́o de petici ́o de transacci ́o per transactionToken.   .  .  .  .  .  .  .  .  .  .  .  157
103   Petici ́o d’obtenci ́o de l’estat petici ́o de transacci ́o per transactionToken.   .  .  .  .  .  .  .  157
104   Petici ́o de generaci ́o d’una transacci ́o de token natiu.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  158
105   Petici ́o de generaci ́o d’una transacci ́o d’un nft.    .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  158
106   Petici ́o de generaci ́o d’una transacci ́o d’un nft.    .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  159
107   Petici ́o de generaci ́o d’una transacci ́o d’un nft.    .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  160
108   Petici ́o de desconnexi ́o de dApps.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  161
9

Cap ́ıtol 1
Context
1.1    Introducci ́o
El contingut d’aquest document representa el Treball de Fi de Grau titulatImplementaci ́o  d’un
sistema  de  firmes  digitals  sobre  un  registre  descentralitzat  blockchain, realitzat per l’alumne Gui-
llem Garc ́ıa Gil,  en l’especialitzaci ́o d’Enginyeria del Software pertanyent al Grau en Enginyeria
Inform`atica de la Facultat Polit`ecnica de Barcelona a la Universitat Polit`ecnica de Catalunya.
Aquest projecte correspon a la modalitat B (realitzat amb empresa) amb l’empresa Peersyst [1],
consultora de tecnologiablockchainlocalitzada a Barcelona.
 ́
Es dirigit per Ferran Prat Tio, CEO
de Peersyst, i assessorat per en Carles Farr ́e Tost, personal docent i investigador al Departament
d’Enginyeria de Serveis i Sistemes d’Informaci ́o.
El projecte  ́es el resultat d’una col·laboraci ́o entre Peersyst i l’empresa Nervos [2], que t ́e com a
finalitat la implementaci ́o d’un sistema de firmes de transaccions a lablockchainNervos Network,
mitjan ̧cant la cartera digitalCKBull Wallet, producte dissenyat i implementat per Peersyst.
1.2    Termes i conceptes previs
Per tal d’introduir al lector en el sector de la tecnologiablockchain, sobre els seus conceptes, imple-
mentacions i usos, es definiran a continuaci ́o una llista de termes i conceptes que ajudaran a seguir
i comprendre el contingut d’aquest projecte.
Blockchain
Conegut  tamb ́e  com  a  cadena  de  blocs,   ́es  un  sistema  de  base  de  dades  descentralitzat  que
permet enregistrar transaccions entre diferents usuaris.  Aquestes transaccions poden estar lligades
tant a actius tangibles com a actius intangibles,  digitals i f ́ısics.  Les principals propietats de les
cadenes de blocs s ́on les seg ̈uents:
•Immutabilitat:Tota transacci ́o realitzada dins de lablockchain ́es immutable,  ́es a dir, no
pot canviar d’estat.
•Transpar`encia:Tot usuari t ́e acc ́es a tota la resta de transaccions
•Consens:Per  aprovar  una  transacci ́o  tots  els  participants  de  lablockchain(nodes)  o  la
major ́ıa han d’estar d’acord.
Una bona analogia d’unablockchain ́es un llibre de comptabilitat, on cada moviment sobre un o
diversos actius  ́es enregistrat quan es realitza una transacci ́o d’aquest entre alguns agents [3] [4].
10

La cadena de blocs utilitza una gran quantitat de conceptes criptogr`afics que quedaran fora de
l’abast d’aquest projecte,  ́unicament incloent el contingut necessari.
Nervos
Blockchain  sobre  la  que  es  realitzar`a  el  sistema  de  firmes  digitals.   Nervos  ́es  unablockchain
p ́ublica iopen-source[5] que busca com a objectiu convertir-se en unablockchainmulti ́us, aportant
seguretat i escalabilitat a totes les solucions.
Mainnet i Testnet
Corresponen a les diferents xarxes de blockchain de Nervos.  Cada xarxa t ́e un prop`osit de fun-
cionament.  Testnet es una xarxa de proves on es realitzen totes les integracions i desenvolupaments
que, un cop finalitzats, passen a la Mainnet, xarxa que podr ́ıem catalogar com a xarxa en producci ́o.
Accounto compte
Objecte distribuit utilitzat a la blockchain Nervos per a guardar la informaci ́o del usuari i el
seu balan ̧c.
Addresso adre ̧ca
Cadena de car`acters que representa de forma an`onima la identitat d’un usuari dins de la blockc-
hain.  A m ́es, s ́on utilitzades com a refer`encia per a la transfer`encia d’actius digitals entre comptes.
Un exemple d’adre ̧ca dins de lablockchainNervos es el seg ̈uent:
ckb1qzda0cr08m85hc8jlnfp3zer7xulejywt49kt2rr0vthywaa50xwsqdnnw7qkdnnclfkg
59uzn8umtfd2kwxceqxwquc4
on  la  adre ̧ca  esta  composta  sempre  per  el  prefixckbper  indicar  que  l’adre ̧ca  pertany  aMain-
net, icktper indicar que l’adre ̧ca pertany aTestnet.  Un compte pot generar m ́ultiples adreces.
Per a la seva creaci ́o es poden utilitzar dues estrat`egies:BIP173[6] i laBIP350[7].  Degut a que
no es necess`ari con`eixer com es generen les adreces, queda exclosa l’explicaci ́o.
Criptomoneda o token natiu
Tipus de divisa digital utilitzada dins d’una xarxablockchainper a fer transaccions.  Aques-
ta divisa t ́e com a propietat principal que no es distribuida per a cap entitat central.Cada xarxa
blockchaindisposa del seu token natiu que s’utilitza dins de la cadena.  Dins de lablockchainde
Nervos el token natiu es representa amb les sigles CKB [8].
dApps o aplicacions descentralitzades
UnadAppo aplicaci ́o descentralitzada correspon a una soluci ́o dissenyada i implementada que
interactua amb una xarxablockchain. Aquestes aplicacions solen estar segmentades en una interf ́ıcie
d’usuari (punt de connexi ́o pels usuaris) i un contracte intel·ligent.[9].
Wallet
Una wallet o cartera de criptomonedes  ́es una aplicaci ́o distribu ̈ıda que permet a un usuari ges-
tionar de manera senzilla els seus criptoactius dins d’una xarxa blockchain.  Les carteres abstrauen
tot el coneixement criptogr`afic necessari per a funcionar perqu`e els usuaris no hagin de ser respon-
sables de gestionar les seves claus.  A m ́es, existeixen diferents tipus de carteres per a diferents usos,
les quals no seran explicades ja que queden fora de l’abast del projecte [10].
11

Problema del doble pagament
El problema del doble pagament correspon al risc de que es puguin realitzar m ́es d’un paga-
ment amb un mateix actiu digital i es una de les principals preocupacions a tindre en compte en
l’utilitzaci ́o de sistemes moneratis digitals.  El seg ̈uent exemple ajuda a explicar el problema del
doble pagament:
Una persona amb 10 monedes digitals emmagatzemats a una entitat vol realitzar dues compres.
Per a les dues transaccions, genera un certificat a mode de xec conforme t ́e 10 monedes digitals i
realitza les compres a entitats diferents.  Aix ́ı doncs, la primera entitat que reclami el valor del xec
obtindr`a les 10 monedes digitals i l’altre no podr`a obtenir-les, degut a que ja han sigut reclamades.
Com  a  simplificaci ́o,  correspondr ́ıa  al  problema  on  dues  entitats  han  prom`es  ser  pagades  per`o
nom ́es una d’elles ho ha estat.
UTXO
Les  sigles  UTXO  pertanyen  al  terme  en  angl`esUnspent  transaction  outputi  representa  una
quantitat de monedes digitals que han sigut autoritzades per a transferir-les d’un compte a un altre
[11].  Cada UTXO representa una cadena de propietat de criptodivises que s’han realitzat desde
l’inici de la creaci ́o de la moneda.
Figura 1:  Representaci ́o de UTXOs dins d’unablockchain.
Font:  Wiki IOTA.
Com podem veure a la Figura 1 els UTXOs es van generant a partir de transaccions realitzades
entre  diferents  usuaris.   ElGenesiscorrespon  a  l’inici  de  la  cripto  moneda.   Cada  transacci ́o  de
sortida  (output)  t ́e  un  valor  m`axim  que  no  pot  excedir-se  a  la  seg ̈uent  transacci ́o.   D’aquesta
manera, el model UTXO sol·luciona el problema del doble pagament.  A m ́es, els UTXOs permeten
tindre m ́ultiples transaccions d’entrada (inputs) i m ́ultiples transaccions de sortida (outputs).
12

Cap ́ıtol 2
Definici ́o
Aquest cap ́ıtol compr`en la definici ́o del prop`osit del projecte, analitzant l’oportunitat que suposa
dins de lablockchainCKB i a qui afecta la producci ́o d’aquest.
2.1    Oportunitat
Actualment,  els usuaris de lablockchainCKB disposen de m ́ultiples carteres per a gestionar els
seus actius digitals, com ara elstokensnatius de lablockchain, altrestokensi NFTs.  Dins d’aquest
conjunt de carteres es trobaCKBull Wallet,  la primera cartera m`obil per lablockchainCKB.
Aquesta cartera ha sigut desenvolupada i mantinguda per Peersyst.  Un dels objectius que va com-
portar el desenvolupament d’aquesta cartera m`obil (per iOS i Android) va ser millorar l’experi`encia
d’usuari per afavorir l’adopci ́o de lablockchain, pel fet que avui en dia gaireb ́e tothom disposa d’un
smartphone.
No obstant aix`o,  les accions que es poden realitzar mitjan ̧cant una cartera dins de CKB s ́on
limitades  a  les  accions  d’enviar  i  rebre  actius  digitals  entre  comptes,  entre  altres  funcionalitats.
Aix ́ı doncs, amb la idea de poder obrir m ́es oportunitats als usuaris de CKB mitjan ̧cant la cartera
CKBull Wallet, va sorgir l’oportunitat d’aquest projecte.
Nervos,  l’empresa  darrere  de  la  creaci ́o  de  CKB,  va  voler  desenvolupar  unaplataforma  de
pagaments i signatures digitalson qualsevol dApp creada per desenvolupadors pogu ́esagilit-
zar i millorar l’experi`encia d’usuari a l’hora de fer transaccions d’actius entre dApp i
usuari.  Per entendre millor aquest concepte, suposem el seg ̈uent exemple.
Una dApp (anomenada Zara) que ven roba a un preu en CKB (tokennatiu de lablockchainCKB)
vol  poder  integrar  els  pagaments  dels  seus  usuaris  amb  la  cartera  CKBull  Wallet  d’una  manera
semblant a la que funciona el SCA (Strong Costumer Authentication) per a compres online amb di-
ners fiduciaris (com euros).  La seg ̈uent figura mostra un exemple de com funcionaria la plataforma
durant un pagament (transacci ́o) entre un usuari i una dApp.
13

Figura 2:  Exemple d’una transacci ́o entre una dApp i un usuari amb la nova funcionalitat.
Font:  elaboraci ́o pr`opia
Aix ́ı doncs, l’objectiu d’aquest projecte resideix en desenvolupar una soluci ́o que permeti integrar
a una dApp dins de l’ecosistema de CKB perqu`e l’usuari pugui gestionar peticions de transaccions
mitjan ̧cant la cartera CKBull Wallet.
Per a donar-li un nom d’aqu ́ı en endavant a la soluci ́o del projecte, aquest rebr`a el nom deCKBull
Signer App.
2.2    Actors implicats
En  ser  una  col·laboraci ́o  empresarial  entre  dues  empreses,  el  nombre  de  parts  interessades  en  la
producci ́o del projecte  ́es m ́es elevada en comparaci ́o amb una producci ́o pr`opia del producte per
part de Peersyst.  Per a entrar m ́es en detall, a continuaci ́o es detallen els principals actors i parts
implicades en aquest projecte:
•Autor del Treball Final de Grau:Principal interessat en la producci ́o i finalitzaci ́o del
projecte.
•CKBull Wallet:Cartera de criptomonedes m`obil on els usuaris de la wallet podran gaudir
de la nova funcionalitat.
•Desenvolupadors  d’aplicacions  descentralitzades  a  l’ecosistema  CKB:Actors  in-
teressats en el desenvolupament del sistema per aportar major qualitat als seus productes i
millorar l’experi`encia d’usuari.
•Director del Treball Final de Grau:Ferran Prat Tio,  CEO de Peersyst i director del
projecte,  ́es el principal encarregat del seguiment i supervisi ́o dels objectius del projecte.
•Nervos:Empresa  col·laboradora i  beneficiada  de la  creaci ́o  del  sistema,  aportant  major
facilitat d’ ́us del seu ecosistema per als seus usuaris.
•CKBBlockchain:Actor i tecnologia sobre la que es desenvolupar`a el projecte.
•Peersyst:Empresa  creadora  del  projecte  i  principal  interessada  en  la  producci ́o  d’una
sol·luci ́o de qualitat, segura, escalable i usable.
•Ponent del Treball Final de Grau:Com a ponent del Treball Final de Grau, en Carles
Farr ́e Tost  ́es l’encarregat de guiar el treball a l’autor aix ́ı ajudar en la possible resoluci ́o de
conceptes.
14

•Usuari  de  CKB:Actor  beneficiat  de  la  producci ́o  del  projecte  respecte  a  l’ ́us  d’aquest.
Interessat a obtenir major control sobre les seves transaccions i actius digitals.
•Potencials competidors:Encara que Peersyst  ́es l’ ́unica empresa que duu a terme el pro-
jecte sobre lablockchainCKB, altres empreses o organitzacions poden fer projectes semblants
per a altresblockchainscompetidores amb CKB.
•Usuaris nous en la tecnologia:Possibles actors interessats en el nou sistema i atrets pel
seu  ́us dins de l’ecosistema de Nervos.
15

Cap ́ıtol 3
Justificaci ́o
En aquest cap ́ıtol es detalla en quina posici ́o es troba el projecte respecte al mercat actual a la data
de finals de febrer de 2023.  A m ́es, s’elaborar`a una an`alisi sobre quins s ́on els punts forts i febles
de la soluci ́o respecte a els seus potencials competidors.
3.1    Estudi de mercat
Pr`eviament al desenvolupament del projecte,  ́es important ser conscient de la situaci ́o de la qual
es parteix a l’hora d’iniciar el projecte.  Cal obtenir certa perspectiva sobre el sector de lablockc-
hain, especialment de lablockchainCKB, per avaluar com d’ ́unic, prometedor i viable  ́es el nostre
projecte en comparaci ́o amb els projectes actuals o potencials competidors.  Com a objectiu addi-
cional d’aquest estudi de mercat, no busquem  ́unicament trobar potencials competidors del nostre
projecte, sin ́o buscar altres solucions que puguin aportar altres idees de com desenvolupar la soluci ́o.
Abans  d’iniciar  l’estudi  de  mercat,   ́es  rellevantdeterminar  quins  punts  principals  tindr`a
la nostra soluci ́oper, a continuaci ́o, fer una comparativa entre altres solucions disponibles.  Com
s’ha descrit al cap ́ıtol anterior, l’objectiu d’aquest projecte  ́esintegrar una plataforma de pa-
gaments amb l’actual cartera CKBull Wallet, una de les moltes altres carteres que existeixen
dins de lablockchainCKB i que poden tractar-se com a potencials competidors.
•F1 - Cartera sobre CKB:La cartera permet visualitzar el balan ̧c d’un compte a lablockc-
hainCKB.
•F2 - Plataforma per enregistrar dApps :Disposa d’una plataforma per als desenvolu-
padors d’aplicacions descentralitzades per a enregistrar les seves aplicacions al sistema.
•F3 - Passarel·la de pagament (o semblant) :Permet a l’usuari poder signar transaccions
generades per tercers.
•F4 - Aplicaci ́o m`obil:La cartera de criptomonedes t ́e aplicaci ́o m`obil.
•F5 - Aplicaci ́o multiplataforma:  La cartera de criptomonedes es troba disponible tant
per iOS com per Android (en cas de ser una aplicaci ́o m`obil).
•F6 - SDK / Llibreria:El producte disposa d’un SDK o llibreries que permeti als desenvo-
lupadors implementar funcionalitats de firma als seus projectes.
16

•F7 - Funciona sobre testnet i mainnet:El producte funciona sobre les dues xarxes de
lablockchainCKB: testnet i mainnet.
Un cop definides les funcionalitats que s ́on rellevants dins la nostra soluci ́o,  ́es hora d’investigar
quins altres productes ja existents poden declarar-se competidors.  Els possibles competidors del
sistema s ́on els seg ̈uents:
•Neuron:  Neuron  ́es de les primeres carteres de CKB que es van desenvolupar.  Els creadors
darrere  d’aquestsoftware ́es  l’empresa  Nervos  amb  la  que  es  col·labora  en  aquest  projec-
te.   Aquesta  cartera  nom ́es  pot  ser  utilitzada  com  a  aplicaci ́o  d’escriptori,  ja  que  es  troba
disponible per als sistemes operatius Windows, MacOS i Linux [12].
•ImToken: Cartera de criptomonedes multiblockchain que permet gestionar els actius digitals
de diferentsblockchains.  No obstant, la seva funcionalitat sobre lablockchainCKB es limita
a enviar i rebre transaccions.  T ́e format d’aplicaci ́o m`obil disponible per a iOS i Android [13].
•SafePal: Com ImToken, SafePal es una cartera de criptomonedes multiblockchain que tamb ́e
permet gestionar els actius de lablockchainCKB. No obstant aix`o, a difer`encia d’ImToken
aquesta permet intercanviar tipus de criptomonedes dins de l’aplicaci ́o [14].
•JoyID: A difer`encia de la resta de productes avaluats, JoyID  ́es una cartera de criptomonedes
per  a  la  web.   Aquesta  t ́e  com  a  finalitat  eliminar  barreres  tecnol`ogiques  per  a  una  millor
adopci ́o  de  la  tecnologiablockchain.   Malauradament,  aquesta  cartera   ́unicament  treballa
sobre la xarxatestnetino t ́e cap utilitat sobre les xarxes mainnet[15].
Aix ́ı  doncs,  a  la  taula  seg ̈uent  es  mostra  el  resultat  de  l’estudi  de  mercat  realitzat  sobre  les
funcionalitats principals de la nostra soluci ́o en comparaci ́o amb els potencials competidors:
Atributs
ProductesF1F2F3F4F5F6F7
CKBull Signer AppS ́ıS ́ıS ́ıM ́obilS ́ıS ́ıS ́ı
NeuronS ́ıNoNoEscriptoriNoNoS ́ı
ImTokenS ́ıNoNoM`obilS ́ıSiS ́ı
SafePalS ́ıNoNoM`obilSNoS ́ı
JoyIDS ́ıNoNoWebNoS ́ıNo
Taula 1:  Comparativa de mercat entre diferents productes i la soluci ́o del projecte.
3.2    Conclusions
Com podem observar a la Taula 1, existeixen dos productes que m ́es funcionalitats comparteixen
amb la nostra soluci ́o.  Aquests dos productes s ́onImTokeniSafePal.  Tot sent les dues carteres
de criptomonedes en format d’aplicaci ́o m`obil, la principal manca de la qual no disposen  ́es de les
funcionalitats F2 i F3.  Les dues carteres no disposen d’una plataforma que permeti a dApps ges-
tionar de manera interna pagaments generats per aquestes, ni una plataforma on aquestes puguin
enregistrar-se per a formar part de la cartera.  El producte m ́es semblant que pot arribar a ser un
potencial competidor per a CKBull Signer API  ́esImToken.  Aquesta cartera disposa d’integraci ́o
17

amb dApps, incloent-hi una API per a desenvolupadors perqu`e lliguin la dApp a la cartera.  Malgrat
aix`o, no fa cap refer`encia a poder generar peticions de transaccions entre dApp i la cartera.  A m ́es,
en ser ImToken una carteramultiblockchainperd el factor d’exclusivitat que poden rebre
els usuarisutilitzant CKBull Wallet, on disposen de m ́es funcionalitats sobre lablockchainCKB
que aquest competidor.
Respecte  a  la  resta  de  productes,  Neuron  no  es  considera  una  cartera  amb  risc  potencial  sobre
el projecte, perqu`e funciona sobre un entorn diferent (escriptori) a CKBull Wallet i no disposa de
cap mena d’integraci ́o per a desenvolupadors.
Per acabar, JoyID no es considera tampoc un producte que pugui afectar a la soluci ́o del projecte
en el curt termini, pel fet que aquest es troba en una fase inicial de desenvolupament perqu`e nom ́es
funciona sobre la xarxa testnet de CKB. Aix`o no obstant,  ́es convenient mantenir un cert seguiment
perqu`e en un futur poden comprometre la soluci ́o del projecte si desenvolupen funcionalitats que
millorin l’adopci ́o de CKB per part dels usuaris.
18

Cap ́ıtol 4
Abast
Dins d’aquest cap ́ıtol del projecte, es definiran els objectius a aconseguir per a la finalitzaci ́o del
projecte,  aix ́ı  com  els  corresponents  subobjectius,  requisits  funcionals  i  no  funcionals.   A  m ́es,
s’analitzaran els possibles obstacles i riscos que poden sorgir durant la vida del projecte i com es
reaccionar`a davant d’aquests per a mitigar l’impacte que comportin.
4.1    Objectius
El resultat final del projecte ha de satisfer els seg ̈uents objectius per a classificar-ho com a satisfac-
tori.  La notaci ́o utilitzada per a definir els objectius i subobjectius correspon a OBX (on X indica
el nombre d’objectiu) i OBX.Y (on Y indica el nombre de subobjectiu i X refer`encia el nombre
d’objectius al qual pertany).
•OB1:Oferir  un  espai  als  desenvolupadors  dedAppspuguin  enregistrar  les  seves  dApps  a
CKBull Signer App.
–  OB1.1:  L’espai ha de permetre enregistrar una dApp al sistema, poder visualitzar la
seva informaci ́o, editar-la i eliminar-la de la plataforma.
•OB2:Oferir una plataforma que permeti a les dApps enviar peticions sobre els usuaris de
CKBull Wallet.
–  OB2.1:  La plataforma ha de permetre a una dApp enregistrada per un desenvolupador
enviar peticions d’inici de sessi ́o on s’identificar`a a l’usuari de CKBull Wallet.
–  OB2.2:  La plataforma ha de permetre a una dApp enregistrada per un desenvolupador
enviar peticions de transacci ́o sobre usuaris de CKBull Wallet pr`eviament identificats.
•OB3:Permetre a l’usuari deCKBull Walletprendre accions de signatura i rebutjament de
peticions de transaccions realitzades per dApps enregistrades al sistema.
•OB4:Mantenir el projecte sotatesting
1
[16] durant el desenvolupament i pas a producci ́o
d’aquest per garantir un funcionament correcte.
1
Testing:Proc ́es d’evaluaci ́o i verificaci ́o del comportament sobre un producte desoftwareo aplicaci ́o.
19

4.2    Requisits funcionals
Un cop definits els objectius principals del projecte,  definim els requisits funcionals del projecte
que determinaran si la soluci ́o del projecte s’ha dut a terme amb `exit.  La seva notaci ́o correspon a
RFX (on X indica el nombre de requisit).
•RF1:El  sistema  ha  de  permetre  als  desenvolupadors  poder  enregistrar-se  al  sistema  mit-
jan ̧cant l’ ́us d’un correu electr`onic personal o un compte de Google.
•RF2:El sistema ha de permetre als desenvolupadors enregistrar, consultar, editar i esborrar
una o v`aries dApps.
•RF3:El  sistema  ha  d’obligar  als  desenvolupadors  de  dApps  a  autenticar-se  per  a  poder
utilitzar l’espai d’enregistrament de dApps.
•RF4:El sistema ha de permetre generar credencials perqu`e el sistema identifiqui les dApps
enregistrades dels desenvolupadors.
•RF5:El sistema ha de permetre a l’usuari deCKBull Walletacceptar, rebutjar i visualitzar
les peticions d’inici de sessi ́o generades per les aplicacions enregistrades al sistema.
•RF6:El sistema ha de permetre a l’usuari deCKBull Walletacceptar, rebutjar i visualitzar
les transaccions generades per les aplicacions enregistrades al sistema.
•RF7:El sistema ha de permetre a les dApps enregistrades comprovar l’estat de les transac-
cions de les seves aplicacions.
•RF8:El sistema ha de permetre a les dApps enregistrades comprovar l’estat de les peticions
d’inici de sessi ́o de les seves aplicacions.
•RF9:S’ha d’oferir als desenvolupadors la documentaci ́o necess`aria per a poder utilitzar la
plataforma de manera correcta.
4.3    Requisits no funcionals
A m ́es dels requisits funcionals definits a la secci ́o anterior, s’ha volgut definir una s`erie de requisits
no funcionals per a mantenir certs est`andards sobre els diferents dominis:aspecte,rendimenti
seguretat.  La seva notaci ́o correspon a RNFX (on X indica el nombre de requisit).  A continuaci ́o
es llisten els requisits no funcionals per categories segons el sistema Volere [17].
Requisits d’aspecte
•RNF1 - Aparen ̧ca: El sistema ha de mantenir una aparen ̧ca semblant amb altres productes
de Nervos.
•RNF2 - Usabilitat: El sistema ha d’evitar que l’usuari produeixi errors durant l’ ́us d’aquest.
Requisits d’usabilitat i d’humanitat
•RNF3 - Internacionalitzaci ́o:  El sistema, incloent-hi l’espai per a desenvolupadors i CK-
Bull Wallet, ha de disposar de suport d’idioma angl`es i castell`a.
20

Requisits de rendiment
•RNF4  -  Fiabilitat  i  disponibilitat:  El  sistema  ha  de  ser  usable  el  90%  del  temps  que
estigui actiu.
Requisits de seguretat
•RNF5 - Acc ́es:  El sistema nom ́es ha de permetre l’acc ́es a desenvolupadors i dApps mit-
jan ̧cant credencials v`alides.
•RNF6 - Privacitat:  El sistema ha de complir els requisits necessaris detectats al RGPD
2
.
4.4    Obstacles i riscos
L’espai de temps que comporta la realitzaci ́o del Treball de Grau comen ̧ca a finals de gener de 2023
i  acaba  finals  de  juny  del  mateix  any.   Sis  mesos  de  desenvolupament  ́es  temps  suficient  perqu`e
puguin sorgir certs obstacles i impediments que afectin de manera negativa sobre la producci ́o del
projecte.  Per a poder reaccionar de la manera m ́es r`apida i eficient possible, es llisten a continuaci ́o
els possibles obstacles i riscos contemplats dins del domini del projecte:
•OR1  -  Limitacions  de  coneixement  i  limitacions  t`ecniques:  El  projecte  tracta  de
manera directa conceptes sobreblockchain, comunicacions i transaccions, en espec ́ıfic sobre
el  domini  de  lablockchainCKB.  Aprendre  els  conceptes  necessaris  requereix  cert  temps  i
romandr`a present durant el desenvolupament del projecte.  Aix`o no obstant, dins de l’equip
de Peersyst hi ha professionals coneixedors d’aquests conceptes.  A m ́es,Nervosofereix do-
cumentaci ́o  elaborada  sobre  tots  els  aspectes  que  es  treballaran  dins  del  projecte,  fet  que
facilitar`a l’aprenentatge.
•OR2 - Salut:En recaure el desenvolupament en una  ́unica persona, existeix la possibilitat
de patir una malaltia o incapacitat que no permeti continuar el treball durant un cert temps.
Aquest fet s’hauria de tindre en compte respecte a la planificaci ́o de les tasques i entregues.
•OR3 - Manca o error a la definici ́o:No definir de manera exhaustiva el problema i la
sol·luci ́o a implementar pot comportar un efecte negatiu que arrossegui errors cada cop que
avanci el projecte.
 ́
Es realment important trobar els principals punts de fallada del sistema i
planificar i gestionar de manera efica ̧c, i a poder ser eficient, els casos d’ ́us m ́es cr ́ıtics.
•OR4 - Aparici ́o imprevista d’errors obugs:A causa de la magnitud del projecte, s’ha
de tindre en compte que sorgiran errors ibugs
3
de totes dimensions.  El problema principal
que comporten  ́es l’endarreriment que generi implementar una soluci ́o per aquests, ja que la
incertesa sobre la tipologia d’aquests es completa i  ́es dif ́ıcil poder prevenir i classificar com
afectaran el projecte.  Per a poder estar m ́ınimament preparats  ́es valu ́os deixar cert marge
temporal a la planificaci ́o per a possibles aparicions.
2
RGPD: Reglament Europeu de Protecci ́o de Dades.
3
Bug:  Error o defecte que causa un resultat incorrecte o inesperat en un programa o sistema, o que es comporti
de forma no prevista.
21

Cap ́ıtol 5
Metodologia i rigor
5.1    Metodologia de treball
La  metodologia  de  treball  utilitzada  al  projecte  ́es  la  metodologia  utilitzada  a  l’equip  de  desen-
volupament de Peersyst.  Peersyst fa servirScrum[18].  Aquesta metodologia t ́e com a objectiu
completar divisions de tasques en un determinat temps.  Aquests per ́ıodes de temps s’anomenen
Sprints, on s’inclouen un nombre de tasques a completar, i en el cas de Peersyst tenen una duraci ́o
de dues setmanes.
A l’inici del projecte, les funcionalitats s ́on definides i segmentades en tasques alProduct Backlog,
on, posteriorment, es distribuiran als diferents Sprints de desenvolupament.
Respecte a la sincronitzaci ́o entre els membres de l’equip, es realitzen a cadaSprintdiferents
esdeveniments per tal de garantir un seguiment i desenvolupament controlat:
•Sprint Planning:Reuni ́o que t ́e lloc a l’inici de cada sprint on es decideix que es produir`a
durant les pr`oximes dues setmanes.
•Daily Stand Up:Reuni ́o di`aria on tots els membres de l’equip posen en com ́u l’estat de
desenvolupament, aix ́ı com errors trobats i idees.
•Sprint Retrospective:Reuni ́o en finalitzar el sprint on es posen en com ́u totes les idees i
esdeveniments que hagin succe ̈ıt durant aquest.
22

Figura 3:  Diagrama del funcionament d’unSprintambScrum.
Font:  PM-Partners.
5.2    Eines de suport a la metodologia
Un  cop  especificada  la  metodologia  de  treball  emprada,  es  descriuran  les  eines  de  suport  que
s’utilitzaran durant el desenvolupament del projecte i ajudaran a seguir i mantenir la metodologia:
•Slack:Softwarede missatgeria digital que permet la comunicaci ́o entre membres d’un equip
mitjan ̧cant canals i sistemes de trucades.  Ser`a utilitzat per a realitzar elSprint  Planning,
Daily Scrum i Sprint Retrospective[19].
•Github:Plataforma en l ́ınia per allotjar principalment repositoris de codi. Peersyst gestiona
tots els seus projectes a Github degut a les integracions amb eines descrites a continuaci ́o [20].
•Github Projects:Eina per a planificaci ́o de projectes.  L’equip de Peersyst fa  ́us d’aquest
softwareper a mantenir un control i seguiment de l’estat dels projectes [21].
•Github Actions:Eina deContinuous  Intergration/Deployment[22] que permet agilitzar
processos d’integraci ́o del codi i desplegament de projectes [23].
23

Cap ́ıtol 6
Planificaci ́o
Un cop definit l’abast del projecte, la seg ̈uent passa correspon a definir la planificaci ́o per completar
l’abast.  En aquest cap ́ıtol es tractar`a la planificaci ́o total del projecte.  La planificaci ́o engloba el
conjunt de tasques a realitzar i els recursos necessaris per a desenvolupar aquestes tasques.  En el
seg ̈uent cap ́ıtol es parlar`a dels riscos associats a la planificaci ́o descrita.
Per  comen ̧car,  cal  remarcar  que  aquest  projecte  es  duu  a  terme  sota  la  modalitat  B  (empresa)
i, per tant, la longitud del projecte com les seves dades d’inici i fi venen condicionades per les dades
del contracte acordades entre Peersyst i Nervos.
Aquesta  planificaci ́o  es  dividir`a  en  franges  de  treball  de  dues  setmanes,  anomenadessprints,  on
es desenvoluparan, revisaran i milloraran les tasques.  Aix ́ı doncs, l’espai temporal que compr`en el
desenvolupament del projecte  ́es el seg ̈uent:
•Sprint 1:del 23 de gener al 3 de febrer.
•Sprint 2:del 6 de febrer al 17 de febrer.
•Sprint 3:del 20 de febrer al 3 de mar ̧c.
•Sprint 4:del 6 de mar ̧c al 17 de mar ̧c.
•Sprint 5:del 20 de mar ̧c al 31 de mar ̧c.
•Sprint 6:del 3 d’abril al 14 d’abril.
Pr`eviament a la descripci ́o de les tasques, el nomCKBull Developer Consolefar`a refer`encia
a  la  plataforma  que  utilitzaran  els  desenvolupadors  de  dApps  per  enregistrar  les  seves  dApps  i
realitzar les peticions entre aquestes i els usuaris de la cartera CKBull Wallet.
6.1    Descripci ́o de les tasques
En tractar-se d’un projecte que compr`en diferents `arees de desenvolupament s’ha decidit agrupar
les tasques segons l’`area a la qual pertanyi.  Cada tasca tindr`a un identificador format per l’`area a
qu`e pertany i el n ́umero que s’ha assignat.
•Gesti ́o i documentaci ́o del projecte (GDP):refer`encia a totes les tasques i processos de
gesti ́o del projecte i documentaci ́o d’aquest.
24

•Desenvolupament de CKBull Developer Console (DCDC):refer`encia a totes les tas-
ques de disseny i implementaci ́o de la plataforma per enregistrar dApps i enviament de peti-
cions entre dApps i usuaris (de CKBull Wallet).
•Desenvolupament  de  CKBull  Wallet  (DCW):refer`encia  a  totes  les  tasques  d’imple-
mentaci ́o de l’aplicaci ́o m`obil CKBull Wallet.
6.1.1    Gesti ́o i documentaci ́o del projecte
•GDP1 - Contextualitzaci ́o i abast:Redactar els conceptes previs i la introducci ́o del pro-
jecte per despr ́es definir els objectius principals del projecte, aix ́ı com els requisits funcionals
i no funcionals.
•GDP2 - An`alisi temporal:identificar i analitzar les fases del projecte i definir les tasques
necess`aries a realitzar per a la finalitzaci ́o d’aquest.
•GDP3 - Sostenibilitat:investigaci ́o i avaluaci ́o dels impactes mediambientals i socials que
suposa el desenvolupament i la producci ́o del projecte.
•GDP4 - Sostenibilitat econ`omica:avaluar i definir els costos econ`omics que comporta el
projecte i analitzar la viabilitat d’aquest.
•GDP5 - Documentaci ́o del projecte:redacci ́o de la mem`oria del Treball Final de Grau.
•GDP6 - Defensa del projecte:preparaci ́o de la defensa del Treball Final de Grau.
6.1.2    Desenvolupament de CKBull Developer Console
Configuraci ́o del projecte
•DCDC1.1  -  Configuraci ́o  base  UI:creaci ́o  del  projecte  base,  instal·laci ́o  de  llibreries  i
depend`encies i configuraci ́o de la UI
1
[24].
•DCDC1.2 - Configuraci ́o base API:creaci ́o del projecte base i instal·laci ́o de llibreries
necess`aries per al desenvolupament de l’API
2
[25].
Sistema de creaci ́o d’usuaris
•DCDC2.1 - Creaci ́o, obtenci ́o, edici ́o i eliminaci ́o d’usuaris:implementar les crides
necess`aries per a poder crear un usuari, editar-lo i eliminar-lo de la base de dades, obtenir la
seva informaci ́o tant per un com per molts usuaris.
•DCDC2.2 - Proc ́es d’autenticaci ́o i d’autoritzaci ́o:implementar un sistema d’auten-
ticaci ́o i autoritzaci ́o respecte als usuaris, limitant les seves accions dins del sistema respecte
als recursos i definint rols d’autoritzaci ́o.
•DCDC2.3 - Formularis d’inici de sessi ́o i enregistrament:implementar els formularis
que permetin als usuaris iniciar sessi ́o i enregistrar-se dins de la plataforma.
•DCDC2.4 - Vistes d’inici de sessi ́o i enregistrament:Vistes d’inici de sessi ́o i enregis-
trament d’usuaris.
1
UI: User Interface.
2
API: Application Programming Interface.
25

•DCDC2.5  - Securitzaci ́o (1):investigaci ́o  i  implementaci ́o  de  mecanismes  de  seguretat
per millorar la robustesa del sistema.
Sistema de creaci ́o de dApps
•DCDC3.1 - Creaci ́o, obtenci ́o, edici ́o i eliminaci ́o dedApps:implementar les crides
necess`aries per a poder enregistrar unadApp, editar la seva informaci ́o i eliminar-la de la base
de dades, obtenir la seva informaci ́o tant per un com per moltes dApps creades pel mateix
desenvolupador [9].
•DCDC3.2 - Formularis CRUD de lesdApps:implementar els formularis que permetin
crear, editar, eliminar i visualitzar el contingut dedApps.
•DCDC3.3 - Vistes per interactuar amb lesdApps:implementar vistes que utilitzin
els formularis anteriors perqu`e l’usuari pugui navegar entre aquestes.
•DCDC3.4 - Obtenci ́o i regeneraci ́o de credencials:implementar les crides necess`aries
per a poder aconseguir les credencials API d’unadAppi regenerar-les a petici ́o de l’usuari.
•DCDC3.5  - Securitzaci ́o (2):investigaci ́o  i  implementaci ́o  de  mecanismes  de  seguretat
per millorar la robustesa del sistema.
Sistema de peticions de transaccions
•DCDC4.1 - Disseny i implementaci ́o de sistema de peticions:implementar les crides
per  a  poder  generar  peticions  d’inici  de  sessi ́o  i  peticions  de  transacci ́o  com  adAppssota
demanda.
•DCDC4.2  -  Polling  d’estat  de  les  peticions:implementar  un  sistema  depollingo
consultes constants per permetre a lesdAppsobtenir l’estat d’una petici ́o (inici de sessi ́o o
transacci ́o).
•DCDC4.3  - Securitzaci ́o (3):investigaci ́o  i  implementaci ́o  de  mecanismes  de  seguretat
per millorar la robustesa del sistema.
Pas a producci ́o
•DCDC5.1 - Desplegament del projecte:portar tant la plataforma CKBull Developer
Console i l’aplicaci ́o CKBull Wallet amb les noves funcionalitats a l’entorn de producci ́o a la
fase final del projecte.
6.1.3    Desenvolupament de CKBull Wallet
Sistema de firma de transaccions
•DCW6.1 - Redisseny dels components necess`aris a la UI:redissenyar mitjan ̧cant estils
els components necessaris dins de l’aplicaci ́o deCKBull Wallet.
•DCW6.2  -  Creaci ́o  dels  nous  components  de  l’aplicaci ́o:definir  i  implementar  els
nous components de la UI necessaris per a poder signar o rebutjar peticions procedents d’una
dApp.
26

•DCW6.3 - Obtenir, acceptar o declinar peticions:implementar les vistes necess`aries
perqu`e l’usuari de CKBull Wallet pugui visualitzar la informaci ́o de cada petici ́o, el seu estat
i pugui acceptar o rebutjar aquestes.
6.2    Recursos
A  m ́es  de  definir  les  tasques  que  s’han  de  realitzar,  tamb ́e  ́es  necessari  estimar  quins  recursos  i
de quin tipus s’hauran d’utilitzar.  Les seg ̈uents taules representen tots els recursos previstos que
s’ha estimat que s’usaran durant el proc ́es de desenvolupament del projecte.  Els recursos es classi-
fiquen segons la categoria a la qual pertanyen, que poden ser:humans,f ́ısics,espacialsidigitals.
Recursos humans
Dintre d’aquests recursos es troben totes les persones involucrades dins del projecte.  No obstant
aix`o, dintre d’aquesta categoria  ́es dos tipus diferents de recursos:recursos humans internsi
recursos humans externs.  Els recursos humans interns s ́on tots aquells recursos que interactuen
de manera directa amb el TFG, mentre que els externs actuen de manera indirecta sobre el projecte.
Recursos humans interns
SiglesRolPersona
DPDesenvolupador principalGuillem Garc ́ıa Gil
CPProject ManagerAdri`a Carrera Mas
TTutor del projecteFerran Prat Tio
TPTutor ponentCarles Farr ́e Tost
TGEPTutor de GEPNatalia de F ́atima S ́anchez Arrieta
Taula 2:  Recursos humans interns.
Recursos humans externs
SiglesRol
URAUrano Studio
Taula 3:  Recursos humans externs.
El recurs hum`a descrit a la Taula 3 correspon a una empresa de disseny de producte anomenada
Urano Studio [26].  La seva relaci ́o del projecte consta de la necessitat d’encarregar dissenys per
a les noves funcionalitats per a les interf ́ıcies tant de CKBull Developer Console com de CKBull
Wallet.
Recursos f ́ısics
Els recursos f ́ısics fan refer`encia a tot el materialhardwareutilitzat durant el projecte.
27

Recursos f ́ısics
SiglesRecurs
FPMPMacbook Pro M1 PRO 14”(2022) [27]
FTApple Magic Keyboard [28]
FRRatol ́ı Logitech MX Master [29]
FS1Servidor d’AWS per l’entorn destaging
FS2Servidor d’AWS magatzem d’imatges
FS3Servidor d’AWS per l’entorn de producci ́o
Taula 4:  Recursos f ́ısics.
Recursos espaials
La  metodologia  de  treball  de  Peersyst  consta  de  la  realitzaci ́o  de  la  jornada  de  manera  remota.
Per tant, gran part de la fase de desenvolupament es far`a a casa.  Aix`o no obstant, per a poder
simular un entorn semblant al que seria una oficina, s’ha decidit afegir un espai decoworking
3
,
als recursos per a despr ́es poder fer una estimaci ́o pressupost`aria m ́es realista.  La seg ̈uent taula
mostra els recursos espacials utilitzats.
Recursos espaials
SiglesRecurs
IDTInstal·lacions de treballcoworking
Taula 5:  Costs sobre recursos espaials.
Recursos digitals
Per finalitzar, els recursos digitals faran refer`encia a tot elsoftwarenecessari per a poder desenvo-
lupar el projecte.  Dins d’aquesta categoria es troben tant recursos per poder desenvoluparsoftware
com editors de text per a redactar la mem`oria.
Recursos digitals
SiglesRecurs
DIJIntelliJ IDEA: IDE utilitzat per al desenvolupament del projecte [30].
DGGithub:  Eina online de control de versions i allotjament de repositoris [31].
DGPGithub Projects:  software utilitzat per a mantenir control sobre les tasques [21].
DGAGithub Actions:  software de CI utilitzat al projecte [23].
DSLSlack:  Eina de comunicaci ́o utilitzada a Peersyst [19].
DNVNavegadors web:  Google Chrome, Safari i Mozilla Firefox.
DOOverleaf:  editor online de latex.
Taula 6:  Recursos digitals.
3
Coworking:  Espai  f ́ısic  compartit  entre  diferents  empreses,  aut`onoms,  i  altres  professionals  on  es  realitza  una
jornada laboral.
28

6.3    Resum
Un cop detallades les tasques i els recursos,  a continuaci ́o es mostra a la seg ̈uent taula el resum
general de la planificaci ́o, incloent-hi les hores, depend`encies entre tasques i els recursos utilitzats
per cada una.  Per a una visualitzaci ́o m ́es detallada de la planificaci ́o temporal, la Figura 4 mostra
la planificaci ́o temporal.
29

IDNomHoresDepend`enciesRecursos
GPGesti ́o de projecte162
GDP1Contextualitzaci ́o i abast20
DP,  T,  TP,  FPMP,  FT,  FR,  O,
DNV, DSL
GDP2An`alisi temporal12GDP1
DP, T, TP, SM, FPMP, FT, FR, O,
DNV, DSL
GDP3Sostenibilitat10GDP2
DP,  T,  TP,  FPMP,  FT,  FR,  O,
DNV, DSL
GDP4Sostenibilitat econ`omica10GDP2
DP,  T,  TP,  FPMP,  FT,  FR,  O,
DNV, DSL
GDP5Documentaci ́o del projecte90
DP,  T,  TP,  FPMP,  FT,  FR,  O,
DNV, DSL
GDP6Defensa del projecte20
DP,  T,  TP,  FPMP,  FT,  FR,  O,
DNV, DSL
DCDC1Configuraci ́o base12
DCDC1.1Configuraci ́o base UI6
DP, SM, FPMP, FT, FS1, FR, DIJ,
DG, DGP, DGA, DSL, DNV
DCDC1.2Configuraci ́o base API6
DP, SM, FPMP, FT, FS1, FR, DIJ,
DG, DGP, DGA, DSL, DNV
DCDC2Sistema de creaci ́o d’usuaris90
DCDC2.1Creaci ́o, obtenci ́o, edici ́o i eliminaci ́o ́d’usuaris24
DP, FPMP, FT, FS1, FR, DIJ, DG,
DGP, DGA, DSL, DNV
DCDC2.2Proc ́es d’autenticaci ́o i d’autoritzaci ́o24DCDC2.1
DP, FPMP, FT, FS1, FR, DIJ, DG,
DGP, DGA, DSL, DNV
DCDC2.3Formularis d’inici de sessi ́o i enregistrament16DCDC2.2
DP, FPMP, FT, FS1, FR, DIJ, DG,
DGP, DGA, DSL, DNV
DCDC2.4Vistes d’inici de sessi ́o i enregistrament16DCDC2.3
DP, FPMP, FT, FS1, FR, DIJ, DG,
DGP, DGA, DSL, DNV
DCDC2.5Securitzaci ́o (1)10DCDC2.2
DP, SM, FPMP, FT, FS1, FR, DIJ,
DG, DGP, DGA, DSL, DNV
DCDC3Sistema de creaci ́o de dApps90
DCDC3.1Creaci ́o, obtenci ́o, edici ́o i eliminaci ́o de dApps16DCDC1.2
DP, FPMP, FT, FS1, FR, DIJ, DG,
DGP, DGA, DSL, DNV
DCDC3.2Formularis CRUD de les dApps20DCDC3.4
DP, FPMP, FT, FS1, FR, DIJ, DG,
DGP, DGA, DSL, DNV
DCDC3.3Vistes per interactuar amb les dApps20DCDC2.4, DCDC3.2
DP, FPMP, FT, FS1, FR, DIJ, DG,
DGP, DGA, DSL, DNV
DCDC3.4Obtenci ́o i regeneraci ́o de credencials24DCDC3.1
DP, FPMP, FT, FS1, FR, DIJ, DG,
DGP, DGA, DSL, DNV
DCDC3.5Securitzaci ́o (2)10DCDC3.3,
DP, SM, FPMP, FT, FS1, FR, DIJ,
DG, DGP, DGA, DSL, DNV
DCDC4Sistema de peticions de transaccions54
DCDC4.1Disseny i implementaci ́o de sistema de peticions30
DP, FPMP, FT, FS1, FR, DIJ, DG,
DGP, DGA, DSL, DNV
DCDC4.2Polling d’estat de les peticions12DCDC4.1
DP, FPMP, FT, FS1, FR, DIJ, DG,
DGP, DGA, DSL, DNV
DCDC4.3Securitzaci ́o (3)12DCDC4.2
DP, SM, FPMP, FT, FS1, FR, DIJ,
DG, DGP, DGA, DSL, DNV
DCDC5Pas a producci ́o8
DCDC5.1Desplegament del projecte8DCDC3.4, DCDC4.3, DCW1.3
DP, FPMP, FT, FR, FS1, FS2, FS3,
DIJ, DG, DGP, DGA, DSL, DNV
DCDW1Sistema de firma de transaccions82
DCDW1.1Redisseny dels components necess`aris a la UI30
DP, FPMP, FT, FS1, FR, DIJ, DG,
DGP, DGA, DSL, DNV
DCDW1.2Creaci ́o dels nous components de l’aplicaci ́o28
DP, FPMP, FT, FS1, FR, DIJ, DG,
DGP, DGA, DSL, DNV
DCDW1.3Obtenir, acceptar o declinar peticions24DCDW1.1, DCDW1.2
DP, FPMP, FT, FS1, FR, DIJ, DG,
DGP, DGA, DSL, DNV
Taula 7:  Resum de les tasques.
30

Figura 4:  Diagrama de Gantt
Font:  elaboraci ́o pr`opia.
31

Cap ́ıtol 7
Riscos
Per  a  poder  dur  a  terme  el  projecte  segons  la  planificaci ́o  feta  ́es  important  ser  conscients  dels
possibles  riscos  que  assumim  o  ens  podem  trobar.   Aquests  poden  ser  generats  per  la  mateixa
planificaci ́o o ser factors externs al projecte.  A continuaci ́o, es presenta quins riscos s’han detectat,
quin impacte poden tindre sobre el projecte i com es respondr`a davant d’aquests.
Riscos detectats
Risc
Impacte  sobre  el
projecte
PercentatgeResposta
Manca o error a la definici ́o de tasquesAlt70%
Dedicar temps i esfor ̧c en una
bona planificaci ́o.
Limitacions  de  coneixement  i  limitacions
t`ecniques
Mitj`a40%
Estudiar  quines  `arees  de  co-
neixement envolten el projec-
te   i   profunditzar   a   les   ne-
cess`aries.
Aparici ́o d’errors i bugsMitj`a40%
Realitzar   testing   unitari   i
d’integraci ́o  per  a  verificar  el
funcionament correcte.
SalutMitja / Alt60%
Redistribuir la prioritat de les
tasques  segons  el  temps  res-
tant.
Taula 8:  Riscos detectats en el projecte.
Tots els riscos especificats a la Taula 8 fan refer`encia als riscos definits a la Secci ́o 4.4.  Com
es pot observar, gran part dels riscos tenen un impacte mitj`a/alt sobre el projecte, ra ́o per la qual
s’han de tindre clars els mecanismes de resposta en cas que succeeixin.  Els tres primers compten
com a riscos generats amb la planificaci ́o o interns del projecte, mentre que la malaltia  ́es un factor
extern dif ́ıcil de prevenir i, per tant, la resposta contra aquesta ser`a la menys efectiva respecte als
altres riscos.  Aix ́ı doncs, s’haur`a de fer m ́es `emfasi en els tres primers.
32

Cap ́ıtol 8
Pressupost
Per a poder estimar quin cost econ`omic comporta la soluci ́o del projecte, en aquest cap ́ıtol, s’ha
realitzat un pressupost especificant els costos de cada recurs definits a la Secci ́o 6.2.
8.1    Identificaci ́o dels costos
En aquesta secci ́o s’identifiquen tots els costos del projecte.  Tots els costos i preus dins d’aquest
document seran mostrats en la divisa Euro (e).  Els costos estan agrupats segons la categoria o
grup al qual pertanyen.
•Costos sobre recursos humans interns
•Costos sobre recursos humans externs
•Costos sobre recursos f ́ısics
•Costos sobre recursos espacials
•Costos sobre recursos digitals
Els costos resultants de les seg ̈uents taules han sigut calculats de la seg ̈uent manera.  Respecte als
recursos humans internsirecursos humans externss’ha calculat:
Cost total = Sou hora brut×Cost SS×hores de desenvolupament
Tenint en compte com aCost SSun factor multiplicatiu de 1.33 per a simplificar el c`alcul.  Respecte
alsrecursos digitals i espacials, s’ha calculat el cost total segons la tarifa del recurs pel temps
d’ ́us d’aquest.  Es pot veure representat com:
Cost total = Tarifa del recurs×temps d’ ́us
Finalment, l’amortitzaci ́o sobre elsrecursos f ́ısicshardwares’ha calculat a partir de la seg ̈uent
f ́ormula (on la vida  ́util seran quatre anys, dies laborals 220 i 4 hores di`aries):
Amortitzaci ́o =
Cost del recurs
Vida  ́util (anys)×dies laborals×hores di`aries
×hores de projecte
33

8.1.1    Costos sobre recursos humans interns
Els  ́unics actors que participaran en el desenvolupament de les tasques del projecte seran l’autor
principal d’aquest TFG, amb un rol de desenvolupadorfull-stackjunior, i el cap de projecte.  Els
sous  mostrats  a  la  Taula  9  han  sigut  extrets  de  la  webwww.talent.com[32]  per  a  obtenir  una
refer`encia  del  sou  hora  brut  dels  actors  involucrats.   A  m ́es,  cal  tindre  en  compte  el  cost  de  la
seguretat social que, per simplificaci ́o, ser`a el resultat de multiplicar el sou brut per 1.3.
SiglesRolSou hora brutAfegit SS
DPDesenvolupadorfull-stackjunior13,33e17,73e
CPProject Manager18,46e24,55e
Taula 9:  Costos sobre recursos humans interns.
Aix ́ı  doncs,  el  cost  total  dels  recursos  humans  interns  es  mostra  a  la  seg ̈uent  taula  amb  la
quantitat d’hores de les tasques.
34

IDNomHoresDPPMTotal
GPGesti ́o de projecte16216202.872,26e
GDP1Contextualitzaci ́o i abast20200354,60e
GDP2An`alisi temporal12120212,76e
GDP3Sostenibilitat10100177,30e
GDP4Sostenibilitat econ`omica10100177,30e
GDP5Documentaci ́o del projecte90700478,71e
GDP6Defensa del projecte20200354,60e
DCDC1Configuraci ́o base16124310,96e
DCDC1.1Configuraci ́o base UI862155,48e
DCDC1.2Configuraci ́o base API862155,48e
DCDC2Sistema de creaci ́o d’usuaris969061.743,02e
DCDC2.1Creaci ́o, obtenci ́o, edici ́o i eliminaci ́o ́d’usuaris24240425,52e
DCDC2.2Proc ́es d’autenticaci ́o i d’autoritzaci ́o28244523,72e
DCDC2.3Formularis d’inici de sessi ́o i enregistrament16160283,68e
DCDC2.4Vistes d’inici de sessi ́o i enregistrament16160283,68e
DCDC2.5Securitzaci ́o (1)12102226,40e
DCDC3Sistema de creaci ́o de dApps949041.493,90e
DCDC3.1Creaci ́o, obtenci ́o, edici ́o i eliminaci ́o de dApps16160283,68e
DCDC3.2Formularis CRUD de les dApps20200354,60e
DCDC3.3Vistes per interactuar amb les dApps20200354,60e
DCDC3.4Obtenci ́o i regeneraci ́o de credencials API26242474,62e
DCDC3.5Securitzaci ́o (2)12102226,40e
DCDC4Sistema de peticions de transaccions6454101.202,92e
DCDC4.1Peticions d’inici de sessi ́o al sistema34304630,10e
DCDC4.2Polling d’estat de transaccions14122261,86e
DCDC4.3Securitzaci ́o16124310,96e
DCDC5Pas a producci ́o1284240,04e
DCDC5.1Desplegament del projecte1284240,04e
DCDW1Sistema de firma de transaccions868241.552,06e
DCDW1.1Redisseny dels components necess`aris a la UI32302581,00e
DCDW1.2Creaci ́o dels nous components de l’aplicaci ́o28280496,44e
DCDW1.3Obtenir, acceptar o declinar peticions de transaccions26242474,62e
Total:9.415,16e
Taula 10:  Resum de les tasques.
8.1.2    Costos sobre els recursos humans externs
Per al desenvolupament del projecte, l’empresa on es realitza el projecte ha contractat els serveis de
l’empresa de disseny Urano Studio per obtenir dissenys UI
1
/UX
2
per CKBull Developer Console
i CKBull Wallet.  El sou hora mostrat a la Taula 11 tamb ́e ha sigut obtingut dewww.talent.com
[32].
1
UI:User interface
2
UX:User experience
35

SiglesRolSou hora brutHoresCost total
DUIDissenyadors UI/UX16,41e30492,30e
Taula 11:  Costos sobre recursos humans externs.
8.1.3    Costos sobre els recursos f ́ısics
A continuaci ́o, es llisten tots els recursos f ́ısics utilitzats en el projecte.  Dins d’aquesta categoria
 ́unicament es fa refer`encia als recursoshardware.  A m ́es, tamb ́e es mostra l’amortitzaci ́o de cada
recurs durant el temps de desenvolupament.
SiglesRecursCost totalAmortitzaci ́o
FPMPMacbook Pro M1 PRO 14”(2022) [27]2.449,00e303,85e
FTApple Magic Keyboard [28]109,00e13,25e
FRRatol ́ı Logitech MX Master [29]84,99e10,33e
FS1Servidor d’AWS entornstaging-144,9e
FS2Servidor d’AWS magatzem d’imatges0€(cost negligible)-
FS3Servidor d’AWS entorn producci ́o-119,93e
Total:592,26e
Taula 12:  Costos sobre recursos f ́ısics.
Per a calcular els costos dels recursos d’AWS, s’ha usat l’eina Estimator per a fer una estimaci ́o
dels  costos  que  comportaria  utilitzar  servidor  per  astagingdurant  5  mesos  i  un  servidor  per  a
producci ́o per a un mes de desenvolupament [33].
8.1.4    Costos sobre els recursos espacials
Com s’ha descrit pr`eviament, s’ha tingut com a refer`encia de cost l’espai decoworkingCrec Gr`acia
[34] situat a Barcelona per a poder simular un cost espacial.
SiglesRecursCost mensualTemps (mes)Cost total
IDTInstal·lacions de treball195,00e5975,00e
Taula 13:  Costs sobre recursos espaials.
8.1.5    Costos sobre els recursos digitals
Per acabar,  a la Taula 14 s’esmenten tots els recursos digitals o desoftwareutilitzats durant el
desenvolupament del projecte.  Degut a que alguns dels recursos nom ́es ofereixen una tarifa fixa,
s’ha calculat el cost segons els temps en mesos que es necessitar`a el recurs.
8.1.6    Resum dels costos
A mode de resum,  s’adjunta la Taula 15 amb el cost total del projecte desglossat en els 5 tipus
diferents de costos.
36

SiglesRecursTarifaTemps (mes)Cost total
DIJIntelliJ IDEA [30]59.90e/mes4239,60e
DG, DGP, DGAEcosistema Github [31]4,00e/mes624,00e
DSLSlack0e40e
DNVGoogle Chrome0e40e
DOOverleaf0e40e
Total:263,60e
Taula 14:  Costos sobre recursos digitals.
TipusSubtotal
Costos de recursos humans interns9.415,16e
Costos de recursos humans externs492,30e
Costos de recursos f ́ısicshardware592,26e
Costos de recursos espaials975,00e
Costos dels recursos digitals263,60e
Total:11.738,32e
Taula 15:  Resum dels costos.
8.2    Estimaci ́o dels costos
A partir de la identificaci ́o feta a l’apartat anterior, es far`a l’estimaci ́o de costos del projecte tenint
en compte els riscos associats al projecte.
8.2.1    Costos de conting`encia
Per a calcular el cost de conting`encia del projecte, partirem del resultat final dels costos a la Taula
15.  A m ́es,  es definir`a com a factor de conting`encia un 15% del cost total del projecte.  Aquest
percentatge ve donat a causa del marge de temps disponible per a desenvolupar el projecte (entre
6-7sprints) i la possible incertesa que es pot trobar durant la fase de desenvolupament, a causa
que el nivell d’especificaci ́o ha sigut lleu.
Tipus de costCost generalGeneral amb conting`encia
Costos de recursos humans interns9.415,16e10.827,43e
Costos de recursos humans externs492,30e566,15e
Costos de recursos f ́ısicshardware592,26e681,10e
Costos de recursos espaials975,00e1.121,25e
Costos dels recursos digitals263,60e303,14e
Total:13.499,07e
Taula 16:  Costos de conting`encia.
37

8.2.2    Costos associats als riscos
A la Taula 17 es pot trobar els costos associats als riscos explicats al cap ́ıtol anterior.  Per a donar
un valor num`eric al tipus d’impacte, s’adjunta una estimaci ́o en hores de quant de temps s’estima
que comporti corregir l’impacte del risc.
Riscos detectats
RiscImpacte sobre el projecteHoresCost total
Manca o error a la definici ́oAlt20212,76e
Limitacions t`ecniquesMitj`a15106,38e
Aparici ́o imprevista d’errors i bugsMitj`a20141,84e
SalutMitja / Alt00,00e
Total:460,98e
Taula 17:  Riscos detectats en el projecte.
8.2.3    Pressupost final
Finalment, la seg ̈uent taula mostra l’estimaci ́o del pressupost final del projecte.
TipusCost
Cost general11.738,32e
Cost de conting`encia1.720,91e
Cost de riscos460,98e
Total:13.920,21e
Taula 18:  Pressupost final.
8.3    Desviacions sobre els costos del projecte
Per finalitzar aquest cap ́ıtol, definirem el sistema de control que es realitzar`a sobre els costos del
projecte.   Cada  indicador  ser`a  posteriorment  utilitzat  per  mantenir  un  seguiment  de  l’estimaci ́o
pressupostaria, amb els valors reals, fins al final del projecte.
Desviaci ́o temporal d’una tasca
hores reals−hores estimades
Desviaci ́o econ`omica d’una tasca
(hores reals−hores estimades)·cost de la tasca
Desviaci ́o total de costos humans
cost de recursos humans real−cost de recursos humans estimats
Desviaci ́o total de costos f ́ısics hardware
38

cost de recursos f ́ısics hardware real−cost de recursos f ́ısics hardware estimats
Desviaci ́o total de costos digitals
cost de recursos digitals real−cost de recursos digitals estimats
Desviaci ́o total de costos espaials
cost de recursos espaials real−cost de recursos espaials estimats
Desviaci ́o de costos generals
cost general real−cost general estimats
Desviaci ́o de costos de conting`encia (%)
cost de conting`encia real−cost de conting`encia estimat
Desviaci ́o de costos de riscos
cost de riscos real−cost de riscos estimat
Desviaci ́o total del costos
cost total real−cost total estimat
Desviaci ́o total temporal
temps total real−temps total estimat
El motiu de la creaci ́o de les desviacions llistades anteriorment  ́es poder avaluar quins par`ametres
temporals i monetaris es veuen afectats durant el desenvolupament del projecte i com es desvien
de la previsi ́o inicial.  Com a refer`encia, es faran 2 mesures:  una a l’inici del projecte i una final un
cop es finalitzi el projecte.
39

Cap ́ıtol 9
Especificaci ́o
Un cop fet l’an`alisi del sistema a desenvolupar, iniciarem la fase d’especificaci ́o.  Dins d’aquesta fase
es detallar`a en major profunditat el problema a desenvolupar, especificant quins actors s’involucren
dins  del  sistema,  quines  accions  poden  fer,  amb  quines  entitats  interactuaran  i  com  es  produir`a
la  interacci ́o.   Per  aconseguir-ho,  s’han  utilitzat  diferents  eines  com  el  diagrama  de  casos  d’ ́us  o
l’esquema conceptual de dades.
No  obstant  aix`o,  per  a  poder  dur  a  terme  una  especificaci ́o  adient,  cal  entendre  el  domini  del
problema.  Tot i haver descrit diferents conceptes com lablockchain,  els comptes i els tokens,  ́es
necessari saber quin concepte clau  ́es sobre el que funciona la soluci ́o.  Aquest concepte clau s ́on les
transaccions de lablockchainCKB. Aix ́ı doncs, la seg ̈uent secci ́o explica de manera acotada, per`o
detallada com funcionen les transaccions d’actius digitals a CKB.
9.1    Descripci ́o t`ecnica de les transaccions a CKB
La transacci ́o, com a concepte quotidi`a, correspon a l’intercanvi pactat d’un actiu entre dues parts
interessades.  Per exemple, una transacci ́o banc`aria  ́es l’intercanvi d’una quantitat de diners entre
dos comptes.
Figura 5:  Transfer`encia simplificada entre dos entitats.
Font:  elaboraci ́o pr`opia.
Cada  entitat  que  conforma  una  transacci ́o  disposa  d’un  actiu  a  transferir  i  un  identificador
(direcci ́o).  No obstant aix`o, la manera en la qual es gestionen les dades pot variar.  Per exemple,
un banc disposa de tota la seva informaci ́o de forma centralitzada amb una estructura A mentre
que un altre banc t ́e la seva informaci ́o en una estructura B.
LablockchainCKB t ́e la seva pr`opia manera de gestionar els actius i la seva transfer`encia.  CKB
adopta el model UTXO per a la realitzaci ́o de les transaccions.  Com s’ha descrit al Cap ́ıtol 1, els
40

UTXO permeten poder determinar quins actius poden transferir-se i quin compte  ́es autoritzat per
a transferir-los, evitant problemes com el doble pagament.
A  continuaci ́o,  s’explicar`a  pas  a  pas  quins  camps  (estructura  de  dades)  necessita  una  transac-
ci ́o per a poder afegir-se a lablockchain.  Tota la informaci ́o ha sigut extreta del RFC 0022 CKB
Transaction Structure [35] generat per Nervos.
Estructura d’una transacci ́o
Inicialment,  una  transacci ́o  ha  de  contenir  tant  la  informaci ́o  d’una  o  m ́es  transaccions  pr`evies
com a entrada, que anomenareminputs, i els resultats de la transacci ́o pr`opia, que anomenarem
outputs.  Aquests dos conceptes s ́on els mateixos utilitzats pel model UTXO.
Figura 6:  Diagrama simplificat d’una transacci ́o.
Font:  RFC 0022 CKB Transaction Structure.
Com es pot veure a la Figura 6 una transacci ́o t ́e com a campsinputsioutputsque segueixen
les seg ̈uents estructures de dades:
•OutPoint:  Estructura de dades que referencia una transacci ́o pr`evia dins d’un bloc de la
xarxa.  Cont ́e dos camps,txhashiindex.  El camptxhashfa refer`encia alhashde la transac-
ci ́o (identificador d’una transacci ́o ja existent) i el campindexfa refer`encia a la posici ́o on
es troba elCellOutputde la transacci ́o dins del seu vectoroutputs.  La figura 7 mostra com
l’outpoint de lacell1fa refer`encia a unoutputd’una transacci ́o pr`evia.
41

Figura 7:  Diagrama del funcionament d’un OutPoint.
Font:  RFC 0022 CKB Transaction Structure.
•CellInput: Estructura de dades que cont ́e unOutPointreferenciant la localitzaci ́o deloutput
d’una transacci ́o dins de lablockchainque s’utilitzar`a com ainputa la nova transacci ́o.
•CellOutput:  Estructura de dades que representar`a l’outputde la transacci ́o.  El campcapa-
cityfa refer`encia a la capacitat m`axima d’informaci ́o que pot emmagatzemar unoutput.
Fins ara hem pogut veure com funcionen les refer`encies a les transaccions anteriors.  Per`o encara
queda la part m ́es important, que  ́es com s’adjunten els actius o la informaci ́o dins de la transacci ́o i
com es representa. Aix ́ı doncs, peremmagatzemar la informaci ́o que contindr`a la transacci ́o
s’afegeix un nou camp, anomenatoutputs
data.
Figura 8:  Diagrama parcial d’una transacci ́o.
Font:  RFC 0022 CKB Transaction Structure.
El campoutputsdatacorrespon a un vector debyteson la longitud d’aquest ha de ser la mateixa
que la del campoutputs.  D’aquesta manera es realitza una relaci ́o per posici ́o entre laCellOutputi
la informaci ́o d’aquestoutputal vectoroutputsdata.
 ́
Es a dir, les dades associades a laCellOutput
a la posici ́o 0 del vector d’outputses trobaran a la posici ́o 0 del vectoroutputs
datai aix ́ı per a la
resta del contingut del vector.
42

A  m ́es,  s’ha  de  tindre  en  compte  quela  quantitat  de  dades  d’unaCellOutputno  pot
excedir lacapacitydefinida dins d’aquesta.Altrament, la transacci ́o no ser`a v`alida.
Per a finalitzar l’explicaci ́o de les transaccions, introduirem l’ ́ultim concepte rellevant.  Aquest
concepte correspon allock, una estructura de dades que utilitza la CKB VM (m`aquina d’estats
que computa les transaccions) quan elsCellOutputss ́on utilitzats com ainputsdins d’una nova
transacci ́o.  La seva funcionalitat principal  ́esdeterminar qui pot usar(lockounlock)els actius
digitals delsCellOutputs.
El bloqueig dels actius es realitza mitjan ̧cant lasignatura digital amb criptografia asim`etrica.
L’estructura principal dellockcorrespon a l’anomenadaScriptque cont ́e els campscodehashi
hash
type, per a referenciar l’algoritme de criptografia asim`etrica que ha d’usar la CKB VM i un
camp anomenatargsque cont ́e laclau p ́ublicaque referencia a la clau privada que fa la signatura.
Per defecte l’algoritme fet servir  ́es elsecp256k1.  A la Figura 9 es pot visualitzar l’estructura.
Figura 9:  Estructura de dades del Script.
Font:  RFC 0022 CKB Transaction Structure.
La signatura de l’actiu t ́e com a missatge a encriptar tota la transacci ́o,  i el resultat final es
guarda dins d’un nou camp anomenatwitnesses(testimonis) dins de la transacci ́o.  Aquest camp
segueix la mateixa estructura de vector paral·lel, utilitzada pelsoutputsi elsoutputs
data, amb el
vector d’inputsja que corresponen a les cel·les que executen elslocksdelsinputsper comprovar si
l’actiu es pot desbloquejar o no.
Aix ́ı  doncs,  la  visi ́o  global  de  la  transacci ́o  segons  l’explicaci ́o  pr`evia  es  pot  visualitzar  a  la  Fi-
gura 10.
43

Figura 10:  Diagrama parcial d’una transacci ́o a CKB
Font:  RFC 0022 CKB Transaction Structure.
Cal destacar que l’objecte transacci ́o t ́e m ́es camps que no s’han incl`os dins de l’explicaci ́o pel
fet que no s ́on necessaris per entendre la funcionalitat del projecte.  En cas de voler obtenir m ́es
informaci ́o, a les refer`encies es troba el RFC corresponent a l’explicaci ́o.
Un  cop  ent`es  com  funcionen  les  transaccions  a  lablockchainCKB,  ja  podem  comen ̧car  a  espe-
cificar la soluci ́o del projecte.
9.2    Casos d’ ́us del sistema
Comencem l’especificaci ́o del projecte analitzant quins casos d’ ́us hauria de tindre la soluci ́o.  A
mode d’introducci ́o, un cas d’ ́us representa unaacci ́o realitzada per un actor dins d’un sis-
tema.
En  aquest  cap ́ıtol  es  definiran  tots  els  casos  d’ ́us  principals  que  ha  de  satisfer  el  projecte  per  a
garantir el resultat esperat definit alsrequisits funcionals.
Pr`eviament a la descripci ́o dels casos d’ ́us, cal identificar quins actors, i de quin tipus, formen part
del sistema.
Actors
Dins del sistema trobarem dos tipus d’actors,  elsactors primaris(actors que interaccionen de
manera directa amb el sistema) i elsactors secondaris(actors que s ́on utilitzats pel sistema i que
no interaccionen de manera directa amb aquest).  Dins del sistema es troben els seg ̈uents actors:
44

ActorTipusDescripci ́o
Usuari CKBull WalletPrimari
Usuari recurrent de la cartera CKBull Wa-
llet
Desenvolupador dAppPrimari
Persona o entitat que desenvolupa dApp a
lablockchainCKB
dAppSecundari
Aplicaci ́o   descentralitzada   creada   per
Desenvolupador dApp
Taula 19:  Actors dins del nostre sistema.
Escenaris
Un  cop  definits  quins  actors  t ́e  el  sistema,  cal  determinar  on  realitzen  les  accions.   L’escenari
principal del sistema  ́esCKBull Signer Appi consta dels seg ̈uents dos subescenaris:
•CKBull  Wallet:  Aplicaci ́o  m`obil  multiplataforma  que  actual  com  una  cartera  de  cripto-
monedes sobre lablockchainCKB. Permet als usuaris interaccionar amb els seus comptes,
tokens, actius, etc...
•CKBull Developer Console:Softwareque permet als desenvolupadors enregistrar les seves
dApps al sistema perqu`e aquestes puguin usar la funcionalitat de signatura de peticions amb
CKBull Wallet.
Un cop descrits els actors i els escenaris, passem a explicar els casos d’ ́us del sistema.  Per a
poder entendre de manera senzilla tots els casos d’ ́us s’ha decidit agrupar-los per escenari i `ambit.
El diagrama complet de casos d’ ́us es pot trobar a l’annex Secci ́o A.1.  Alguns casos d’ ́us poden
semblar m ́es aviat estranys pel fet que, en el moment de la creaci ́o d’aquesta secci ́o, ja es disposaven
dissenys de les interf ́ıcies que condicionaven certes accions dels actors.  Un exemple  ́es l’extensi ́o del
cas d’ ́usEliminar dAppestenent deEditar dApp, ja que als dissenys cal accedir a editar la dApp
per a poder esborrar-la.
9.2.1    Casos d’ ́us de CKBull Developer Console
A  continuaci ́o,  es  mostrar`a  un  diagrama  de  l’`ambit  als  que  pertanyin  els  casos  d’ ́us  i  dins  de
l’escenariCKBull Developer Console.
Autoritzaci ́o i autenticaci ́o
A la Figura 11 es mostren tots els casos d’ ́us relacionats amb l’autoritzaci ́o i autenticaci ́o del desen-
volupador amb CKBull Developer Console.
45

Figura 11:  Casos d’ ́usCKBull Developer Console.
`
Ambit autoritzaci ́o i autenticaci ́o.
Font:  elaboraci ́o pr`opia.
IdentificadorEnregistrar-se
Actors principalsDesenvolupador de dApp
`
AreaCKBull Developer Console
DisparadorEl desenvolupador de dApp vol utilitzar per primer cop la
consola.
PrecondicionsEl desenvolupador de dApp no s’ha enregistrat en el sistema
pr`eviament.
InclouValidar compte
Descripci ́o
1.  El desenvolupador,  un cop dins de la p`agina,  navega
fins a la p`agina d’enregistrament.
2.  El  desenvolupador  introdueix  les  dades  necess`aries
per a enregistrar-se (incloent-hi una adre ̧ca de correu
electr`onic).
3.  Un  cop  proporcionades  les  dades,  el  desenvolupador
rebr`a un correu per a validar el compte i ser`a redirigit
a la p`agina de validaci ́o.
4.  El  desenvolupador  proporciona  la  informaci ́o  rebuda
per a validar el seu compte.  Si  ́es correcte, el desenvo-
lupador queda enregistrat, altrament no.
Taula 20:  Descripci ́o de cas d’ ́usEnregistrar-se.
46

IdentificadorIniciar sessi ́o
Actors principalsDesenvolupador de dApp
`
Area
CKBull Developer Console
DisparadorEl desenvolupador de dApp vol identificar-se dins de la pla-
taforma.
PrecondicionsEl  desenvolupador  de  dApp  s’ha  enregistrat  en  el  sistema
pr`eviament.
Descripci ́o
1.  El desenvolupador,  un cop dins de la p`agina,  navega
fins a la p`agina d’inici de sessi ́o.
2.  El  desenvolupador  proporciona  les  dades  necess`aries
per a identificar-se (pr`eviament proporcionades a l’en-
registrament).  Si les dades coincideixen, el desenvolu-
pador inicia sessi ́o satisfact`oriament, altrament no.
Taula 21:  Descripci ́o de cas d’ ́usIniciar sessi ́o.
IdentificadorIniciar sessi ́o amb Google
Actors principalsDesenvolupador de dApp
`
AreaCKBull Developer Console
DisparadorEl desenvolupador de dApp vol identificar-se dins de la pla-
taforma mitjan ̧cant un compte de Google.
Precondicions-
Descripci ́o
1.  El desenvolupador,  un cop dins de la p`agina,  clica a
l’enlla ̧c d’inici de sessi ́o amb Google.
2.  El desenvolupador  ́es redirigit a una p`agina segura on
pot  identificar-se  amb  el  seu  compte  de  Google.   En
cas d’una identificaci ́o satisfact`oria l’usuari torna a ser
redirigit  a  CKBull  Developer  Console  com  a  usuari
identificat, altrament no.
Taula 22:  Descripci ́o de cas d’ ́usIniciar sessi ́o.
47

IdentificadorRestablir contrasenya
Actors principalsDesenvolupador de dApp
`
Area
CKBull Developer Console
DisparadorEl desenvolupador de dApp vol restablir la contrasenya del
seu compte dins la plataforma.
PrecondicionsEl desenvolupador ha de estar enregistrat i validat.
Descripci ́o
1.  El desenvolupador sense identificar-se,  clica a l’opci ́o
de restablir contrasenya.
2.  El desenvolupador proporciona una adre ̧ca de correu
electr`onic per a recuperar la contrasenya. Si la direcci ́o
 ́es enregistrada dins del sistema i  ́es v`alida, el sistema
envia un correu a la direcci ́o amb les dades necess`aries
per a restablir la contrasenya.  Altrament el desenvo-
lupador rep un missatge d’error.
3.  El desenvolupador amb les dades enviades per correu
valida la informaci ́o rebuda a la p`agina i proporciona
una  nova  contrasenya.   Si  les  dades  s ́on  correctes,  es
restableix la seva contrasenya a la nova introdu ̈ıda, al-
trament no es restableix i es notifica al desenvolupador
de l’error.
Taula 23:  Descripci ́o de cas d’ ́usReestablir contrasenya.
IdentificadorValidar compte
Actors principalsDesenvolupador de dApp
`
Area
CKBull Developer Console
DisparadorEl desenvolupador ha omplert el formulari d’enregistrament
al sistema.
PrecondicionsEl desenvolupador ha proporcionat les dades necess`aries per
a enregistrar-se al sistema.
Descripci ́o
1.  El desenvolupador valida la informaci ́o rebuda per cor-
reu electr`onic dins la p`agina de validac ́ıo.
2.  Si la informaci ́o proporcionada pel desenvolupador  ́es
correcta, el desenvolupador  ́es validat dins del sistema
i  ́es redirigit a la p`agina principal.  Altrament, no i es
notifica al desenvolupador de l’error.
Taula 24:  Descripci ́o de cas d’ ́usValidat compte.
48

IdentificadorTancar sessi ́o
Actors principalsDesenvolupador de dApp
AreaCKBull Developer Console
DisparadorEl desenvolupadro vol sortir del sistema.
PrecondicionsEl desenvolupador ha iniciat sessi ́o pr`eviament dins del sis-
tema.
Descripci ́o
1.  El  desenvolupador  clica  l’opci ́o  de  tancar  la  sessi ́o  i
deixa de estar autenticat dins del sistema.
Taula 25:  Descripci ́o de cas d’ ́usTancar sessi ́o.
Gesti ́o de dApps
A la seg ̈uent figura es mostren tots els casos d’ ́us relacionats amb la gesti ́o de les dApps.  En aquest
`ambit ens trobem amb dos actors:  desenvolupador de dApp (prim`ari) i la dApp (secondari).
Figura 12:  Casos d’ ́usCKBull Developer Console.
`
Ambit de gesti ́o de dApps.
Font:  elaboraci ́o pr`opia.
49

IdentificadorCrear dApp
Actors principalsDesenvolupador de dApp
AreaCKBull Developer Console
DisparadorEl desenvolupador vol enregistar una dApp al sistema.
PrecondicionsEl desenvolupador ha iniciat sessi ́o pr`eviament dins del sis-
tema.
InclouGenerar claus API
Descripci ́o
1.  El desenvolupador clica l’opci ́o d’enregistrar una nova
dApp al sistema.
2.  El  desenvolupador  es  redirigit  a  un  formulari  on  ha
d’introdu ̈ır la informaci ́o necessaria per a enregistar la
dApp.  Si la informaci ́o proporcionada es v`alida i no
existeix  cap  dApp  amb  el  mateix  nom  creada  per  el
mateix  usuari  ,  la  dApp  es  creada  satisfact`oriament,
altrament  el  desenvolupador  es  notificat  amb  el  pro-
blema.
3.  Un cop enregistrada la dApp, es generen les claus API
associades a aquesta.
4.  El desenvolupador guarda les claus API.
Taula 26:  Descripci ́o de cas d’ ́usCrear dApp.
IdentificadorGenerar claus API
Actors principalsDesenvolupador de dApp
AreaCKBull Developer Console
DisparadorEl desenvolupador ha enregistrat una dApp al sistema.
PrecondicionsEl desenvolupador ha iniciat sessi ́o pr`eviament dins del sis-
tema i ha creat una dApp satisfact`oriament.
Descripci ́o
1.  Un cop enregistrada la dApp, es generen les claus API
associades a aquesta.
2.  El desenvolupador guarda les claus API.
Taula 27:  Descripci ́o de cas d’ ́usGenerar claus API.
50

IdentificadorEditar dApp
Actors principalsDesenvolupador de dApp
AreaCKBull Developer Console
DisparadorEl  desenvolupador  vol  editar  les  dades  d’una  de  les  seves
dApps al sistema.
PrecondicionsEl desenvolupador ha iniciat sessi ́o pr`eviament dins del sis-
tema i ha creat, com a m ́ınim, una dApp satisfact`oriament.
Extensi ́o 1Eliminar dApp [29]
Extensi ́o 2Regenerar clau secreta API [31]
Descripci ́o
1.  El desenvolupador clica a l’opci ́o d’editar una dApp ja
creada anteriorment.
2.  El desenvolupador modifica els camps que vol editar.
3.  El  desenvolupador  clica  l’opci ́o  de  desar  els  canvis.
Si  les  dades  proporcionades  s ́on  correctes,  el  sistema
guarda les noves dades.  Altrament el desenvolupador
es notificat amb l’error corresponent.
Taula 28:  Descripci ́o de cas d’ ́usEditar dApp.
IdentificadorEliminar dApp
Actors principalsDesenvolupador de dApp
Actors secundarisdApp
AreaCKBull Developer Console
DisparadorEl  desenvolupador  vol  eliminar  una  de  les  seves  dApps  al
sistema.
PrecondicionsEl desenvolupador ha iniciat sessi ́o pr`eviament dins del sis-
tema i ha creat, com a m ́ınim, una dApp satisfact`oriament.
Descripci ́o
1.  El desenvolupador clica a l’opci ́o d’editar una dApp ja
creada anteriorment.
2.  El   desenvolupador   selecciona   l’opci ́o   d’eliminar   la
dApp.
3.  El desenvolupador es notificat de les conseq ̈u`encies d’e-
liminar la dApp del sistema i es demana que confirmi
l’acci ́o.
4.  En cas de que el desenvolupador confirmi, la dApp es
esborrada del sistema i l’actor secondari dApp deixa
d’existir.  Altrament es cancela l’operaci ́o d’eliminaci ́o.
Taula 29:  Descripci ́o de cas d’ ́usEliminar dApp.
51

IdentificadorRegenerar clau secreta API
Actors principalsDesenvolupador de dApp
AreaCKBull Developer Console
DisparadorEl desenvolupador vol regenerar la clau secreta PI d’una de
les seves dApps.
PrecondicionsEl desenvolupador ha iniciat sessi ́o pr`eviament dins del sis-
tema i ha creat, com a m ́ınim, una dApp satisfact`oriament.
Descripci ́o
1.  El desenvolupador clica a l’opci ́o d’editar una dApp ja
creada anteriorment.
2.  El desenvolupador selecciona l’opci ́o de regenerar una
nova clau secreta API.
3.  El desenvolupador es guarda la nova clau per a poder
utilitzar-la a la seva dApp.
Taula 30:  Descripci ́o de cas d’ ́usRegenerar clau secreta API.
IdentificadorVeure dApps
Actors principalsDesenvolupador de dApp
AreaCKBull Developer Console
DisparadorEl desenvolupador vol visualitzar les dApps que ha enregis-
trat al sistema.
PrecondicionsEl desenvolupador ha iniciat sessi ́o pr`eviament dins del sis-
tema.
Descripci ́o
1.  El desenvolupador, un cop ja identificat, es redirigit a
la pantalla de visualitzaci ́o de dApps, on pot veure en
forma de llista les dApps que ha enregistrat.
Taula 31:  Descripci ́o de cas d’ ́usVeure dApps.
Generaci ́o de peticions
A continuaci ́o es mostren tots els casos d’ ́us relacionats amb la generaci ́o de les peticions per part
d’una dApp a CKBull Developer Console.
52

Figura 13:  Casos d’ ́usCKBull Developer Console.
`
Ambit de generaci ́o de peticions.
Font:  elaboraci ́o pr`opia.
IdentificadorGenerar petici ́o d’inici de sessi ́o
Actors secondarisdApp
`
AreaCKBull Developer Console
DisparadorLa dApp vol generar una petici ́o d’inici de sessi ́o per a un
dels seus usuaris.
PrecondicionsLa dApp ha de comptar amb les claus API generades un cop
el desenvolupador enregistra la dApp al sistema.
Extensi ́o no.1Consultar petici ́o d’inici de sessi ́o [33]
Extensi ́o no.2Generar petici ́o de transacci ́o [34]
Descripci ́o
1.  La dApp demana generar una petici ́o d’inici de sessi ́o
amb  unes  claus  API.  En  cas  de  les  claus  API  siguin
correctes, es genera una nova petici ́o d’inici de sessi ́o.
Altrament es notifica a la dApp de l’error produ ̈ıt al
sistema.
Taula 32:  Descripci ́o de cas d’ ́usGenerar petici ́o d’inici de sessi ́o.
53

IdentificadorConsultar petici ́o d’inici de sessi ́o
Actors secondarisdApp
`
Area
CKBull Developer Console
DisparadorLa  dApp  vol  con`eixer  l’estat  en  el  que  es  troba  la  petici ́o
d’inici de sessi ́o.
PrecondicionsLa dApp ha generat una petici ́o d’inici de sessi ́o per a que
un usuari la signi.
Descripci ́o
1.  La  dApp  demana  al  sistema  obtindre  l’estat  d’una
petici ́o d’inici de sessi ́o mitjan ̧cant l’identificador d’a-
questa.  Si existeix, es retorna la informaci ́o de la pe-
tici ́o, altrament es notifica a la dApp de l’error.
Taula 33:  Descripci ́o de cas d’ ́usConsultar petici ́o d’inici de sessi ́o.
IdentificadorGenerar petici ́o de transacci ́o
Actors secondarisdApp
`
Area
CKBull Developer Console
DisparadorLa dApp vol generar una petici ́o de transacci ́o per a un dels
seus usuaris.
PrecondicionsLa  dApp  ha  de  comptar  amb  les  claus  API  generades  un
cop el desenvolupador enregistra la dApp al sistema i una
petici ́o d’inici de sessi ́o signada.
Extensi ́o no.1Consultar petici ́o de transacci ́o [34]
Descripci ́o
1.  La  dApp  demana  generar  una  petici ́o  de  transacci ́o
amb unes claus API i l’indentificador d’una petici ́o d’i-
nici de sessi ́o signada per un usuari de la dApp.
2.  En cas de les claus API siguin correctes i l’identificador
de la petici ́o estigui signat, es genera una nova petici ́o
de transacci ́o associada a l’usuari que ha signat la pe-
tici ́o d’inici de sessi ́o.  Altrament es notifica a la dApp
de l’error produ ̈ıt al sistema.
Taula 34:  Descripci ́o de cas d’ ́usGenerar petici ́o de transacci ́o.
54

IdentificadorConsultar petici ́o de transacci ́o
Actors secondarisdApp
`
Area
CKBull Developer Console
DisparadorLa dApp vol con`eixer l’estat en el que es troba una petici ́o
de transacci ́o.
PrecondicionsLa dApp ha generat una petici ́o de transacci ́o amb informa-
ci ́o per a que l’usuari adressat la signi.
Descripci ́o
1.  La dApp demana al sistema obtindre l’estat d’una pe-
tici ́o de transacci ́o mitjan ̧cant l’identificador d’aques-
ta.  Si existeix, es retorna la informaci ́o de la petici ́o,
altrament es notifica a la dApp de l’error.
Taula 35:  Descripci ́o de cas d’ ́usConsultar petici ́o de transacci ́o.
9.2.2    Casos d’ ́us de CKBull Wallet
Per a facilitar la visualitzaci ́o dels casos relacionats amb CKBull Wallet a continuaci ́o es mostren
els casos d’ ́us,  on es troben dos actors involucrats:Usuari CKBull Wallet(primari) idApp
(secondari).
Figura 14:  Casos d’ ́us CKBull Wallet.
Font:  elaboraci ́o pr`opia.
55

IdentificadorVeure aplicacions connectades
Actors principalsUsuari CKBull Wallet
`
Area
CKBull Wallet
DisparadorL’usuari  de  CKBull  Wallet  vol  visualitzar  les  dApps  a  les
que s’ha connectat.
Precondicions-
Descripci ́o
1.  L’usuari un cop dins de l’aplicaci ́o navega a la pantalla
on es troben les dApps a les que est`a conectat.
Taula 36:  Descripci ́o de cas d’ ́usVeure aplicacions connectades
IdentificadorEscanejar codi inici de sessi ́o
Actors principalsUsuari CKBull Wallet
`
AreaCKBull Wallet
DisparadorL’usuari  de  CKBull  Wallet  vol  iniciar  sessi ́o  en  una  dApp
enregistrada a CKBull Developer Console.
PrecondicionsLa  dApp  ha  de  mostrar  un  codi  QR  a  l’usuari  amb  una
petici ́o d’inici de sessi ́o no signada o rebutjada.
Extensi ́o 1Rebutjar inici de sessi ́o [38]
Extensi ́o 2Signar inici de sessi ́o [39]
Descripci ́o
1.  L’usuari compta amb un codi QR generat per la dApp.
2.  L’usuari escaneja amb l’aplicaci ́o el codi QR. En cas
que el codi QR sigui v`alid es mostra la informaci ́o de la
petici ́o d’inici de sessi ́o, altrament es notifica a l’usuari
de l’error.
Taula 37:  Descripci ́o de cas d’ ́usEscanejar codi inici de sessi ́o.
56

IdentificadorRebutjar inici de sessi ́o
Actors principalsUsuari CKBull Wallet
Actors secundarisdApp
`
Area
CKBull Wallet
DisparadorL’usuari de CKBull Wallet vol rebutjar una petici ́o d’inici
de sessi ́o pr`eviament escanejada.
PrecondicionsL’usuari ha escanejat una petici ́o d’inici de sessi ́o v`alida.
Descripci ́o
1.  L’usuari, dins de l’opci ́o de signar o rebutjar una peti-
ci ́o d’inici de sessi ́o, rebutja l’operaci ́o dins l’aplicaci ́o.
2.  La dApp rep la petici ́o rebutjada i cancel·la les opera-
cions pertinents.
Taula 38:  Descripci ́o de cas d’ ́usRebutjar inici de sessi ́o.
IdentificadorAcceptar inici de sessi ́o
Actors principalsUsuari CKBull Wallet
Actors secondarisdApp
`
AreaCKBull Wallet
DisparadorL’usuari de CKBull Wallet vol acceptar una petici ́o d’inici
de sessi ́o pr`eviament escanejada.
PrecondicionsL’usuari ha escanejat una petici ́o d’inici de sessi ́o v`alida.
Descripci ́o
1.  L’usuari, dins de l’opci ́o d’acceptar o rebutjar una peti-
ci ́o d’inici de sessi ́o, accepta l’operaci ́o dins l’aplicaci ́o.
2.  La dApp rep la petici ́o signada.
3.  La dApp verifica a l’usuari, que pot comen ̧car a rea-
litzar accions dins de la dApp.
Taula 39:  Descripci ́o de cas d’ ́usAcceptar inici de sessi ́o.
57

IdentificadorVeure peticions de transaccions
Actors principalsUsuari CKBull Wallet
`
Area
CKBull Wallet
DisparadorL’usuari de CKBull Wallet vol signar una petici ́o de transac-
ci ́o pendent de signar generada per la dApp.
Precondicions-
Extensi ́o 1Signar transacci ́o [41]
Extensi ́o 2Rebutjar transacci ́o [42]
Descripci ́o
1.  L’usuari,  un  cop  dins  de  l’aplicaci ́o  navegar`a  fins  a
la pestanya on es llistaran les peticions de transacci ́o
pendents de signar.
2.  En  cas  que  no  hi  hagi  cap  transacci ́o,  l’usuari  rebr`a
un missatge assegurant que no existeixen transaccions
pendents de signar.
Taula 40:  Descripci ́o de cas d’ ́usVeure peticions de transaccions.
IdentificadorSignar transacci ́o
Actors principalsUsuari CKBull Wallet
Actors secondarisdApp
`
AreaCKBull Wallet
DisparadorL’usuari de CKBull Wallet vol signar una petici ́o de transac-
ci ́o pr`eviament generada per la dApp.
PrecondicionsL’usuari t ́e com a m ́ınim una petici ́o de transacci ́o pendent
de signar generada per la dApp.
Descripci ́o
1.  L’usuari navega a la pantalla de signatura de la petici ́o
de transacci ́o.
2.  L’usuari visualitza la informaci ́o de la transacci ́o.
3.  L’usuari signa la transacci ́o, emetent la signatura a la
blockchain.
4.  La dApp confirma la transacci ́o dins lablockchain.
Taula 41:  Descripci ́o de cas d’ ́usSignar transacci ́o.
58

IdentificadorRebutjar transacci ́o
Actors principalsUsuari CKBull Wallet
Actors secondarisdApp
`
Area
CKBull Wallet
DisparadorL’usuari  de  CKBull  Wallet  vol  rebutjar  una  petici ́o  de
transacci ́o pr`eviament generada per la dApp.
PrecondicionsL’usuari t ́e com a m ́ınim una petici ́o de transacci ́o pendent
de  signar  generada  per  la  dApp.   Aquesta  petici ́o  no  pot
estar signada, rebutjada o expirada.
Descripci ́o
1.  L’usuari navega a la pantalla de signatura de la petici ́o
de transacci ́o.
2.  L’usuari visualitza la informaci ́o de la transacci ́o.
3.  L’usuari rebutja la transacci ́o.
4.  La dApp  ́es notificada de l’acci ́o de l’usuari.
Taula 42:  Descripci ́o de cas d’ ́usRebutjar transacci ́o.
59

9.3    Esquema conceptual de dades
Despr ́es d’haver identificat els actors principals del projecte i quines accions han de desenvolupar
per a un funcionament correcte del sistema passem a especificar quines entitats trobarem al sistema
i com es relacionen entre elles.
Per a poder visualitzar-ho, s’ha realitzat un esquema conceptual de dades on es mostren totes
les classes que interaccionen dins del projecte, conjuntament amb els seus atributs i relacions.  La
Figura 15 mostra el diagrama complet.
Figura 15:  Esquema conceptual de dades del sistema
Font:  elaboraci ́o pr`opia.
A continuaci ́o es descriuen les restriccions textuals de l’esquema conceptual de dades:
•Claus externes:  (Developer, email), (DApp, name), (Credentials, apiKey), (SignInRequest,
id), (TransactionRequest, id), (AccountMetadata, address + network), (Wallet, address).
•L’atribut username de la classe Developer no es pot repetir.
•L’atribut signInToken de la classe SignInRequest no es pot repetir.
•L’atribut transactionToken de la classe TransactionRequest no es pot repetir.
•L’atribut updatedAt de la classe DApp no pot ser anterior a l’atribut createdAt.
60

•L’atribut expiresAt de la classe Request no pot ser anterior a l’atribut createdAt.
•L’atribut sessionExpiresAt de la classe SignInToken, en cas de tindre valor, no pot ser anterior
a l’atribut createdAt.
•La classe SignInRequest nom ́es pot tindre un objecte de la classe AccountMetadata si el seu
status es signed.
•L’atribut sessionExpiresAt nom ́es pot tindre valor si el status de la SignInRequest es signed.
•Una TransactionRequest nom ́es pot tindre una SignInRequest associada si aquesta t ́e com a
status signed.
9.3.1    Descripci ́o de les classes
Per aprofundir m ́es a l’esquema conceptual, a continuaci ́o s’adjunta una breu descripci ́o de cada
classe del sistema amb els seus atributs.
Developer
Representa a la persona o entitat que desenvolupa les dApps que s’integraran al sistema.  Els seus
atributs son els seg ̈uents:
AtributDescripci ́oTipus
usernameNom del compte del desenvolupadorString
emailAdre ̧ca de correu electr`onicString
passwordContrasenya utilitzada per identificar-seString
Taula 43:  Atributs de la classe Developer.
DApp
Representa la informaci ́o de la dApp enregistrada pel desenvolupador que utilitzar`a la plataforma
per a enviar peticions als usuaris.  Aquesta  ́es desenvolupada per un Developer.
AtributDescripci ́oTipus
nameNom de la dAppString
descriptionDescripci ́o general de la dAppString
emailAdre ̧ca de correu electr`onicString
projectUrlAdre ̧ca URL de la dAppString
supportUrlAdre ̧ca URL de per a suportString
termsUrl (opcional)
Adre ̧ca  URL  on  trobar  els  termes  d’ ́us  de  la
dApp
String
privacyPolicyUrl (opcional)
Adre ̧ca URL on trobar les pol ́ıtiques de privaci-
tat de la dApp
String
createdAt
Data d’enregistrament de la dApp dins la plata-
forma
Data
updatedAtData d’actualitzaci ́o de la informaci ́o de la dAppData
Taula 44:  Atributs de la classe DApp.
61

Credentials
Credencials (o claus) que usar`a la dApp dins del sistema per a autenticar-se i poder generar peticions
(Requests).  Un objecte de la classe Credentials nom ́es pot tindre associada una dApp.  L’ ́us de les
credencials es pot trobar al Cap ́ıtol 11.
AtributDescripci ́oTipus
apiKeyString de 32 car`acters en base64 que identifica la dAppString
apiSecretString de 32 car`acters en base64 que s’utilitza per fer signaturesString
Taula 45:  Atributs de la classe Credentials.
SignInRequest
Representa la petici ́o d’inici de sessi ́o que realitzen les dApps per identificar un compte d’un usuari
de CKBull Wallet.  Una dApp pot generar m ́ultiples SignInRequest.  Si una SignInRequest t ́e un
status de signed, aleshores ha de tindre un objecte de la classe AccountMetadata associat i podr`a
tindre TransactionRequest associades.
AtributDescripci ́oTipus
idIdentificador de la petici ́onombre enter
createdAtData de creaci ́o de la SignInRequestData
expiresAtData d’expiraci ́o de la SignInRequestData
signInToken
String de 32 car`acters aleat`oris identifica-
dor de la petici ́o
String
statusEstat en el qual es troba la petici ́oSignInRequestStatus
sessionExpiresAt (opcional)
Indica la data d’expiraci ́o de la sessi ́o si el
status es signed
Data
Taula 46:  Atributs de la classe SignInRequest.
TransactionRequest
Petici ́o  de  transacci ́o  generada  per  la  dApp  perqu`e  sigui  signada  o  rebutjada  per  un  compte
pr`eviament identificat amb una SignInRequest.  En el moment de la creaci ́o, s’associa una Transac-
tion a la TransactionRequest.  A m ́es, cal que la SignInRequest associada a la TransactionRequest
tingui l’atribut statussigned.
AtributDescripci ́oTipus
idIdentificador de la petici ́onombre enter
createdAtData de creaci ́o de la TransactionRequestData
expiresAt
Data   d’expiraci ́o   de   la   TransactionRe-
quest
Data
transactionToken
String de 32 car`acters aleat`oris identifica-
dor de la petici ́o
String
statusEstat en el qual es troba la petici ́oTransactionRequestStatus
Taula 47:  Atributs de la classe TransactionRequest.
62

Transaction
Objecte que cont ́e tots els atributs necessaris perqu`e es realitzi una transacci ́o.  Aquest objecte es
crea amb una TransactionRequest i s’associa a un o m ́es comptes (participants de la transacci ́o).
A la secci ́o Secci ́o 9.1 es descriuen els camps de la transacci ́o en m ́es detall.
AtributDescripci ́oTipus
inputsCellInputs necessaris per fer la transacci ́oVector de CellInput
outputsCellOutputs necessaris per fer la transacci ́oVector de CellOutput
witnessesSignatures codificades en format byteVector de bytes
transactionHash
(opcional)
hash resultant de la signatura de la transacci ́oString
Taula 48:  Atributs de la classe Transaction.
Wallet
Representa el compte d’un usuari de lablockchainCKB. Aquest pot tindre entre 0 i moltes transac-
cions.  Els seus atributs s ́on els seg ̈uents:
AtributDescripci ́oTipus
addressAdre ̧ca  ́unica dins de la blockchainString
networkCadena on es troba la cartera (mainnet o testnet)Network
balanceQuantitat d’actius digitals que disposan ́umero
Taula 49:  Atributs de la classe Wallet.
9.4    Cicles de vida d’una Request
Com s’ha descrit a la Figura 15 existeixen dos tipus de Request:  les SignInRequest i les Transacti-
onRequest.  Aquestes peticions corresponen a les peticions d’inici de sessi ́o (SignInRequest) i a les
peticions de transacci ́o (TransactionRequest).  Tant les SignInRequest com les TransactionRequest
tenen un atribut anomenat status, que correspon a l’estat en el qual es troba la petici ́o.  Per enten-
dre en profunditat perqu`e necessiten estat, com canvia i quina relaci ́o existeix entre els dos tipus
de peticions, en aquesta secci ́o es defineixen els cicles de vida dels diferents tipus de peticions.
9.4.1    SignInRequest (petici ́o d’inici de sessi ́o)
Les SignInRequest tenen com a objectiu poder identificar el compte d’un usuari de CKBull Wallet
que utilitzi la dApp per a fer transaccions.  A continuaci ́o, a la Figura 16 es mostra el cicle de vida
d’una SignInRequest des de la seva creaci ́o.
63

Figura 16:  Cicle de vida d’una SignInRequest.
Font:  elaboraci ́o pr`opia.
L’estat inicial d’una SignInReuqest quan  ́es creada correspondr`a apending(pendent).  A partir
d’aquest punt poden passar dos casos.  Si la data actual  ́es posterior a la data de l’atribut expi-
resAt de la petici ́o,  aleshores la petici ́o ja no ser`a v`alida i canviar`a d’estat aexpired(expirada).
Altrament,  si  un  usuari  decideix  actuar  sobre  la  petici ́o  podr`a  realitzar  dues  accions:  acceptar-
la,  proporcionant  la  informaci ́o  necess`aria  per  a  identificar-lo,  o  rebutjar-la.   En  cas  d’acceptar
la petici ́o,  l’usuari proporcionar`a una tupla que cont ́e l’adre ̧ca del compte que utilitzi i la xarxa
(network) a la qual pertany (mainnet o testnet), representada a la Figura 15 com a AccountMeta-
data.  D’aquesta manera la dApp podr`a identificar l’usuari per a posteriorment generar peticions
de transacci ́o.  Si l’usuari accepta l’estat de la petici ́o muta asigned(signada) i si la rebutja l’estat
romandr`a com adeclined(rebutjada).
Quan  una  petici ́o  es  acceptada  l’atribut  sessionExpiresAt  obt ́e  una  data  que,  en  cas  que  la  da-
ta actual sigui posterior a aquesta, canvi l’estat asession expired(sessi ́o expirada), inutilitzant la
sessi ́o  i  evitant  que  la  dApp  pugui  crear  peticions  de  transacci ́o.   No  obstant,  un  cop  la  petici ́o
ha  sigut  acceptada,  l’usuari  pot  desconectar  la  seva  sessi ́o  si  aquesta  no  es  troba  expirada.   En
cas que vulgui desconectar la sessi ́o, l’estat passar ́ıa designedasession expiredi anulant l’atribut
sessionExpiresAt de la petici ́o.
9.4.2    TransactionRequest (petici ́o de transacci ́o)
Una petici ́o de transacci ́o t ́e un cicle de vida m ́es simple respecte a una petici ́o d’inici de sessi ́o.
No obstant aix`o, perqu`e unaTransactionRequest pugui ser creadaha detindre associada
una SignInRequest que es trobi en estatsigned.  El motiu d’aquestaprecondici ́o ́es pel fet
que no s’han de generar peticions de transacci ́o si es desconeix quins actors estan involucrats en
aquesta.  Aix ́ı doncs, si la SignInRequest es troba en estat designedsignifica que t ́e associada un
objecte de la classe AccountMetadata que identifica a la part interessada de la transacci ́o.
Explicada la precondici ́o, a la figura seg ̈uent trobem el cicle de vida d’una TransactionRequest.
64

Figura 17:  Cicle de vida d’una TransactionRequest.
Font:  elaboraci ́o pr`opia.
L’estat inicial sempre ser`apending(pendent).  A m ́es, tal com funcionen les SignInRequest, si
la data actual  ́es posterior a la data de l’atribut expiresAt, l’estat mutar`a aexpired(expirat).  La
resta de canvis d’estat vindran donats de l’acci ́o que decideixi realitzar l’usuari.  Com es pot veure a
la Figura 17 si l’usuari signa la transacci ́o aquesta mutar`a a l’estatsigned(signada) i finalitzar`a el
seu canvi d’estat, ja que la transacci ́o associada a la petici ́o ser`a signada a CKBull Wallet i emitida
cap a lablockchain.  En cas contrari, si rebutja la petici ́o, aquesta mutar`a adeclined(rebutjada) on
tamb ́e finalitzar`a el seu canvi d’estat.  Altrament, si l’usuari decideix ignorar la transacci ́o i no dur
a terme cap acci ́o, aquesta romandr`a en estatpending(pendent) fins que l’usuari realitzi alguna
acci ́o o la petici ́o caduqui.
9.5    Especificaci ́o dels processos cr ́ıtics
Per a finalitzar la fase d’especificaci ́o del projecte, dins d’aquesta secci ́o es definiran els processos
cr ́ıtics del projecte, sent aquests els processos m ́es importants dins del sistema.  Sense aquests pro-
cessos, el sistema seria incapa ̧c de complir la funcionalitat d’enviament de peticions entre una dApp
i un compte de CKBull Wallet.  Aquests processos actuen com a nucli del sistema i s’han considerat
rellevants per a poder evitar els riscos definits al Cap ́ıtol 7.
Els processos cr ́ıtics detectats s ́on els seg ̈uents:
•Proc ́es d’acceptaci ́o d’inici de sessi ́o:Proc ́es que engloba la creaci ́o d’una petici ́o d’inici
de sessi ́o per part d’una dApp i l’acceptaci ́o o rebutja per part d’un usuari, proporcionant en
cas d’acceptaci ́o informaci ́o que l’identificaria (com acompte).
•Process  de  signatura  d’una  petici ́o  de  transacci ́o:Proc ́es  que  comporta  el  proc ́es
anterior,  la creaci ́o de la petici ́o de transacci ́o per part d’una dApp,  l’acci ́o de signatura o
rebutja per part de l’usuari i l’emissi ́o de la transacci ́o a lablockchain.
65

A continuaci ́o, es descriuran els processos amb m ́es detall.
9.5.1    Proc ́es d’acceptaci ́o d’una petici ́o d’inici de sessi ́o
Els actors que s’involucren dins d’aquest proc ́es s ́on: Usuari CKBull Wallet i la dApp.  Per acotar la
dimensi ́o del proc ́es, es t ́e com a precondici ́o que l’actor dApp ja ha sigut creat pel desenvolupador
i que disposa d’unes credencials v`alides que l’identifiquen.  Aix ́ı doncs,  eldisparadorde l’acci ́o
correspon aun usuari de CKBull Wallet que vol iniciar sessi ́o dins d’una dApp amb un
compte.
Per  a  fer-ho  demana  iniciar  sessi ́o,  fent  que  la  dApp  cridi  a  CKBull  Developer  Console  perqu`e
generi  una  nova  SignInRequest  per  a  un  usuari.Aquesta  crida  s’haur`a  de  realitzar  amb
les  credencials  de  la  dApp  per  verificar  l’autenticaci ́o  de  la  dApp.   Un  cop  creada,  la
plataforma retorna una SignInRequest sense signar que  ́es mostrada a l’usuari en forma de codi
QR. A continuaci ́o, l’usuari mitjan ̧cant l’aplicaci ́o CKBull Wallet, escaneja el codi QR per poder
obtenir la SignInRequest i poder acceptar-la o rebutjar-la.  En cas d’acceptarla, s’envia a CKBull
Developer  Console  on  s’actualitza  l’estat  de  la  petici ́o  asignedi  es  crea  un  objecte  de  la  classe
AccountMetadata amb l’adre ̧ca del compte amb el que ha signat l’usuari i la seva xarxa (network).
Altrament, si l’usuari rebutja la petici ́o, l’API actualitza elstatusadeclined.
Durant tot aquest proc ́es, la dApp ha d’estar actualitzada respecte a l’estat de la SignInRequest.
Per a fer-ho, enviar`a peticions al sistema demanant l’estat en el qual es troba la petici ́o fins que
aquesta deixi de trobar-se en estatpending.  Per comprendre com es faran les peticions, el Cap ́ıtol 10
defineix l’arquitectura que tindr`a la soluci ́o.  La figura seg ̈uent permet visualitzar l’explicaci ́o del
proc ́es d’acceptaci ́o d’inici de sessi ́o:
66

Figura 18:  Proc ́es d’acceptaci ́o duna petici ́o d’inici de sessi ́o.
Font:  elaboraci ́o pr`opia.
Com es pot veure a la Figura 18 la crida de creaci ́o d’una petici ́o d’inici de sessi ́o entre la dApp i
CKBull Developer Console cont ́e un cadenat, que representa l’autenticaci ́o que ha de proporcionar
la dApp a la CKBull Developer Console amb les credencials generades.  M ́es endavant, al Cap ́ıtol 11,
s’especificar`a quin tipus d’autenticaci ́o s’aplicar`a.
9.5.2    Proc ́es de signatura d’una petici ́o de transacci ́o
El segon proc ́es cr ́ıtic del sistema consisteix en la signatura d’una petici ́o de transacci ́o per part
d’un usuari de CKBull Wallet.  Com a precondici ́o d’aquest proc ́es s’han de complir les seg ̈uents
precondicions:
1.  L’usuari de CKBull Wallet ha iniciat sessi ́o amb la dApp amb el compte que vol realitzar la
transacci ́o.
2.  La petici ́o d’inici de sessi ́o signada per l’usuari ha de trobar-se en estat (status)signed.
En cas que aquestes dues precondicions siguin certes, una dApp podr`a generar una petici ́o de
transacci ́o per a l’usuari que hagi iniciat sessi ́o i vulgui fer la transacci ́o.  La Figura 19 resumeix el
proc ́es.
67

Figura 19:  Proc ́es de signatura d’una petici ́o de transacci ́o.
Font:  elaboraci ́o pr`opia.
Com es pot observar a la figura anterior, la crida de creaci ́o de peticions (en aquest cas la creaci ́o
d’una petici ́o de transacci ́o) tamb ́e disposa d’un mecanisme d’autenticaci ́o per part de la dApp.
Amb aquest filtre d’autenticaci ́o aconseguim garantir que qui vol crear les peticions de transacci ́o
 ́es realment la dApp amb les credencials proporcionades.  A m ́es, podem veure que es repeteix el
mateix patr ́o en els dos processos cr ́ıtics.  L’usuari desencadena l’acci ́o, fent que la dApp generi les
peticions a CKBull Developer Console.  A m ́es, els dos processos disposen d’un recurs depolling
1
per a consultar peri`odicament l’estat de la petici ́o.
No obstant, la part de signatura i rebutjament d’una petici ́o var ́ıa en aquest segon proc ́es pel
fet que interv ́e lablockchain.  En cas que l’usuari realitzi la signatura de la petici ́o, CKBull Wallet
es el responsable d’emetre la transacci ́o signada cap a lablockchain.Aquesta acci ́o no es pot
desfer, i comporta l’actualitzaci ́o de l’estat (status) de la petici ́o de transacci ́o asigned.  En cas
contrari,  ́unicament s’actualitzar`a l’estat adeclinedi lablockchainno es veur`a afectada.
1
Polling:operaci ́o de consulta constant sobre un recurs.
68

Cap ́ıtol 10
Disseny
Un cop especificat el domini del problema, els seus actors, escenaris, entitats i casos d’ ́us es pot
iniciar la fase de disseny de la soluci ́o.  En aquest cap ́ıtol es descriur`a quina arquitectura tindr`a el
sistema, quins s ́on els seus components i com es relacionen.
10.1    Arquitectura del sistema
A causa del temps disponible per a fer el projecte i els recursos humans, s’ha decidit realitzar una
soluci ́o que funcioni per sobre de lablockchain, de manera isolada i dividida per capes.  Com es pot
veure a la Figura 20 l’arquitectura general del sistema consta de 4 capes:
•Presentaci ́o:  Capa on es troben totes les interf ́ıcies amb les quals interactuaran els actors
del sistema.
•Domini:  Capa on es troben els components que gestionen la l`ogica del sistema i comuniquen
amb les dades.
•Persist`encia:  Capa on s’emmagatzemar`a totes les dades necess`aries del sistema.
•Blockchain:  Capa horitzontal sobre la qual es desenvolupar`a el projecte.  L’ ́unic recurs que
existeix dins d’aquesta capa  ́es la pr`opiablockchainCKB.
La motivaci ́o a implementar un sistema de capes a l’arquitectura de sistema  ́es poder agrupar
els components de cada capa segons la funci ́o que duguin a terme.  Segmentar els comportaments
facilita una major escalabilitat de la soluci ́o i un major control sobre aquests.
69

Figura 20:  Arquitectura general del sistema.
Font:  elaboraci ́o pr`opia.
Dins d’aquestes capesno tots els components s’hauran de dissenyar ni implementar
perqu`e s ́on components ja existents que interactuen amb el sistema.  Aix ́ı doncs, la llista de com-
ponents que s’hauran de dissenyar i implementar s ́on:
•Client CKBull Developer Console:  Client que permetr`a als desenvolupadors de dApps
enregistrar la seva dApp i obtenir les credencials per generar peticions.
•CKBull Wallet:  Cartera de criptomonedes sobre la que s’afegir`a la funcionalitat acceptar
o rebutjar peticions.
•CKBull Signer API: API que gestionar`a tant les dApps enregistrades al sistema com les
peticions d’inici de sessi ́o i de transaccions que generin.
•Database:  Base de dades que emmagatzemar`a la informaci ́o necess`aria per a l’execuci ́o del
sistema com, per exemple, les entitats.
Cal destacar queel concepte CKBull Developer Console, esmentat al cap ́ıtol anterior,se
segmentar`a en els dos components Client CKBull Developer Console i CKBull Signer
API. Aquesta segmentaci ́o  ́es donada per afavorir el desacoplament entre funcionalitats diferents i
la separaci ́o de responsabilitats d’interf ́ıcie (fetes per Client CKBull Developer Console) i de domini
(CKBull Signer API). Per aprofundir una mica m ́es en l’arquitectura del component la Figura 21
mostra l’arquitectura interna de cada component a dissenyar.  A les seg ̈uents seccions es definir`a
m ́es en detall com est`a composta l’arquitectura dels components.
70

Figura 21:  Arquitectura dels components a dissenyar.
Font:  elaboraci ́o pr`opia.
Els serveis que es troben fora de les capes (CKB Blockchain i el contenidor S3) queden fora
degut al fet queno s’han d’implementarperqu`e s ́on sistemes ja existents dels que   ́unicament
 ́esconsumeixen serveis.  A les seg ̈uents seccions s’aprofundir`a en el disseny de cada component,
visualitzant la seva arquitectura i quins patrons de disseny s’han aplicat.
10.2    Disseny de les interf ́ıcies
Com s’ha descrit a la secci ́o anterior, a la capa de presentaci ́o existeixen dos components que per-
meten connectar els actors amb el sistema.  A continuaci ́o, es descriu el disseny de cada component.
10.2.1    Disseny de CKBull Developer Console
Existeixen certs casos d’ ́us a l’escenari CKBull Developer Console que han d’estar presents dins de
la interf ́ıcie.  Els casos d’ ́us s ́on els relacionats amb l’actor Desenvolupador de dApp pel fet que  ́es
l’ ́unic actor que podr`a interactuar amb la interf ́ıcie.  Per satisfer tots els casos d’ ́us, s’han utilitzat
diverses eines per aconseguir un disseny complet de la interf ́ıcie.
Arquitectura de CKBull Developer Console
L’arquitectura del client CKBull Developer Console  ́es basada en l’arquitectura en capes.  En aquest
component existeixen tres capes:
•Presentaci ́o:  Engloba tots els elements que es visualitzaran a la interf ́ıcie.  Nom ́es gestiona
la l`ogica a nivell de component o element d’interf ́ıcie.
•Domini:  Gestiona  l’estat  i  la  l`ogica  del  client,  fent  tamb ́e  de  capa  comunicadora  entre  la
capa de presentaci ́o i la capa d’acc ́es a dades.
71

•Acc ́es a dades: Capa encarregada de la petici ́o de dades als altres serveis del sistema i gesti ́o
de dades locals.
Figura 22:  Arquitectura de CKBull Developer Console.
Font:  elaboraci ́o pr`opia.
Diagrama de navegabilitat
El diagrama de navegabilitat  ́es una estructura que permet representar de manera visual com pot
interactuar l’usuari amb el sistema, mostrant les navegacions i els processos que pot realitzar.
A la figura seg ̈uent es mostra el mapa de navegabilitat de la interf ́ıcie amb les p`agines i com-
ponents que es trobar`a l’usuari.  Les p`agines s ́on referenciades amb el color verd i els modals s ́on
referenciats amb el color lila.  Cada connexi ́o t ́e com a etiqueta el desencadenant que provoca la
navegaci ́o.
72

Figura 23:  Mapa de navegabilitat de CKBull Developer Console.
Font:  elaboraci ́o pr`opia.
Dissenys externs
L’empresa de dissenyadors Urano va ser contractada per a generar uns dissenys de la interf ́ıcie de
CKBull Developer Console acord amb la imatge de lablockchainCKB.
A continuaci ́o, es llisten les p`agines dissenyades per Urano.  Els dissenys no inclouen totes les
pantalles i modals, per`o s ́on suficients per determinar l’aspecte visual de la interf ́ıcie i poder generar
nous components en cas de necessitat.
73

P`agina d’inici de sessi ́o
Correspon a la p`agina on el desenvolupador de dApps podr`a identificar-se.  Consta d’un formulari
d’inici de sessi ́o amb dos camps, un per a la adre ̧ca de correu electr`onic amb el qual el desenvolupador
s’hagi enregistrat, i la contrasenya.  A partir delslinksproporcionats al formulari pot navegar cap
a la p`agina de restablir contrasenya o a la p`agina d’enregistrament.  A m ́es, tamb ́e pot iniciar la
sessi ́o amb el seu compte de Google.
Figura 24:  Disseny de p`agina d’inici de sessi ́o.
Font:  Dissenys d’URANO.
74

P`agina de verificaci ́o de compte
Correspon a la p`agina on un desenvolupador que s’ha enregistrat valida el seu compte mitjan ̧cant
el codi enviat per correu electr`onic.
Figura 25:  Disseny de p`agina de verificaci ́o de compte.
Font:  Dissenys d’URANO.
75

P`agina de les meves dApps
P`agina on el desenvolupador de dApps podr`a llistar les dApps que tingui enregistrades al siste-
ma.  Tamb ́e podr`a crear noves dApps o sortir de la sessi ́o.  Per accedir dins d’aquesta pantalla el
desenvolupador ha d’estar pr`eviament identificat.
Figura 26:  Disseny de p`agina de les meves dApps.
Font:  Dissenys d’URANO.
76

P`agina de creaci ́o de dApp
P`agina on el desenvolupador podr`a afegir la informaci ́o necess`aria per a enregistrar una nova dApp
al sistema.  Est`a composta per un formulari per enregistrar la informaci ́o de la dApp.
Figura 27:  Disseny de creaci ́o de dApps.
Font:  Dissenys d’URANO.
77

Modal per visualitzar les credencials d’una dApp
Aquest modal es troba dins de la p`agina de creaci ́o d’una nova dApp i es mostra a l’usuari quan
s’ha creat amb `exit la dApp.  El modal mostra les credencials que de la dApp haur`a d’utilitzar per
a comunicar-se posteriorment amb l’API per a generar peticions.
Figura 28:  Disseny del modal de credencials de la dApp.
Font:  Dissenys d’URANO.
78

P`agina d’edici ́o de dApp
Correspon a la p`agina on el desenvolupador podr`a modificar parcial o completament la informaci ́o
de la seva dApp.  Aquesta p`agina inclou la regeneraci ́o de l’APIsecret.
Figura 29:  Disseny de p`agina d’edici ́o de dApp.
Font:  Dissenys d’URANO.
Disseny de la capa de domini
Un cop definida la capa de presentaci ́o, la seg ̈uent capa a definir  ́es la capa de domini.  En ser CKB
Developer Console un producte nou, s’ha realitzat un disseny des de 0, fent possible dissenyar una
millor arquitectura en comparaci ́o aCKBull Wallet.  Aix ́ı doncs, la capa de domini es defineix a la
Figura 30.
79

Figura 30:  Connexi ́o entre capa de presentaci ́o i domini CKBull Developer Console.
Font:  elaboraci ́o pr`opia.
La comunicaci ́o entre capes dins de l’arquitectura es realitza mitjan ̧cant interf ́ıcies.  D’aquesta
manera  aconseguim  que  el  sistema  segueixi  elprincipi  de  segregaci ́o  d’interf ́ıcies(Interface
segregation  principle)dels principisSOLID[36].  Cada capa cont ́e les interf ́ıcies dels objectes a
connectar de la capa inferior.  En aquest cas, la capa de presentaci ́o utilitza les interf ́ıcies per uti-
litzar la l`ogica de domini, definida amb controladors.
La  l`ogica  de  domini  s’agrupa  segons  la  funcionalitat,  aplicant  elprincipi  de  responsabilitat
 ́unica(single responsibility principle)dels principis SOLID. A la Figura 30 es visualitzen 5 contro-
ladors de domini:
•AuthController:  Gestiona la l`ogica d’autenticaci ́o i autoritzaci ́o de l’usuari.
•UserController: Encarregat de gestionar la l`ogica relacionada amb la informaci ́o de l’usuari.
•DAppController:  Gestiona la l`ogica relacionada amb les dApps generades per l’usuari.
•FileController:  Encarregat de gestionar l`ogica entorn a fitxers que se’n pugin a la web.
•PlaygroundController:  Encarregat de gestionar totes les peticions que es realitzin alplay-
groundde la web.
Mantenint  el  principi  de  segregaci ́o  d’interf ́ıcies,  els  controladors  de  domini  tamb ́e  utilitzant
les  interf ́ıcies  de  la  capa  d’acc ́es  a  dades.   A  la  seg ̈uent  figura  podem  observar  quines  interf ́ıcies
connectem amb els controladors definits anteriorment i la resta de classes que trobem a domini.
80

Figura 31:  Disseny de capa de domini de CKBull Developer Console.
Font:  elaboraci ́o pr`opia.
A m ́es dels controladors, tamb ́e trobem els estats oStates, que correspon a la informaci ́o que
gestiona la capa de domini que  ́es utilitzada per les interf ́ıcies a trav ́es dels controladors, i la classe
RepositoryFactory.  Aquesta classe correspon a una factoria per obtenir inst`ancies de les classes de
la capa de persist`encia.  Nom ́es  ́es usat pelAuthControllerper a aconseguir el repositori encarregat
d’emmagatzemar eltokend’acc ́es de l’usuari.
Disseny de capa d’acc ́es a dades
Com  a   ́ultima  capa  de  la  interf ́ıcie  trobem  la  capa  d’acc ́es  a  dades.   En  aquesta  capa  es  troben
principalment classes que comuniquen amb l’API de domini (CKBull Signer API) i repositoris que
emmagatzemen informaci ́o a la mateixa interf ́ıcie.
Tal com est`a definida la capa de domini,  la capa d’acc ́es a dades tamb ́e usa interf ́ıcies per a
definir la comunicaci ́o entre les dues capes.  La Figura 32 mostra aquesta connexi ́o.
81

Figura 32:  Conexi ́o entre capa de domini i acc ́ess a dades CKBull Developer Console.
Font:  elaboraci ́o pr`opia.
10.2.2    Disseny de CKBull Wallet
A  difer`encia  del  client  CKBull  Developer  Console,  CKBull  Wallet  ́es  unsoftwareque  ja  existia
pr`eviament a la data d’inici del projecte i per al que nom ́es cal implementar la nova funcionalitat.
Per tant, el disseny de la nova funcionalitat s’ha d’adaptar a tant a l’arquitectura implementada
com a l’aspecte visual de l’aplicaci ́o.
Arquitectura de CKBull Wallet
CKBull  Wallet  ́es  una  cartera  digitalblockchainimplementada  com  a  aplicaci ́o  m`obil  que  es  va
iniciar a principis de Febrer de l’any 2022.  Aquesta aplicaci ́o no es basa en cap arquitectura en
capes i conecta directament la interf ́ıcie, la l`ogica i l’acc ́es a dades.  Tot i poder fer unrefactorde
l’arquitectura,  no s’ha decidit incloure aquesta tasca degut als esfor ̧cos que suposa.  Aix ́ı doncs,
per al desenvolupament de la nova funcionalitat s’ha decidit seguir les pautes del disseny actual de
l’aplicaci ́o.
Diagrama de navegabilitat
A continuaci ́o, es llisten totes les navegabilitats que es produeixen dins de l’aplicaci ́o involucrada
en la nova funcionalitat.  La llegenda de colors dels blocs del diagrama correspon a la seg ̈uent:
•Vermell:  P`agines  que  existien  pr`eviament  a  CKBull  Wallet  abans  d’implementar  la  nova
funcionalitat.
82

•Verd:  P`agines noves creades per a la funcionalitat.
•Lila:  Modals i di`alegs nous utilitzats dins de la funcionalitat.
•Groc:  Pestanyes (tabs), incloses dins d’una pantalla, que contenen components o informaci ́o.
•Blanc:  Vista d’un servei extern a l’aplicaci ́o.
Figura 33:  Diagrama de navegaci ́o de CKBull Wallet.
Font:  elaboraci ́o pr`opia.
La navegaci ́o es divideix principalment en 2 camins:  la visualitzaci ́o de la informaci ́o (dApps
connectades,  transaccions  pendents  i  transaccions  signades)  i  la  signatura  de  peticions  (inici  de
sessi ́o  i  transacci ́o).   Tal  com  indica  la  Figura  33,  gran  part  de  la  informaci ́o  ́es  representada  a
trav ́es de modals o di`alegs i no amb p`agines.  D’aquesta manera, una navegabilitat que pot semblar
complexa  es  limita   ́unicament  a  4  p`agines  completes,  que  corresponen  a  la  p`agina  d’activitat,
escanejar el QR, la p`agina de c`arrega i les p`agines d’`exit de signatures d’inici de sessi ́o i transacci ́o.
Dissenys externs
Per a les funcionalitats a desenvolupar a CKBull Wallet, l’empresa Urano tamb ́e va facilitar una
s`erie de dissenys externs de la interf ́ıcie com a est`andards.  A continuaci ́o es mostren la col·lecci ́o
parcial de dissenys.  En alguns casos s’adjunten dos dissenys de la mateixa funcionalitat, a causa
dels diferents modes que disposa l’aplicaci ́o:  mode clar i mode fosc.
83

P`agina d’activitat amb pestanya de transaccions pendents
P`agina accessible des de la p`agina principal. Cont ́e les 3 pestanyes (dApps connectades, transaccions
signades i transaccions pendents) a m ́es d’informaci ́o de la cartera.
Figura 34:  Disseny de la p`agina d’activitat.
Font:  Dissenys d’URANO.
Modal d’acceptaci ́o d’inici de sessi ́o
Modal que es mostra despr ́es d’escanejar un codi QR que cont ́e una petici ́o d’inici de sessi ́o.  Es
mostren les dades principals de la dApp a la que es vol iniciar sessi ́o i es permet seleccionar amb
quin compte es vol iniciar sessi ́o.
84

(a) Disseny en mode clar(b) Disseny en mode fosc
Figura 35:  Dissenys del modal d’inici de sessi ́o.
Font:  Dissenys d’URANO.
Dissenys del di`aleg de rejecci ́o de d’inici de sessi ́o
Di`aleg que permet rebutjar una petici ́o d’inici de sessi ́o.  S’inclou dins del modal de petici ́o d’inici
de sessi ́o.
85

(a) Disseny en mode clar(b) Disseny en mode fosc
Figura 36:  Dissenys del di`aleg de declinaci ́o d’inici de sessi ́o.
Font:  Dissenys d’URANO.
Disseny de p`agina d’`exit de signatura de transacci ́o
Dissenys de la p`agina que es mostra en signar i emetre la transacci ́o amb `exit. Inclou un bot ́o d’enlla ̧c
cap al servei externCKB Explorerque permetr`a comprovar la transacci ́o dins de lablockchain.
86

Figura 37:  Disseny de p`agina d’`exit de signatura de transacci ́o.
Font:  Dissenys d’URANO.
87

10.3    Disseny de domini
La capa de domini del sistema cont ́e  ́unicament un component, CKBull Signer API, que comunica
les interf ́ıcies i les dades a la capa de persist`encia.
10.3.1    Disseny de l’API
El seg ̈uent component a dissenyar  ́es CKBull Signer API, l’ ́unic component de la capa de domini del
sistema.  Com a CKBull Developer Console, aquest component s’ha creat des de 0 per al projecte
i, per tant, s’ha hagut de dissenyar totalment.
Arquitectura de l’API
Com s’ha definit a anteriors components,  s’ha utilitzat l’arquitectura de capes per a estructurar
l’API. S’ha decidit agrupar les capes per funci ́o per a mantenir el principi de responsabilitat  ́unica.
•Controladors:  Punts d’entrada de l’API. Connecten les peticions de les interf ́ıcies amb els
serveis de l’API.
•Serveis:  Classes que proporcionen accions sobre els recursos que gestiona l’API.
•Repositoris:   Objectes  que  permeten  accedir  a  les  dades  emmagatzemades  a  la  capa  de
persist`encia.
Figura 38:  Arquitectura de CKBull Signer API.
Font:  elaboraci ́o pr`opia.
Diagrama de la capa de controladors
Com s’ha descrit a l’apartat anterior, la capa de controladors representa el punt d’entrada de les
peticions de l’API. Aquesta capa no ha de ser la responsable de realitzar les peticions de la crida,
sin ́o  ́unicament verificar l’autenticaci ́o i autoritzaci ́o de les peticions i cridar els serveis que faran
les accions corresponents.
Els controladors s’han agrupat segons el recurs sobre el qual actuen.  A la Figura 39 es veuen
tots els controladors i la connexi ́o amb els interf ́ıcies dels serveis que utilitzen.
88

Figura 39:  Diagrama de la capa de controladors de l’API.
Font:  elaboraci ́o pr`opia.
Ja que l’API s’implementar`a sobre el protocol HTTP, els controladors tindran unes direccions
on els usuaris podran demanar els recursos.  Aquestes rutes es poden trobar a l’annex Secci ́o B.1
Diagrama de la capa de serveis
Les classes incloses dins d’aquesta capa corresponen als serveis de l’API que efectuen operacions
sobre els recursos.  Dins d’aquesta capa no s’haurien de fer comprovacions a nivell d’autoritzaci ́o i
autenticaci ́o.  El diagrama resultant d’aquesta capa  ́es el seg ̈uent.
89

Figura 40:  Diagrama de serveis de l’API.
Font:  elaboraci ́o pr`opia.
Com  es  pot  veure  a  la  Figura  40,  s’ha  intentat  produir  el  menor  acoblament  entre  serveis.
 ́
Unicament TransactionRequestService, DappService i UserService utilitzen altres serveis per a fer
crides.  No obstant aix`o, els serveis connecten tamb ́e amb la capa d’acc ́es a dades.  Les connexions
dels serveis amb les interf ́ıcies es defineix a la seg ̈uent figura.
90

Figura 41:  Diagrama de serveis amb interf ́ıcies de repositoris.
Font:  elaboraci ́o pr`opia.
Diagrama de de la capa de repositoris
Per finalitzar l’arquitectura de CKBull Signer API, definim la capa de repositoris.  Aquesta capa
 ́unicament cont ́e classes repositori, encarregades de l’acc ́es a les dades de la capa de persist`encia
(del  sistema).   A  m ́es,  cont ́e  classesentity(entitat)  que  representen  quins  recursos  utilitzen  els
repositoris.
91

Figura 42:  Diagrama de repositoris de l’API.
Font:  elaboraci ́o pr`opia.
92

10.4    Disseny de la persist`encia
L’ ́ultima capa de l’arquitectura del sistema que queda per dissenyar  ́es la capa de persist`encia.  Dins
d’aquesta capa es troben tots els components que emmagatzemen dades importants per al sistema
que s ́on utilitzades per les interf ́ıcies o per l’API. L’ ́unic component de la capa que cal dissenyar
 ́es la base de dades, ja que el contenidor S3 d’AWS ja es trobava pr`eviament configurat i s’usa en
altres projectes de Peersyst com a repositori per emmagatzemar continguts com imatges i fitxers.
10.4.1    Disseny de la base de dades
Per  a  fer  un  disseny  que  compleixi  els  requisits  funcionals  del  sistema,  cal  tindre  en  compte  els
seg ̈uents factors:
•Rapidessa:  La transmissi ́o d’informaci ́o entre l’API i la base de dades ha de produir-se de
la manera m ́es r`apida possible.
•Flexibilitat a l’acc ́es de dades:  En ser la primera versi ́o d’un producte,  ́es possible que
durant el temps s’afegeixin funcionalitats addicionals a les definides a la mem`oria d’aquest
projecte. Aix ́ı doncs, cal fer servir una base de dades que ofereixi flexibilitat sobre les consultes
als recursos.
Dels diferents tipus de base de dades que existeixen, l’opci ́o seleccionada ha resultat unabase
de dades relacional.  Amb aquesta decisi ́o, aconseguim satisfer per a aquesta versi ́o del projecte
la rapidesa de la informaci ́o i la flexibilitat a l’acc ́es de dades, ja que aquestes s’emmagatzemen en
un model de taules (amb files i columnes).
Les dades que emmagatzemarem corresponen a les entitats usades pels repositoris que s’han descrit
a la capa de domini (Figura (42).
Descripci ́o general de les taules
A continuaci ́o, es descriuran les restriccions sobre els atributs de cada taula de la base de dades.
La Figura 43 mostra tota la informaci ́o completa de les taules.
La taula AccountMetadata emmagatzema la informaci ́o que aporta un usuari de lawalletquan
accepta una petici ́o d’inici de sessi ́o per part d’una dApp.  La sevaclau prim`aria ́es l’atributid
(autogenerat) i consta dels atributsaddress(adre ̧ca del compte de l’usuari) inetwork(mainnet o
testnet).  La combinaci ́od’address i network ha de ser  ́unica per evitar valors repetits.
TaulaAccountMetadata
Atributs
idPRIMARY KEY
addressNOT NULL
networkNOT NULL
address + networkUNIQUE
Taula 50:  Restriccions de la taula AccountMetadata.
La taula SignInRequest emmagatzema les peticions d’inici de sessi ́o generades per les dApps i
actualitza el seu estat segons l’acci ́o dels usuaris de leswallet.  La sevaclau prim`ariacorrespon
93

a l’atributid(autogenerat) i l’atributsignInTokensent  ́unic, ja que fa refer`encia al SignInToken.
Cont ́edues claus externesque fan refer`encia a les taules DApp i AccountMetadata, que referen-
cien a quina dApp correspon la petici ́o d’inici de sessi ́o i qui ha acceptat la petici ́o.
TaulaSignInRequest
Atributs
idPRIMARY KEY
signInTokenNOT NULL UNIQUE
statusNOT NULL
createdatNOT NULL
expiresatNOT NULL
dappapikeyNOT NULL REFERENCES DApp
metadataIdREFERENCES AccountMetadata
Taula 51:  Restriccions de la taula SignInRequest.
La taula TransactionRequest guarda les peticions de transacci ́o generades per una dApp a partir
d’una SignInRequest.  Per aquesta ra ́o, podem trobar que la taula cont ́e unaclau externa cap
a SignInRequestque indica a quina SignInRequest est`a lligada la petici ́o.  A m ́es, la sevaclau
prim`ariatamb ́e correspon a un identificadorid(autogenerat) i cont ́e una altraclau externa cap
a la taula Transaction, que referencia la transacci ́o a signar.
TaulaTransactionRequest
Atributs
idPRIMARY KEY
transactionTokenNOT NULL UNIQUE
statusNOT NULL
createdatNOT NULL
expiresatNOT NULL
signInRequestTokenNOT NULL REFERENCES SignInRequest
transactionIdNOT NULL REFERENCES Transaction
Taula 52:  Restriccions de la taula TransactionRequest.
La taula Transaction cont ́e informaci ́o rellevant sobre les transaccions que se signen mitjan ̧cant la
plataforma.  La sevaclau prim`ariacorrespon a un identificadorid(autogenerat).  Tamb ́e disposa
del camptransaction, que emmagatzema l’objecte que cont ́e tota la informaci ́o de la transacci ́o, i
un camptransactionHashque deixa de sernullquan la transacci ́o  ́es signada.
TaulaTransaction
Atributs
idPRIMARY KEY
transactionNOT NULL
Taula 53:  Restriccions de la taula Transaction.
La  taula  DApp   ́es  l’encarregada  d’emmagatzemar  la  informaci ́o  de  la  dApp,  proporcionada
pel desenvolupador (objecte de la taula User).  Com a la resta de taules, la sevaclau prim`aria
94

correspon a l’atributid(autogenerat).  Disposa de diferents atributs  ́unics, com l’atributnamei
apiKey.   Per  referenciar  l’usuari  creador  de  la  dApp,  cont ́e  unaclau  externa  sobre  l’atribut
userIdcap a la taula User.
TaulaDApp
Atributs
idPRIMARY KEY
nameNOT NULL UNIQUE
descriptionNOT NULL
emailNOT NULL
projectUrlNOT NULL
supportUrlNOT NULL
createdatNOT NULL
updatedatNOT NULL
apiKeyNOT NULL UNIQUE
apiSecretNOT NULL
userIdNOT NULL REFERENCES USER
Taula 54:  Restriccions de la taula DApp.
La taula User fa refer`encia a l’actorDesenvolupador de dApps. La sevaclau prim`ariacorrespon
a un identificadorid(autogenerat).  A m ́es, l’atributemailcont ́e una restricci ́o d’ ́unic.
TaulaUser
Atributs
idPRIMARY KEY
nameNOT NULL
emailNOT NULL UNIQUE
emailverifiedNOT NULL
passwordNOT NULL
typeNOT NULL
googleAuthNOT NULL
createdatNOT NULL
updatedatNOT NULL
Taula 55:  Restriccions de la taula User.
La  taula  VerifyEmailToken  emmagatzema  els  tokens  de  verificaci ́o  dels  usuaris  quan  aquests
creen un compte.  La sevaclau prim`ariacorrespon a un identificador id (autogenerat) i compta
amb unaclau externa sobre l’atributuserIdcap a la taula User, que indica quin usuari ha de
verificar el seu compte.  Un cop l’usuari es verificat, l’atribut verified es tornatrue.
95

TaulaVerifyEmailToken
Atributs
idPRIMARY KEY
userIdNOT NULL UNIQUE REFERENCES USER
tokenNOT NULL
verifiedNOT NULL
createdatNOT NULL
Taula 56:  Restriccions de la taula VerifyEmailToken.
Per finalitzar, la taula ResetToken emmagatzema elstokensque permeten als usuaris (User) la
seva contrasenya (password).  La sevaclau prim`aria ́es un identificador id (autogenerat) i, com a
la taula anterior, tamb ́e disposa d’una clau externa sobre l’atributuserIdcap a la taula User.
TaulaResetToken
Atributs
idPRIMARY KEY
userIdNOT NULL UNIQUE REFERENCES USER
tokenNOT NULL
expirationNOT NULL
verifiedNOT NULL
createdatNOT NULL
updatedatNOT NULL
Taula 57:  Restriccions de la taula ResetToken.
96

Diagrama de les taules de la base de dades
Figura 43:  Disseny de les taules de la base de dades.
Font:  elaboraci ́o pr`opia.
10.5    Patrons de disseny
A  mode  de  resum  del  disseny  del  sistema,  s’inclouen  a  continuaci ́o  tots  els  patrons  de  disseny
utilitzats.   L’ ́us  dels  patrons  de  disseny  dins  de  l’arquitectura  del  projecte  ́es  degut  a  l’aplicaci ́o
de bones pr`actiques que permetin produir un codi escalable i flexible.  Aquests patrons es veuran
categoritzats segons el tipus de patr ́o que siguin:creacionalsoestructurals.
10.5.1    Patrons creacionals
•Singleton:  Patr ́o  que  permet  a  una  classe  tindre   ́unicament  una  inst`ancia  que  pugui  ser
accessible globalment.  [37].  Aquest patr ́o s’ha usat en combinaci ́o amb el seg ̈uent per a la
creaci ́o de les factories de CKBull Developer Console (ControllerFactoryiRepositoryFactory).
•Factor ́ıa simple:  Patr ́o que usa una classe per a la creaci ́o d’objectes d’altres classes.  Uti-
litzada, com s’ha descrit al patr ́o anterior, per a les factories dels controladors de domini i els
repositoris de CKBull Developer Console [38].
97

En aquesta secci ́o  ́unicament s’han descrit els patrons usats en el disseny del sistema.  Posterior-
ment al Cap ́ıtol 11 s’afegiran nous patrons segons la tecnologia que es faci servir per a desenvolupar
el sistema.
98

Cap ́ıtol 11
Implementaci ́o
Un  cop  definit  el  disseny  del  sistema,  amb  els  seus  components  i  les  seves  interaccions,   ́es  hora
d’implementar  la  soluci ́o.   Aquest  cap ́ıtol  es  divideix  en  tres  seccions  principals,  on  cadascuna
descriu la implementaci ́o de cada component del sistema.
11.1    Tecnolog ́ıes comunes
Per  a  afavorir  una  implementaci ́o  `agil  acord  amb  les  tecnologies  utilitzades  per  Peersyst,  s’han
definit unes tecnologies comunes entre les tres implementacions.  D’aquesta manera, el desenvolu-
pament del projecte no es veur`a afectat en gran mesura pel riscLimitacions t`ecniquesdefinit al
Cap ́ıtol 7.  A continuaci ́o, es llisten les tecnologies comunes entre les tres solucions amb una breu
descripci ́o.
Javascript
Llenguatge  de  programaci ́o  interpretat  fet  servir  principalment  per  alscriptingen  p`agines  web.
Durant els anys s’ha est`es m ́es enll`a del navegador i, gr`acies a altres tecnologies com Node [39], es
pot usar per a altres usos, com desenvolupament de servidors [40].
Typescript
Llenguatje de programaci ́o tipat i compilat constru ̈ıt sobre Javascript.  Entre els seus usos es troba
la inferencia de tipus i la creaci ́o de tipus personalitzats.  S’utilitza al projecte per mantenir una
sint`axi llegible i evitar el nombre m ́es gran d’errors possibles (objectiu alineat amb evitar el risc
Aparici ́o d’errors i bugs[41].
Yarn
Gestor de paquets utilitzat per a gestionar les depend`encies dels projectes.
 ́
Es compatible amb els
llenguatges esmentats i s’usa a totes les implementacions.  A m ́es,  ́es fet servir per Peersyst i, per
tant, ajuda a mantenir la coher`encia tecnol`ogica entre projectes [42].
Docker
Docker  ́es un programari de codi obert que permet, entre altres funcionalitats, desplegar projectes
de manera autom`atica incloent tots els recursos necessaris abstraient la capa f ́ısica [43].  Aquesta
tecnologia ha sigut utilitzada per tots els components del sistema per agilitzar el desplegament de
les solucions i poder emular aquests durant el desenvolupament.
99

11.2    CKBull Developer Console
Dintre de les m ́ultiples possibilitats que existeixen per a construir CKBull Developer Console, s’ha
escollit la soluci ́o d’implementar unaaplicaci ́o web.  Els principals factors que han determinat
aquesta decisi ́o han estat elconeixement de la tecnologiaa utilitzar, lacomplexitat de la
soluci ́oisatisfer els requisits funcionals i funcionals del sistema.
Gr`acies a realitzar assignatures durant el grau relacionades amb el desenvolupament web, com
Arquitectura i Serveis Web,  i l’aprenentatge continu durant el desenvolupament del projecte,  he
disposat de coneixement per a fer una soluci ́o que s’adapti als requisits del problema.
11.2.1    Tecnolog ́ıes
CKBull Developer Console s’ha desenvolupat com una aplicaci ́o webclient-side  rendering
1
amb
les tecnologies que s’usen a Peersyst per al desenvolupament.
React
Llibreria de Javascript feta servir per a la construcci ́o dels components de la interf ́ıcie web.  React
permet tant el desenvolupament d’interf ́ıcies web i natives i  ́es pensada per segmentar la interf ́ıcie
en components, que poden encapsular estat i l`ogica.  A m ́es, a difer`encia delserver-side rendering
permet actualitzar els components de la interf ́ıcie sense refrescar la p`agina [44].
React components (Peersyst)
Llibreria de components per React desenvolupada per Peersyst.  Inclou diferents components d’in-
terf ́ıcie que permeten un desenvolupament m ́es `agil.  En tractar-se d’una llibreria creada per Pe-
ersyst,  durant  el  desenvolupament  del  projecte  s’han  afegit  altres  elements  necessaris  per  a  la
construcci ́o de les solucions [45].
React Router
Llibreria per utilitzar la navegaci ́oclient-side routingamb React.  Aquest tipus de navegaci ́o permet
poder renderitzar components a la interf ́ıcie sense demanar al servidor la informaci ́o.  S’ha fet servir
per a tota la navegaci ́o de l’aplicaci ́o [46].
React Query
Llibreria que permet realitzar peticions de dades a altres serveis, abstraient la implementaci ́o de la
l`ogica i l’estat de la petici ́o.  Fent  ́us aquesta llibreria s’ha aconseguit gestionar de manera eficient
l’estat de les peticions i els errors [47].
Styled components
Llibreria que permet estilitzar components d’una interf ́ıcie amb CSS. S’ha usat per a modificar i
maquetar els components de la interf ́ıcie d’acord amb els dissenys proporcionats per Urano [48].
Zustand
Utilitat lleugera que permet gestionar els estats d’un software delsframeworksutilitzats.  En aquest
projecte, s’ha fet servir per a gestionar estats globals del sistema com les credencials alplayground
i informaci ́o del desenvolupador [49].
1
Permet desenvolupar aplicacions web que renderitzen completament al navegador.
100

i18next
Un dels requisits no funcionals del projecte  ́es lainternacionalitzaci ́o, que correspon a proporci-
onar als usuaris les funcionalitats en diferents idiomes, en aquest cas castell`a i angl`es.  La llibreria
i18next permet afegir m ́ultiples idiomes a l’aplicaci ́o [50].
11.3    CKBull Signer API i base de dades
Ja que les interf ́ıcies amb la que es comunicar`a CKBull Signer API s ́on aplicacions web i natives,
l’opci ́o m ́es encertada per a un desenvolupament `agil de l’API  ́es la construcci ́o d’aquesta sobre
el protocol HTTP. A m ́es,  ́es un protocol amb el qual s’han dut a terme projectes anteriorment a
Peersyst i tamb ́e durant algunes assignatures al grau.
11.3.1    Tecnolog ́ıes de l’API
Peersyst tamb ́e disposa d’un conjunt de tecnolog ́ıes (stack) per a la producci ́o d’APIs sobre HTTP.
Les tecnologies utilitzades per aqueststacks ́on les descrites a continuaci ́o.
NestJS
Framework  open-sourcede Node.js que permet desenvolupar de manera progressiva aplicacions so-
bre servidors.  El seu desenvolupament  ́es basat en m`oduls i la injecci ́o de depend`encies, permetent
aix ́ı un desenvolupament a mesura, segons les funcionalitats a implementar, i eficient.  Usa per sota
la llibrer ́ıaexpress, un altreframeworkde Node.js per a construir aplicacions de servidors [51].
typeorm
ORM (Object-relational mapping) multiplataforma que permet abstraure les crides a base de da-
des.  Es pot fer servir amb Javascript i Typescript.  S’ha usat a la capa de repositoris, especificada
a la Figura 42, per facilitar les crides a la base de dades i gestionar les entitats[52].
class-validator
Llibreria de decoradors per a la validaci ́o d’atributs a classes.  S’ha fet servir principalment per a
la validaci ́o d’objectes a les crides de l’API, models de la base de dades i DTOs [53].
passport amb jwt
Llibreria que ofereixmiddlewared’autenticaci ́o utilitzada sobre Node.js.  Permet fer servir diferents
estrat`egies d’autentificaci ́o.  En aquest cas, s’ha fet servir l’estrat`egia amb JWT (json-web-tokens)
per a l’autenticaci ́o dels desenvolupadors mitjan ̧cant CKBull Developer Console [54].
ckb-peersyst-sdk
Mateix SDK fet servir a CKBull Wallet per a agilitzar la integraci ́o de crides de CKB.
 ́
Unicament
utilitzat per a la producci ́o delplaygroundper a la generaci ́o de transaccions parcials de criptomo-
nedes natives i NFTs.
101

11.3.2    Tecnolog ́ıes de la base de dades
Com  s’ha  definit  a  l’apartatDisseny  de  la  base  de  dades,  s’ha  optat  per  a  l’ ́us  d’una  base
de  dades  relacional.   Dintre  d’aquest  tipus  trobem  moltes  opcions  disponibles  com  ara  MySQL,
MariaDB, Oracle...  No obstant aix`o, la base de dades que s’ha utilitzat ha sigutPosgreSQL, pel
fet que s’ha utilitzat anteriorment a altres projectes a Peersyst.  Gr`acies a assignatures com Base
de dades (BD) i Disseny de Bases de dades (DBD) no s’han trobat impediments,  com dificultat
d’aprenentatge de la tecnologia, durant el desenvolupament.
11.3.3    Seguretat
Com ja s’ha especificat anteriorment existeixen diferents tipus d’actors que interactuen amb l’API:
els  desenvolupadors  de  dApps  (que  interactuen  mitjan ̧cant  l’ ́us  de  CKBull  Developer  Console)  i
la dApp creada pel desenvolupador (que interactua mitjan ̧cant les credencials API). Per a poder
asegurar que els actors que es connecten a l’API s ́on qui representen, s’han aplicat diferents tipus
d’autenticaci ́o.
Autenticaci ́o per a desenvolupadors de dApps
Ja  que  la  interacci ́o  dels  desenvolupadors  amb  l’API  es  realitza  mitjan ̧cant  la  interf ́ıcie  CKBull
Developer Console, l’autenticaci ́o implementada es basa enJSON  Web  Tokens.  ElsJSON Web
Tokenscorresponen  a  l’est`andard  RFC  7519  [55]  i  la  seva  funci ́o   ́es  transmetre  informaci ́o  de
manera segura entre dues entitats mitjan ̧cant un objecte JSON.
El proc ́es d’autenticaci ́o inicia quan el desenvolupador vol identificar-se iniciant sessi ́o a CK-
Bull  Developer  Console,  proporcionant  les  seves  credencials.   Aquestes  s ́on  enviades  a  l’API  on
es comprova si s ́on correctes i, en cas afirmatiu, es retorna unstringque contindr`a la informaci ́o
encriptada del JSON Web Token.  La informaci ́o transmesa pel JSON correspon a:
•alg:  Algoritme utilitzat per encriptar el JWT.
•typ:  Tipus de token.
•email:  Adre ̧ca de correu electr`onic del desenvolupador que vol identificar-se.
•id:  Nombre enter identificador de l’usuari.
•iat:  Data en formattimestampde la creaci ́o del token.
•exp:  Data d’expiraci ́o del token en formattimestamp.
Amb aquest identificador retornat a la interf ́ıcie, el desenvolupador es tornar`a validat i podr`a
realitzar la resta de crides del sistema, com crear, editar i esborrar dApps.  Cada crida contindr`a el
token que es verificar`a abans d’actuar sobre l’acci ́o demanada pel desenvolupador.  Un cop s’arribi
a la data d’expiraci ́o, el token romandr`a expirat i el desenvolupador haur`a de tornar a identificar-se
per tornar a fer crides protegides.
102

Figura 44:  Proc ́es d’autenticaci ́o amb JWT.
Font:  elaboraci ́o pr`opia.
Autenticaci ́o per dApps
Per a validar l’autenticaci ́o d’una dApp quan aquesta vol interactuar amb l’API s’utilitza un altre
m`etode  diferent  de  l’utilitzat  amb  els  desenvolupadors.   Com  s’ha  detallat  a  l’especificaci ́o  i  al
disseny, les dApps, un cop enregistrades pels desenvolupadors a CKBull Developer Console, obtenen
unes credencials per a identificar-se.  Les credencials corresponen a dues claus API: API Key iAPI
secret.  L’ ́us d’aquestes credencials  ́es semblant a l’ ́us fet servir a la criptograf ́ıa de clau p ́ublica
i clau privada.  Per a autenticar els usuaris mitjan ̧cant claus API, s’ha implementat l’algoritme
HMAC-SHA512[56] per a produir missatges signats mitjan ̧cant l’API  secret.  El funcionament
de l’autenticaci ́o segueix les seg ̈uents passes:
1.  dApp:   Generar  untimestampque  actuar`a  com  apayloadper  a  signar  amb  l’API  secret
mitjan ̧cant l’algoritme HMAC-SHA512.
2.  dApp:   Enviar  a  la  cap ̧calera  de  la  petici ́o  HTTP  l’API  key,  eltimestampi  la  signatura
obtinguda.
3.  API: Obtenir l’API secretde la base de dades mitjan ̧cant l’API key.
4.  API: Executar el primer pas amb eltimestampenviat per l’API. En cas que la signatura sigui
la mateixa, es verifica la dApp.  Altrament es denega la petici ́o.
La figura seg ̈uent resumeix l’autenticaci ́o a les peticions de les dApps amb l’API.
103

Figura 45:  Proc ́es d’autenticaci ́o per dApps.
Font:  elaboraci ́o pr`opia.
La dApp  ́estotalment responsable de no compartir o exposar l’API secretja que  ́es
l’objecte que permet identificar-lo.  En cas de filtraci ́o o p`erdua de la credencial, el desenvolupador
podr`a regenerar l’API secreta CKBull Developer Console.
A  m ́es  d’aplicar  processos  d’autenticaci ́o  per  garantir  la  seguretat,  tamb ́e  s’han  aplicat  cripto-
grafia per a encriptar informaci ́o cr ́ıtica de la base de dades.  Per a veure en detall els motius i com
s’ha encriptat aquesta informaci ́o es recomana llegir el Cap ́ıtol 14.
11.4    CKBull Wallet
En ser CKBull Wallet un projecte ja en estat de producci ́o, s’ha partit d’una tecnologia i t`ecniques
ja definides.  CKBull Wallet  ́es una aplicaci ́o m`obil multiplataforma disponible per aiOSiAndroid.
Per tant, el desenvolupament de les noves funcionalitats encara utilitzar`a les seg ̈uents tecnologies.
React native
 ́
Es  unframeworkde  Javascript  usat  per  a  la  construcci ́o  d’interf ́ıcies  multiplataforma,  popular-
ment utilitzada a iOS i Android, mitjan ̧cant React.  Segueix l’esquemalearn once, apply anywhere,
referint-se a la capacitat d’aprendre  ́unicament el framework per a poder produir interf ́ıcies a les
dues plataformes.  A m ́es,  ́es fet servir per Peersyst per al desenvolupament de qualsevol aplicaci ́o
104

nativa [57].
Expo
Plataformaopen-sourceque  funciona  sobre  React  Native  per  potenciar  el  desenvolupament  d’a-
plicacions  natives  multiplataforma.   Permet  el  desenvolupament  mitjan ̧cant  l’ ́us  de  Javascript  i
Typescript i proporciona als desenvolupadors un servei de construcci ́o d’aplicacions autom`atic [58].
React components (Peersyst)
Com a CKBull Developer Console,  la llibrer ́ıa React components inclou tamb ́e diferents compo-
nents  d’interf ́ıcie  per  al  seu   ́us  amb  React  Native.   Gran  part  dels  components  de  React  Native
comparteixen la mateixa l`ogica o esquelet amb els components de React fets servir a CKBull De-
veloper Console [45].
React Navigation
React Navigation  ́es una llibreria de React Native que permet gestionar les pantalles d’una apli-
caci ́o nativa i mantenir un historial de pantalles visitades.  El seu  ́us  ́es pr`acticament id`entic al de
la llibrer ́ıa React Router utilitzada a CKBull Developer Console, per`o utilitzant una estructura de
dades diferent per adaptar-ho a l’ecosistema natiu [59].
React Query
Llibreria que permet realitzar peticions de dades a altres serveis, abstraient la implementaci ́o de la
l`ogica i l’estat de la petici ́o.  Utilitzant aquesta llibreria s’ha aconseguit gestionar de manera eficient
l’estat de les peticions i els errors [47].
Styled components
Com s’ha descrit anteriorment,  Styled components  ́es una llibreria que permet estilitzar compo-
nents d’una interf ́ıcie amb CSS i, en aquest cas, els estils propis de React Native.  S’ha fet servir
per a modificar i maquetar els components de la interf ́ıcie d’acord amb els dissenys proporcionats
per Urano [48].
Recoil
Llibreria externa que permet gestionar l’estat dels components de la interf ́ıcie d’una manera senzilla
i eficient.  Tot i disposar delcontextde React Native, s’ha decidit usar aquesta llibreria a causa de
les poques l ́ınies de codi que calen per gestionar un estat i l’efici`encia de la gesti ́o [60].
i18next
Mateixa llibreria usada a CKBull Developer Console per a afegir multiidioma a l’aplicaci ́o. Pr`eviament
al desenvolupament del projecte ja es trobava aplicada la funcionalitat amb diferents idiomes [50].
ckb-lumos
Frameworkopen-sourceper a Javascript i Typescript per al desenvolupament de dApps dins de
l’ecosistema de Nervos CKB. Inclou crides com enviament de transaccions, creaci ́o de comptes, etc.
S’ha fet servir per a desenvolupar un SDK explicat al seg ̈uent punt [61].
ckb-peersyst-sdk
SDK desenvolupat per Peersyst per afavorir la integraci ́o de la llibreria ckb-lumos i agilitzar les
crides a lablockchain.  Les operacions de signatura i enviament s ́on exemples de crides realitzades
mitjan ̧cant el SDK. Durant el proc ́es de desenvolupament del projecte, aquesta llibreria ha sigut
105

modificada per a poder adaptar certes crides a la soluci ́o plantejada.
11.5    T ́ecniques i pr`actiques
Per a la implementaci ́o dels diferents components del sistema s’han seguit una s`erie de t`ecniques
i pr`actiques agn`ostiques a la tecnologia utilitzada a la implementaci ́o.  A continuaci ́o es llisten les
t`ecniques emprades amb una breu descripci ́o que s ́on i que aporten al desenvolupament.
11.5.1    Monorepo
Monorepo correspon al concepte d’usar un mateix repositori de codi per a emmagatzemar
diferents projectes.  Un exemple d’aquest tipus de t`ecnica correspon a tindre un directori dins
del repositori per a cada projecte.  Existeixen diversos beneficis i inconvenients en comparaci ́o amb
Polyrepo, la t`ecnica contr`aria, per`o l’opci ́o el principal avantatge que aconseguim en aquest projecte
es dona a la fase del desenvolupament del projecte.
Amb l’estructura monorepo disposem tant deCKBull Developer Console com de CKBull
Signer API dins del mateix repositori, facilitant el desenvolupament en local i el desplega-
ment dels dos projectes.  CKBull Wallet queda excl`os d’aquesta estructura pel fet que  ́es un projecte
desenvolupat anteriorment i disposa del seu propi repositori.  Dins d’aquest projecte CKBull De-
veloper  Console  i  CKBull  Signer  API  es  troben  dins  de  la  carpetapackagessota  els  aliasses  de
frontendibackendrespectivament.
Figura 46:  Estructura de carpetes del monorepo.
Font:  elaboraci ́o pr`opia.
11.5.2    Estructura modular
Una altra t`ecnica que s’ha aplicat al desenvolupament de tots els components del projecte  ́es l’es-
tructura modular.  Aquesta t`ecnica consisteix a encapsular els components, estats, crides i errors
entre  altres  segons  la  seva  funcionalitat.   El  principal  benefici  d’aquest  d’aquesta  t`ecnica   ́es  un
acoblament redu ̈ıt entre els components i una major organitzaci ́o del codi.
Segons  el  tipus  de  m`odul  i  de  projecte  pot  seguir  diferents  estructures.   Per  exemple,  la  figura
seg ̈uent representa un exemple de com s’agrupen els components a CKBull Developer Console.
106

(a) Estructura de m`odul UI(b) Estructura de m`odul DApp
Figura 47:  Exemples d’estructura modular a CKBull Developer Console.
Font:  elaboraci ́o pr`opia.
11.5.3    Entorns
Durant el desenvolupament del projecte, s’han definit entorns en el que es pot trobar un component
del sistema segons la fase a la qual es trobi.  En espec ́ıfic, s’han definit els 3 seg ̈uents:
•Development(o desenvolupament): Entorn on es desenvolupa elsoftwaredel projecte.  Dins
d’aquest entorn es realitza tant desenvolupament com proves del sistema.
•Staging(o r`eplica de producci ́o): Entorn on es troben totes les funcionalitats desenvolupades
a l’entorndevelopment.  Aquest entorn actua com una r`eplica quasi exacta del seg ̈uent entorn.
•Production(o producci ́o):  Entorn on es troba la versi ́o m ́es estable delsoftware.  En aquest
entorn interactuen els usuaris directament alsoftware.
La relaci ́o que s’estableix entre els tres entorns  ́es l’especificada a la seg ̈uent figura:
Figura 48:  Relaci ́o entre entorns.
Font:  elaboraci ́o pr`opia.
Idealment, cada cop que es desenvolupa unanova funcionalitat, aquesta es replica a l’entorn
destaging.   Aquesta  replicaci ́o  no  es  limita  a   ́unicament  noves  funcionalitats,  sin ́o  que  s’est ́en
tamb ́e afixesi solucions a errors obugs.  Un cop la funcionalitat ha sigut testejada a l’entorn de
107

stagingaquesta pot passar a l’estat de producci ́o mitjan ̧cat unarelease
2
,  on ser`a utilitzada pels
usuaris delsoftware.  Respecte a l’ ́us d’aquests entorns durant la vida del projecte, s’han fet servir
des  de  l’inici  els  entorns  dedevelopmenti  l’entorn  destaging.   L’entorn  de  producci ́o  ha  variat
segons  els  components.   CKBull  Wallet  ja  disposava  d’un  entorn  de  producci ́o  actiu  pr`eviament
al  desenvolupament  de  la  funcionalitat.   En  canvi,  CKBull  Developer  Console  i  CKBull  Signer
API van entrar a l’entorn deproductiona la fase final del projecte, un cop estaven fetes totes les
funcionalitats, a causa de la depend`encia de CKBull Signer API sobre la resta de components.
11.6    Patrons de disseny
En  aquesta  secci ́o,  s’afegiran  als  patrons  de  disseny  definits  al  Cap ́ıtol  10  els  patrons  que  s’han
utilitzat a la implementaci ́o.  Seguint la definici ́o, es dividiran segons la seva categoria:  creacionals,
estructurals i de comportament.
11.6.1    Patrons creacionals
•Singleton:  Patr ́o  que  permet  a  una  classe  tindre   ́unicament  una  inst`ancia  que  pugui  ser
accessible globalment.  [37].  Aquest patr ́o s’ha utilitzat en combinaci ́o amb el seg ̈uent per a la
creaci ́o de les factories de CKBull Developer Console (ControllerFactoryiRepositoryFactory).
•Factor ́ıa simple:  Patr ́o que usa una classe per a la creaci ́o d’objectes d’altres classes.  Uti-
litzada, com s’ha descrit al patr ́o anterior, per a les factories dels controladors de domini i els
repositoris de CKBull Developer Console [38].
•Data Transfer Object(o objecte de transmissi ́o de dades):  Patr ́o utilitzat per a transferir
informaci ́o entre processos [62].  A difer`encia dels objectes de negoci (com les entitats), els
DTOs nom ́es han d’utilitzar-se per a la transmissi ́o d’informaci ́o i no per a emmagatzemar-la.
S’ha fet servir per a la transmissi ́o de les entitats, emmagatzemades a base de dades, entre
els components del sistema.
•Dependency Injection(o injecci ́o de depend`encies):  Patr ́o de disseny en el qual un objecte
o funci ́o rep altres objectes dels quals dep`en per funcionar [63], sense saber com es constru-
eixen.  La injecci ́o de depend`encies ajuda a mantenir una arquitectura amb poc acoblament.
Com a exemple, s’ha utilitzat als controladors de domini de CKBull Developer Console i als
components de CKBull Signer API.
11.6.2    Patrons estructurals
•Repository(o repositori):  Patr ́o de disseny centrat a mantenir tota la l`ogica de persist`encia
de  dades  agn`ostica  a  la  capa  de  domini  [64].   S’utilitza  tant  a  CKBull  Developer  Console,
per  a  emmagatzemar  el  JWT  del  desenvolupador,  i  a  CKBull  Signer  API,  per  gestionar
l’emmagatzemament d’entitats.
•Data  Mapper(o  mapeig  de  dades):  Patr ́o  de  disseny  semblant  a  l’anterior,  on  per  cada
objecte existeix una interf ́ıcie que presenta operacions sobre l’objecte [65].
 ́
Es fet servir per a
la comunicaci ́o entre l’API i la base de dades per gestionar les taules i les entitats.
2
Release:  Treure, estrenar, fer p ́ublica una informaci ́o.
108

Cap ́ıtol 12
Tests i validaci ́o de requisits
Per  a  poder  garantir  que  el  sistema  funciona  correctament   ́es  necessari  aplicar  mecanismes  de
validaci ́o.  En aquest cap ́ıtol s’especifiquen les t`ecniques utilitzades durant el proc ́es de validaci ́o i
proves.
12.1    T`ecniques de validaci ́o
Pr`eviament a l’explicaci ́o de la validaci ́o dels requisits del sistema,  ́es convenient explicar quines
t`ecniques s’han aplicat per proves sobre elsoftware, com s’han aplicat i a quins components.
Com s’ha descrit durant el projecte, aquest sistema consta de parts diferents que es comuniquen en-
tre elles.  A nivell de desenvolupament, s’han hagut de fer proves sobre els tres components descrits
a la implementaci ́o:  la interf ́ıcie web CKBull Developer Console, l’aplicaci ́o m`obil CKBull Wallet i
l’API CKBull Signer API. A causa dels recursos temporals que dels que es disposaven s’ha optat
per a fer els seg ̈uents tipus de proves.
12.1.1    Tests unitaris
Els tests unitaris [66] s ́on proves desoftwareque es realitzen sobre una pe ̧ca individual de codi per a
determinar si aquesta funciona correctament.  Aquest tipus de tests s’ha utilitzat als 3 components
desenvolupats.  Un exemple d’un test unitari a la interf ́ıcie CKBull Developer Console es pot veure
representat a la Figura 49.  Aquest tipus de proves s’han utilitzat per als components d’interf ́ıcie
de CKBull Developer Console i CKBull Wallet i per als serveis de CKBull Signer API.
109

Figura 49:  Test unitari del component DAppList.
Font:  elaboraci ́o pr`opia.
En aquest exemple es mostren dos tests que determinen si el component de la interf ́ıcieDAppList
es comporta com s’espera.  La funcionalitat d’aquest component  ́es mostrar les dApps que li arriben
per par`ametre en format de vector i en cas de ser aquest vector buit mostrar un missatge avisant
que l’usuari no t ́e dApps. En el primer test, el component renderitza amb dos dApps i comprova que
es visualitza el nom, la descripci ́o i la imatge de la dApp.  Altrament, al segon test el component
renderitza  un  vector  buit  i,  a  continuaci ́o,  es  comprova  amb  la  funci ́oexpectque  es  mostra  el
missatge esperat.  No obstant aix`o, als tests unitaris no es proporciona cap mena de dades reals,
sin ́o que s’utilitza la t`ecnica seg ̈uent.
12.1.2Mock objects
Elsmock objects[67] (o objectes simulats) s ́on objectes que repliquen el comportament i els atributs
d’un objecte real o de negoci.  Amb aquesta t`ecnica, garantim que els components que usin aquests
objectes simulats funcionin tal com ho farien amb un objecte real.  Com es pot veure a la Figura
49 les dApps proporcionades al componentDAppLists ́onmocksdel DTOCompleteDAppDto.
Figura 50:  Mock de la classe CompleteDAppDto.
Font:  elaboraci ́o pr`opia.
110

Per a garantir que l’objecte simulat es comporti igual que l’objecte real, s’utilitzen les interf ́ıcies
per a garantir que la classe implementa tots els atributs i m`etodes. A la Figura 50 es troba l’exemple
de com s’implementa un objectemockde la classeCompleteDAppDtoMock.
12.1.3    Proves no automatitzades end-2-end
Ja aplicades t`ecniques de validaci ́o a nivell individual de codi, la seg ̈uent validaci ́o que s’ha d’aplicar
 ́es en l’`ambit de comunicaci ́o entre els components del sistema.  Per a poder demostrar que una
funcionalitat  entre  components  funciona  s’ha  fet  servir  eltesting  end-2-end,  que  correspon  a  la
validaci ́o de funcionalitats d’inici a fi en un entorn real(o pr`acticament real).
Aquests tipus de proves han estat aplicades per a provar els casos d’ ́us del sistema que necessiten
dos o m ́es components d’aquests.  Un exemple correspon a les proves de validaci ́o fetes sobre el cas
d’ ́usSignar transacci ́o.  Aquest cas d’ ́us involucra CKBull Signer API i CKBull Wallet i el cas d’ ́us
previVeure peticions de transacci ́o.  Com que les provesend-2-ends’han de realitzar a entorns de
proves gaireb ́e reals,s’ha utilitzat la xarxatestnetde lablockchainper a poder provar els casos
d’ ́us abans d’utilitzar la funcionalitat a la xarxamainnet.  Les seg ̈uents figures mostren pas a pas
la validaci ́o del cas d’ ́us fent servir tant l’API com l’aplicaci ́o m`obil.
111

(a) Pestanya de transaccions pendents(b) Detalls de transacci ́o
(c) Pantalla de signatura signant-se(d) Pantalla d’`exit de signatura
Figura 51:  Prova del cas d’ ́us Signar transacci ́o.
Font:  CKBull Wallet.
112

12.2    Validaci ́o de requisits
Un cop definides les t`ecniques de validaci ́o que s’han emprat per a la validaci ́o, el seg ̈uent pas es
validar  tots  els  requisits  que  s’han  definit  al  Cap ́ıtol  4,  tant  per  als  requisits  funcionals  i  els  no
funcionals.  Per a cada requisit, s’ha elaborat una taula on s’explica quin era el resultat esperat,
quin resultat s’ha obtingut i quines t`ecniques de validaci ́o s’han aplicat per a validar-lo.
12.2.1    Requisits funcionals
IdentificadorRF1
Casos d’ ́us involucrats
Enregistrar-se, iniciar sessi ́o, iniciar sessi ́o
amb Google, validar compte
Resultats
EsperatObtingut
Com a desenvolupador m’he de poder en-
registrar  al  sistema  amb  una  adre ̧ca  de
correu personal o amb un compte de Go-
ogle
Com a desenvolupador puc crear un comp-
te a CKBull Developer Console amb una
adre ̧ca de correu personal o amb un comp-
te de Google.
T`ecniques utilitzades
Tests unitaris
Components d’interf ́ıcies i l’AuthService i
UserService de l’API.
Mock objectsReplicaci ́o de DTOs i serveis
Provesend-2-end
Proc ́es d’enregistrament entre CKBull De-
veloper Console i CKBull Signer API
Taula 58:  Validaci ́o de RF1.
IdentificadorRF2
Casos d’ ́us involucrats
Veure  dApps,  crear  dApp,  editar  dApp,
generar claus API, eliminar dApp
Resultats
EsperatObtingut
Com a desenvolupador vull poder enregis-
trar la meva dApp al sistema, editar la se-
va informaci ́o, eliminar-la i veure les dapps
enregistrades
Un  desenvolupador  pot  crear  m ́ultiples
dApps, editar la seva informaci ́o, eliminar-
les  i  visualitzar-les,  generant  tamb ́e  les
claus API d’aquesta.
T`ecniques utilitzades
Tests unitaris
Components d’ ́ınterf ́ıcie i DAppService de
l’API.
Mock objectsReplicaci ́o de DTOs i serveis
Provesend-2-end
Creaci ́o,  edici ́o,  eliminaci ́o  i  visualitzaci ́o
de dApps mitjan ̧cant la interf ́ıcie CKBull
Developer Console en connexi ́o a l’API.
Taula 59:  Validaci ́o de RF2.
113

IdentificadorRF3
Casos d’ ́us involucrats
Enregistrar-se, iniciar sessi ́o, iniciar sessi ́o
amb Google, validar compte
Resultats
EsperatObtingut
Com  a  desenvolupador  no  identificat  no
puc realitzar cap acci ́o que involucri algu-
na dApp sobre CKBull Developer Console
Sense cap JWT proporcionat per l’API, no
es poden accedir a les urls que permeten
realitzar accions sobre dApps
T`ecniques utilitzades
Tests unitaris
Components d’ ́ınterf ́ıcie i DAppService de
l’API.
Mock objectsReplicaci ́o de DTOs i serveis
Provesend-2-end
C`arrega  de  rutes  de  CKBull  Developer
Console sense haver-me identificat com a
desenvolupador. No s’ha perm`es cap acc ́es
a recursos no autoritzats.
Taula 60:  Validaci ́o de RF3.
IdentificadorRF4
Casos d’ ́us involucrats
Generar claus API, regenerar clau secreta
API
Resultats
EsperatObtingut
Com a desenvolupador identificat, a l’hora
d’enregistrar una dApp es creen credenci-
als API per la dApp.
Al crear una dApp mitjan ̧cant CKBull De-
veloper Console es retornen unes creden-
cials  API  per  a  la  dApp.   A  m ́es,  es  pot
regenerar la clau secreta.
T`ecniques utilitzades
Tests unitaris
Components d’ ́ınterf ́ıcie i DAppService de
l’API.
Mock objectsReplicaci ́o de DTOs i serveis
Provesend-2-end
Mostrar les claus generades a l’API a CK-
Bull Developer Console.
Taula 61:  Validaci ́o de RF4.
114

IdentificadorRF5
Casos d’ ́us involucrats
Escanejar codi inici de sessi ́o, acceptar ini-
ci de sessi ́o, rebutjar inici de sessi ́o
Resultats
EsperatObtingut
Com a usuari de CKBull Wallet he de po-
der visualitzar, acceptar i rebutjar petici-
ons d’inici de sessi ́o d’una dApp enregis-
tada.
Amb CKBull Wallet, l’usuari pot escane-
jar la petici ́o d’inici de sessi ́o i, a continu-
aci ́o, acceptar-la o rebutjar-la.
T`ecniques utilitzades
Tests unitaris
Components d’ ́ınterf ́ıcie m`obil i SignInRe-
questService de l’API.
Mock objectsReplicaci ́o de DTOs i serveis
Provesend-2-end
Visualitzar,  acceptar  o  rebutjar  una  pe-
tici ́o  d’inici  de  sessi ́o  mitjan ̧cant  CKBull
Wallet en connexi ́o amb l’API.
Taula 62:  Validaci ́o de RF5.
IdentificadorRF6
Casos d’ ́us involucrats
Veure   peticions   de   transacci ́o,    signar
transacci ́o, rebutjar transacci ́o
Resultats
EsperatObtingut
Com a usuari de CKBull Wallet he de po-
der visualitzar, acceptar i rebutjar petici-
ons de transacci ́o pendents d’una dApp a
la que hagi iniciat sessi ́o pr`eviament.
Amb  CKBull  Wallet,  l’usuari  pot  visua-
litzar peticions pendents de transaccions,
signar la transacci ́o o rebutjar-la i visualit-
zar el proc ́es de signatura amb el resultat
final.
T`ecniques utilitzades
Tests unitaris
Components d’interf ́ıcie m`obil i Transac-
tionRequestService de l’API.
Mock objectsReplicaci ́o de DTOs i serveis
Provesend-2-end
Visualitzar, acceptar o rebutjar una peti-
ci ́o de transacci ́o mitjan ̧cant CKBull Wa-
llet en connexi ́o amb l’API i lablockchain.
Taula 63:  Validaci ́o de RF6.
115

IdentificadorRF7
Casos d’ ́us involucratsConsultar petici ́o de transacci ́o
Resultats
EsperatObtingut
Com a dApp enregistrada, vull poder con-
sultar  al  sistema  l’estat  d’una  petici ́o  de
transacci ́o creada per m ́ı.
Utilitzant  l’endpointde  CKBull  Signer
API i untransactionTokenes pot dema-
nar l’estat d’una petici ́o de transacci ́o.
T`ecniques utilitzades
Tests unitarisTransactionRequestService de l’API.
Mock objectsReplicaci ́o de DTOs i serveis
Taula 64:  Validaci ́o de RF7.
IdentificadorRF8
Casos d’ ́us involucratsConsultar petici ́o d’inici de sessi ́o
Resultats
EsperatObtingut
Com a dApp enregistrada, vull poder con-
sultar al sistema l’estat d’una petici ́o d’i-
nici de sessi ́o creada per m ́ı.
Utilitzant  l’endpointde  CKBull  Signer
API i untransactionTokenes pot dema-
nar l’estat d’una petici ́o d’inici de sessi ́o.
T`ecniques utilitzades
Tests unitarisSignInRequestService de l’API.
Mock objectsReplicaci ́o de DTOs i serveis
Taula 65:  Validaci ́o de RF8.
IdentificadorRF9
Resultats
EsperatObtingut
Com  hi  ha  desenvolupador  de  dApps  he
de disposar de documentaci ́o que permeti
integrar-me amb el sistema.
El desenvolupador disposa de documenta-
ci ́o  amb  la  p`agina  creada  ambGitbook,
on  s’especifica  com  utilitzar  la  interf ́ıcie
CKBull  Developer  Console  i  com  utilit-
zar  CKBull  Signer  API  amb  les  creden-
cials API.
Taula 66:  Validaci ́o de RF9.
12.2.2    Requisits no funcionals
Per finalitzar la validaci ́o, a continuaci ́o es descriu per a cada requisit no funcional quin  ́es el criteri
de validaci ́o i com s’ha resolt.
116

IdentificadorRNF1 - Aparen ̧ca
Criteri de validaci ́o
Les interf ́ıcies del sistema han de tindre una aparen ̧ca semblant amb altres productes de Nervos.
Resol·luci ́o
Els dissenys han estat creats amb les paletes de color proposades per Nervos.  Aix ́ı doncs, aquests
dissenys s’han maquetat amb l’exactitud m ́es gran possible, mostrant tots els colors acordats amb
el sistema.
Taula 67:  Validaci ́o de RNF1.
IdentificadorRNF2 - Usabilitat
Criteri de validaci ́o
El sistema ha d’evitar que l’usuari produeixi errors durant l’ ́us d’aquest.
Resol·luci ́o
Per a garantir aquest requisit s’ha de segmentar el concepte d’usuari i el desenvolupador de dApp, ja
que cadascun realitza diferents accions.  Respecte a l’usuari de CKBull Wallet, aquest t ́e limitades
les seves accions sobre el sistema pel fet que nom ́es pot fer signatures o rebutjaments de transaccions
mitjan ̧cant l’aplicaci ́o m`obil.  Altrament, el desenvolupador de dApps t ́e un major rang d’accions
que  pot  realitzar.   No  obstant  aix`o,  el  sistema  limita   ́unicament  les  accions  a  dur  a  terme  del
desenvolupador gr`acies a l’autenticaci ́o i ajuda a resoldre confusions mitjan ̧cant la documentaci ́o
generada.  A m ́es, els dos usuaris disposen d’una interf ́ıcie senzilla i guiada per a evitar confusions
d’accions.
Taula 68:  Validaci ́o de RNF2.
IdentificadorRNF3 - Internacionalitzaci ́o
Criteri de validaci ́o
El sistema ha de disposar de soport d’idioma d’angl`es i castell`a.
Resol·luci ́o
Durant el desenvolupament, s’han aplicat traduccions per als dos idiomes especificats a totes les
interf ́ıcies del sistema.  En el cas de la interf ́ıcie web CKBull Developer Console, l’idioma utilitzat
ser`a el que detecti del mateix navegador (per defecte angl`es). Altrament, la interf ́ıcie CKBull Wallet
disposa de diferents idiomes (inclosos angl`es i castell`a) que poden aplicar-se dins de l’aplicaci ́o.
Taula 69:  Validaci ́o de RNF3.
IdentificadorRNF4 - Fiabilitat i disponibilitat
Criteri de validaci ́o
El sistema ha de ser usable el 90% del temps que estigui actiu.
Resol·luci ́o
Ja que CKBull Wallet  ́es una aplicaci ́o nativa i es trobar`a disponible sempre que es trobi instalada a
un dispositiu, els components que s’han de posar a prova en aquest requisit s ́on CKBull Developer
Console i CKBull Signer API. Per a fer-ho s’han realitzat crides a la web i a unendpointde l’API
durant 24 hores en per ́ıodes d’1 minut.
Taula 70:  Validaci ́o de RNF4.
117

IdentificadorRNF5 - Acc ́es
Criteri de validaci ́o
El sistema nom ́es ha de permetre l’acc ́es a usuaris mitjan ̧cant credencials v`alides.
Resol·luci ́o
La resoluci ́o d’aquest requisit ha sigut especificada pr`eviament al Cap ́ıtol 11 on s’han especificat
quins m`etodes d’autenticaci ́o s’han aplicat al sistema.
Taula 71:  Validaci ́o de RNF5.
IdentificadorRNF6 - Privacitat
Criteri de validaci ́o
El sistema ha de complir els requisits necessaris detectats al RGPD.
Resoluci ́o
La  resoluci ́o  d’aquest  requisit  ha  sigut  especificada  pr`eviament  al  Cap ́ıtol  14  on  s’han  detectat
quines pr`actiques s’han d’implementar al projecte.
Taula 72:  Validaci ́o de RNF6.
12.3    Resum de validaci ́o
Per  finalitzar  el  cap ́ıtol,  a  continuaci ́o  es  fa  resum  de  totes  les  accions  de  validaci ́o  aplicades  al
projecte.   Respecte  a  CKBull  Developer  Console  s’han  realitzat  85  test  unitaris,  sobre  CKBull
Signer API s’han realitzat 78 tests unitaris per als serveis de l’API. En canvi,  a CKBull Wallet
existeixen 275 test unitaris, ja que ja existien test pr`eviament a l’inici del projecte, per`o s’han fet
tests unitaris per a cada component.
(a) Tests unitaris de CKBull Developer Console(b) CKBull Signer API
(c) Tests unitaris de CKBull Wallet
Figura 52:  Tests unitaris realitzats sobre els components del sistema.
Font:  elaboraci ́o pr`opia.
118

Cap ́ıtol 13
Desplegament i documentaci ́o
L’ ́ultima  fase  del  projecte  correspon  al  desplegament  dels  components  del  sistema  a  l’entorn  de
producci ́o.  A m ́es d’aquest procediment, s’ha generat una documentaci ́o addicional per als desen-
volupadors de dApps per a facilitar als desenvolupadors la integraci ́o de les seves dApps amb el
sistema.
13.1    Desplegament
La  primera  passa  de  la  fase  final   ́es  desplegar  a  l’entorn  de  producci ́o  tots  els  components  del
sistema.  No obstant aix`o, no tots els components s’han de desplegar amb el mateix procediment.
A continuaci ́o, es descriu com han sigut els dos procediments diferents de desplegament.
13.1.1    Desplegament de CKBull Developer Console i CKBull Signer API
Tant CKBull Developer Console com CKBull Signer API s ́on components que s’han d’allotjar a un
servidor per a poder accedir als recursos d’aquests mitjan ̧cant el protocol HTTP. Per aconseguir-ho,
s’ha fet un desplegament al servidor FS3, definit a la Secci ́o 6.2, on s’allotjaran tant CKBull Deve-
loper Console, CKBull Signer API i la base de dades utilitzada per emmagatzemar la informaci ́o
del sistema.
Com la resta de projecteswebi APIs HTTP desenvolupats a Peersyst, aquests projectes s’allotja-
ran dins d’unainst`ancia EC2de l’empresacloudAWS. Tot i ser dos components a desplegar, la
complexitat del desplegament es veu redu ̈ıda degut a l’ ́us de Docker durant el proc ́es de desenvolu-
pament i a l’entorn destaging.  D’aquesta manera, podem pr`acticament garantir que si el projecte
funciona a l’entorn destagingfuncionar`a al de producci ́o.
Aix ́ı  doncs,  les  passes  que  s’han  seguit  per  a  posar  en  producci ́o  els  dos  projectes  corresponen
als seg ̈uents:
1.  Clonar el repositori de codi al servidor FS3.
2.  Aplicar variables d’entorn de producci ́o (variables que s’hagin de protegir per no ser exposa-
des).
3.  Construir els contenidors de les imatges de CKBull Developer Console i CKBull Signer API.
119

13.1.2    Desplegament de CKBull Wallet
Respecte al desplegament d’aplicacions m`obils, aquest s’ha realitzat mitjan ̧cant les eines proporci-
onades d’Expo per a fer les construccions de les aplicacions i la publicaci ́o d’aquestes a l’App Store
(iOS) i Play Store (Android).
Per  als  projectes  d’aplicacions  m`obils,  hi  ha  configurat  el  desplegament  continuo  mitjan ̧cant  el
recurs Github Actions.  Quan la brancadevdel projecte famergeamb la branca principal (main),
Github Actions t ́e programat que faci un desplegament directe cap a Expo.  La Figura 53 mostra
un exemple de desplegament a producci ́o de l’aplicaci ́o per als dos sistemes operatius.
Figura 53:  Exemple desplegament gestionat desde Expo.
Font:  P`agina interna de Peersyst d’Expo.
13.2    Documentaci ́o
L’ ́ultima secci ́o del projecte consisteix en la documentaci ́o.  La producci ́o de CKBull Console De-
veloper, CKBull Signer API i CKBull Wallet no obtindr`a sentit si no s’adopta com a soluci ́o.  Per
aix`o, cal fer especial `emfasi en reduir la resist`encia tecnol`ogica perqu`e els desenvolupadors de dApps
puguin integrar el nou sistema amb les seves aplicacions.
Per  afavorir  aquest  proc ́es,  s’ha  generat  una  documentaci ́o  que  explica  pas  a  pas  com  integrar
el  nou  sistema  a  qualsevol  dApp.   Aquesta  documentaci ́o  s’ha  generat  amb  elsoftwareGitbook
[68],  una  plataforma  per  a  generar  documentaci ́o  en  format  web.   La  documentaci ́o  es  troba  en
angl`es pel fet que  ́es la llengua m ́es utilitzada arreu del m ́on.  A mode de resum, els punts que cont ́e
la documentaci ́o s ́on els seg ̈uents:
1.Getting started(o introducci ́o):  Secci ́o on es gu ́ıa al desenvolupador de dApps pas a pas
com crear un compte a CKBull Developer Console, com enregistrar la primera dApp i obtenir
i regenerar credencials API.
2.Guides and concepts(o gu ́ıes i conceptes):  Secci ́o on s’introdueix al desenvolupador sobre
els conceptes m ́es importants de la plataforma.  Entre aquests punts es troben conceptes com
lessign in request(petici ́o d’inici de sessi ́o) itransaction request(petici ́o de transacci ́o).
3.API: Documentaci ́o relacionada amb les crides que pot realitzar la dApp amb les credencials
generades amb CKBull Developer Console.  Entre elles s’inclou com implementar l’autentica-
ci ́o a les peticions HTTP o les cridespollingper a comprovar l’estat de les peticions.
120

La documentaci ́o es troba sota el nom deCKBull Signer APIi es troba disponible en aquesta
web.
121

Cap ́ıtol 14
Lleis i regulacions
14.1    Identificaci ́o de lleis
Segons elREGLAMENTO (UE) 2016/679 DEL PARLAMENTO EUROPEO Y DEL
CONSEJO de 27 de abril de 2016 relativo a la protecci ́on de las personas f ́ısicas en lo
que respecta al tratamiento de datos personales y a la libre circulaci ́on de estos datos
y por el que se deroga la Directiva 95/46/CE (Reglamento general de protecci ́on de
datos)la definici ́o delsdatos personaleses la seg ̈uent:
≪
datos  personales
≫
:   toda  informaci ́on  sobre  una  persona  f ́ısica  identificada  o  identificable  (
≪
el
interesado
≫
); se considerar ́a persona f ́ısica identificable toda persona cuya identidad pueda deter-
minarse, directa o indirectamente, en particular mediante un identificador, como por ejemplo un
nombre, un n ́umero de identificaci ́on, datos de localizaci ́on, un identificador en l ́ınea o uno o varios
elementos propios de la identidad f ́ısica, fisiol ́ogica, gen ́etica, ps ́ıquica, econ ́omica, cultural o social
de dicha persona;
Dins de la implementaci ́o de la nostra soluci ́o trobem diferents tipus de dades personals que po-
den  mantenir  una  similitud  amb  la  definici ́o  de  dades  personals.   Aquestes  dades   ́unicament  fan
refer`encia a les aportades pel desenvolupador de dApps, que s ́on:
•Adre ̧ca de correu electr`onic.
•Contrasenyes.
Per a poder garantir que aquesta informaci ́o personal  ́es gestionada de manera segura,  s’han
aplicat diferents tipus d’encriptaci ́o perqu`e, en cas de sostracci ́o de les dades, aquestes no puguin
ser accessibles.  Els tipus d’encriptaci ́o que s’ha aplicat varia segons l’estat de les dades.  Els estats
en el que es poden trobar les dades dins de la soluci ́o corresponen a l’estat de tr`ansit, on les da-
des s ́on enviades d’un servei a un altre, i l’estat de rep`os, on aquestes dades s ́on emmagatzemades.
Per  a  les  dades  en  estat  de  tr`ansit  s’aplica  laTransport  Layer  Security(TLS),  unproto-
col criptogr`aficsobre la capa de transport del model OSI, per agarantir l’autenticaci ́o i la
privacitat de la informaci ́o compartida entre extrems[69].  Aquest protocol  ́es utilitzat pel
protocol d’aplicaci ́o HTTPS, protocol sobre el qual funciona la CKBull Signer API i la comunicaci ́o
amb les interf ́ıcies del sistema, en espec ́ıfic la versi ́o 1.3.  Exemples de l’ ́us d’aquest protocol s ́on la
comunicaci ́o i transmissi ́o de dades entre el client web CKBull Developer Console i CKBull Signer
122

API.
Per  a  les  dades  en  estat  de  rep`os  s’ha  fet  servir  l’algoritme  criptogr`aficAdvanced  Encrypti-
on Standard(AES). Les dades que es troben en aquest estat s ́on les emmagatzemades a la base
de dades, on es troben tant la adre ̧ca de correu electr`onic com la contrasenya de l’usuari.
14.2    Llic`encies
Com s’ha pogut observar al Cap ́ıtol 11, el desenvolupament de la soluci ́o ha fet servir altres compo-
nentssoftware, com l’ ́us de llibrer ́ıes i eines.  Gaireb ́e tots els elements s ́on einesopen-source
1
que
permeten tant el seu  ́us, com el desenvolupament, sota diferents condicions.  Aquestes condicions
venen determinades per lallic`enciasobre la que es trobi elsoftware.
La  llic`encia  m ́es  freq ̈uent  entre  els  repositoris  i  eines  de  codi  obert  ́es  la  llic`enciaMIT[70],  una
llic`encia que permet l’ ́us, c`opia, modificaci ́o i distribuci ́o delsoftware, aix ́ı com la no garantia que
el programari funcioni com es descriu, fent absents de tota responsabilitat als autors.
No obstant aix`o, no tot el programari fet servir durant el desenvolupament ha sigutopen-source.
Com es van definir als recursos digitals emprats al projecte,certs programariscom ara l’entorn
de desenvolupament integrat IntelliJ es trobasobre la seva pr`opia llic`encia, com tamb ́e es troba
l’ecosistema Github, usat per a la planificaci ́o i per a l’ ́us d’integraci ́o cont ́ınua.
Per  finalitzar,  l’objectiu  d’aquest  projecte   ́es,  un  cop  sigui  estable,  que  passi  a  ser  un  software
open-source, fent aix ́ı que la comunitat de desenvolupadors de CKB puguin millorar i fer servir-ho
per a cr ́eixer de manera org`anica l’adopci ́o a lablockchainCKB.
1
Open-source:  Programari que pot ser estudiat, modificat i usat de manera lliure.
123

Cap ́ıtol 15
Resultats de desenvolupament
Ja  tancada  la  fase  de  desenvolupament,  ́es  moment  per  analitzar  i  extreure  conclusions  sobre  el
desenvolupament del projecte.  En aquest cap ́ıtol s’identificaran els esdeveniments que han succe ̈ıt
durant la construcci ́o del projecte, com s’ha respost davant d’aquest i quin impacte han suposat.
15.1    Desviacions sobre el pla inicial
El pla inicial consistia en la divisi ́o temporal del projecte en un nombre total de 6sprintsde dues
setmanes cadascun, conformant la seg ̈uent divisi ́o:
•Sprint 1:del 23 de gener al 3 de febrer.
•Sprint 2:del 6 de febrer al 17 de febrer.
•Sprint 3:del 20 de febrer al 3 de mar ̧c.
•Sprint 4:del 6 de mar ̧c al 17 de mar ̧c.
•Sprint 5:del 20 de mar ̧c al 31 de mar ̧c.
•Sprint 6:del 3 d’abril al 14 d’abril.
Aquesta planificaci ́o venia donada per les dates especificades al contracte amb Nervos, tot i que
s’han acabat estenen per diversos factors.  Aix ́ı doncs, el per ́ıode de desenvolupament iniciaria el dia
23 de gener i finalitzaria el 14 d’abril.  No obstant aix`o, a continuaci ́o es visualitzen les desviacions
patides, el seu tipus i en quinsprintvan succeir.
SprintDesviaci ́oTipus
Sprint 1No-
Sprint 2No-
Sprint 3No-
Sprint 4No-
Sprint 5S ́ıManca o error a la definici ́o de les tasques.
Sprint 6S ́ıNova tasca
Taula 73:  Desviacions persprints.
Font:  elaboraci ́o pr`opia.
124

Com es pot observar a la Taula 73, el ritme de desenvolupament durant els primerssprintsva
ser l’esperat, mentre que als dos  ́ultimssprintsvan succeir 2 esdeveniments que van provocar certa
desviaci ́o sobre la planificaci ́o.
El primer tipus de desviaci ́o que es va patir va ser classificada com a risc pr`eviament a la planificaci ́o
inicial com aManca o error a la definici ́o de les tasques, sent el risc amb m ́es probabilitats de
succeir durant el proc ́es de desenvolupament.  La causa d’aquesta desviaci ́o  ́es deguda al desconei-
xement de l’exist`encia pr`evia de conceptes a la tasca amb codiDCW6.3, corresponent aObtenir,
acceptar o declinar peticions de transaccions.  La planificaci ́o original no contemplava quins
tipus de transaccions serien suportades (a part de la transacci ́o base de tokens natius), arribant a la
tasca mencionada anteriorment amb certa incertesa sobre quins tipus de transaccions haur ́ıem de
suportar.  Per a mitigar l’error, es van detectar 4 tipus de transaccions que podrien ser suportades
dins del sistema:
•Tokens natius (CKB).
•NFTs.
•Tokens.
•Transaccions DAO.
de  les  quals  es  van  decidir  implementar  els  tres  primers  a  causa  dels  recursos  temporals  i
humans disponibles en el moment de la decisi ́o.  Aquesta implementaci ́o va suposar una desviaci ́o
temporal d’un 50% aproximadament sobre el temps de la tasca (un 20% menys de l’esperat segons
la planificaci ́o inicial), passant de 24 hores de dedicaci ́o a un total de 36.  Les conseq ̈u`encies finals no
nom ́es van comportar12 hores m ́es de desenvolupament, sin ́o el despla ̧cament de les tasques
posteriors a un sis`e i set`esprint(aquest  ́ultim d’una setmana), deixant la divisi ́o persprintsde la
seg ̈uent forma.
•Sprint 1:del 23 de gener al 3 de febrer.
•Sprint 2:del 6 de febrer al 17 de febrer.
•Sprint 3:del 20 de febrer al 3 de mar ̧c.
•Sprint 4:del 6 de mar ̧c al 17 de mar ̧c.
•Sprint 5:del 20 de mar ̧c al 31 de mar ̧c.
•Sprint 6:del 3 d’abril al 14 d’abril.
•Sprint 7:del 17 d’abril al 21 d’abril.
El segon tipus d’esdeveniment que va succeir no va ser cap risc, sin ́o la creaci ́o d’una nova tasca
a causa de una idea que va sorgir durant el desenvolupament.  Com s’ha descrit durant la mem`oria,
aquest projecte busca poder millorar l’experi`encia dels usuaris a l’hora d’interactuar amb les dApps
de CKB, en espec ́ıfic amb les transaccions entre els dos actors.  No obstant aix`o, tot havent produ ̈ıt
la plataforma amb totes les interf ́ıcies, l’API i la documentaci ́o, va sorgir la idea de crear unnou cas
d’ ́usper als desenvolupadors que permet ́esprovar el funcionament sencer de la dApp dins la
plataforma sense que aquesta hagu ́es d’implementar totes les crides.Amb aquesta idea
es va materialitzarplaygroundoentorn de provesque permet ́es al desenvolupador provar tots els
125

casos d’ ́us que impliquessin la seva dApp i ell mateix, sense la necessitat d’integrar la plataforma
a la seva dApp amb les credencials API.
Per aconseguir-ho, la nova tasca anomenadaDCDC6.1 Playgroundhauria de generar una vista
dins del client CKBull Developer Console on un desenvolupador, proporcionant les credencials API
generades a l’hora d’enregistrar una dApp, pogu ́es generar peticions d’inici de sessi ́o i peticions de
transacci ́o que poguessin ser signades amb CKBull Wallet.  El resultat d’aquesta tasca es mostra a
la seg ̈uent figura:
Figura 54:  Resultat de la tascaPlayground.
Font:  CKBull Developer Consoleplayground.
Amb la interf ́ıcie mostrada a la figura anterior, un desenvolupador pot testejar com funcionaria
la  seva  dApp.   Podriagenerar  peticions  d’inici  de  sessi ́o(mitjan ̧cant  el  formulari  a  la  part
superior esquerra) que es mostrarien en forma de QR per a despr ́es ser escanejades mitjan ̧cant la
cartera igenerar noves peticions de transacci ́o(part inferior esquerra).  A m ́es,  tamb ́e pot
consultar l’estat de les peticionsmitjan ̧cant les llistes amb desplegables de la part dreta de la
interf ́ıcie, on pot llistar tant peticions d’inici de sessi ́o com peticions de transacci ́o.  Les seg ̈uents
figures mostren les funcionalitats esmentades.
126

Figura 55:  Codi QR de petici ́o d’inici de sessi ́o.
Font:  CKBull Developer Consoleplayground.
Figura 56:  Formulari per crear una petici ́o de transacci ́o
Font:  CKBull Developer Consoleplayground.
127

(a) Detalls d’una SignInRequest(b) Detalls d’una TransactionRequest
Figura 57:  Elements de la llista d’events.
Font:  CKBull Developer Consoleplayground.
L’impacte temporal que va suposar la implementaci ́o d’aquesta tasca va ser d’untotal de 16
hores.  Aquestes 16 hores inclouen tant el desenvolupament com la validaci ́o de la nova funcionali-
tat, on es van aplicar les tres t`ecniques descrites a la Secci ́o 12.1.  En ser una tasca ”gran”, aquesta
va modificar per segon cop la planificaci ́o,  fent que el set`esprintaugment ́es la seva durada una
setmana m ́es (2 en total), deixant la planificaci ́o final amb la seg ̈uent forma:
•Sprint 1:del 23 de gener al 3 de febrer.
•Sprint 2:del 6 de febrer al 17 de febrer.
•Sprint 3:del 20 de febrer al 3 de mar ̧c.
•Sprint 4:del 6 de mar ̧c al 17 de mar ̧c.
•Sprint 5:del 20 de mar ̧c al 31 de mar ̧c.
•Sprint 6:del 3 d’abril al 14 d’abril.
•Sprint 7:del 17 d’abril al 28 d’abril.
A continuaci ́o es descriur`a en detall com aquestes desviacions temporals han afectat la partida
pressupost`aria inicial.
15.2    Afectacions sobre el pressupost
En haver-se produ ̈ıt aquesta demora temporal en el desenvolupament, s’han reflectit canvis sobre
el pressupost del projecte.
Com el primer esdeveniment descrit a l’apartat anterior va suposar una extensi ́o de 12 hores de
desenvolupament per part de l’autor del TFG, la tasca passa de tindre 26 hores de desenvolupament
a 38 hores, on 36 hores han sigut dedicades per part del DP (desenvolupador del projecte) i 2 hores
per part del PM (Project Manager).
128

No  obstant  aix`o,  al  pressupost  inicial  es  van  definir  212,76edins  dels  costos  associats  als  ris-
cos que corresponen a 20 hores de desenvolupament per part del DP per a la ”Manca o error a la
definici ́o”.  Per tant, el cost general del projecte no es veu modificat respecte al primer esdeveniment
pel fet que el temps dedicat sobre el risc patit a l’apartat anterior no ha superat les 12 hores de
desenvolupament.
Respecte  al  segon  esdeveniment,  la  realitzaci ́o  de  la  tascaDCDC6.1  Playgroundva  suposar
un total de 16 hores per part de l’autor del TFG, suposant una despesa de 283,68e.  Tot i que
a l’apartat de riscos no es va definir cap risc relacionat amb la creaci ́o de noves tasques, aquesta
despesa suposaria uncost extra.  No obstant aix`o, aquesta quantitat no s’ha d’afegir al pressupost
general inicial perqu`eno se superen els costos de conting`encia.Com aquests costos no s’han
utilitzat  per  al  seu  prop`osit,  la  despesa  d’aquesta  nova  tasca  queda  coberta  per  les  despeses  de
conting`encia no utilitzades.
129

Cap ́ıtol 16
Informe de sostenibilitat
Per finalitzar la mem`oria d’aquest Treball de Fi de Grau, aquest cap ́ıtol recull l’an`alisi i reflexions
relacionades amb la sostenibilitat del projecte en aquestes tres `arees:
•Sostenibilitat ambiental.
•Sostenibilitat econ`omica.
•Sostenibilitat social.
16.1    Sostenibilitat ambiental
Dintre d’aquest apartat s’analitzar`a la sostenibilitat ambiental del projecte en les tres dimensions
definides a l’apartat anterior.  Cal destacar que a causa de la falta de disponibilitat d’informaci ́o
alguns dels seg ̈uents c`alculs s ́on estimacions i no costos reals.  Els costos ambientals seran estimats
en kilowatts hora i la massa emitida deCO
2
.
16.1.1    Posada en producci ́o del projecte (PPP)
Per a quantificar quin cost comporta la posada en producci ́o del projecte cal tindre en compte quins
elements i factors s ́on rellevants que s ́on:
1.Recursos utilitzats en el desenvolupament:  Tots els recursos que poden produir una
empremta ecol`ogica utilitzada per al desenvolupament del projecte pr`eviament a la posada en
producci ́o d’aquest.  Entre aquests recursos es troben els especificats al Cap ́ıtol 6.  Recursos
com elsrecursos humans internsi recursos humans externs, recursos f ́ısics hardware i recursos
espacials presenten consums d’energia que s’han de tindre en compte.
2.Recursos  del  projecte  a  producci ́o:   Els  recursos  necessaris  per  al  funcionament  cor-
recte  del  projecte  que  comportin  una  empremta  mediambiental.   Dintre  d’aquests  recursos
 ́unicament  destacarem  el  servidor  FS3  especificat  a  la  Secci ́o  13.1  i  altres  recursos  externs
com lablockchainCKB sobre la que funciona el projecte.
Recursos utilitzats en el desenvolupament
Un cop definits quins elements formen part de l’empremta mediambiental del projecte  ́es moment de
calcular quin cost comporten.  Respecte als recursos f ́ısicshardwarecal esmentar que els dispositius
130

com el port`atil i els perif`erics (ratol ́ı i teclat) no realitzen un consum continuo sin ́o per c`arregues
de  bateria.   Per  a  implicar  els  c`alculs,  ja  que  no  s’ha  portat  un  seguiment  de  cada  c`arrega  per
dispositiu, s’ha estimat que el nombre de c`arregues per a un port`atil  ́es d’una c`arrega per cada 10
hores d’ ́us on el temps de c`arrega  ́es de 90 minuts, mentre que la c`arrega de la resta de perif`erics es
redueix a una c`arrega de 30 minuts per cada 25 hores a causa de un consum menor d’energia.  Aix ́ı
doncs, el resultat dels costos sobre els recursos hardware f ́ısics es calcula a partir de les seg ̈uents
f ́ormules.
Consum de carrega de portatil=
67W∗1.5hores∗530hores
10hores∗1000W h
= 5,3265kW h
Consum de carrega de perif erics=
67W∗0.5hores∗530hores
25hores∗1000W h
= 0,7102kW h
Per  a  calcular  quina  quantitat  deCO
2
comporten  els  kilowatts  consumits  per  les  c`arregues
utilitzarem com a refer`encia les dades oferides per la Generalitat de Catalunya a l’articleFactor
d’emissi ́o de l’energia el`ectrica:  el mix el`ectricon el consum deCO
2
per kilowatt hora l’any 2021
 ́es de 259 gCO
2
/kWh [71].
Aix ́ı doncs, el consum en kilograms deCO
2
de les c`arregues dels dispositius  ́es la seg ̈uent.
Consum CO
2
de perif erics= (5,3265 + 0,7102)kW h∗0,259kgCO
2
/kW h= 1,5635kgCO
2
Respecte al consum del servidor FS1 utilitzat per a la fase destagingel seu consum s’ha calculat
mitjan ̧cant un estimador de consum de m`aquines d’AWS. [72].  El resultat  ́es de 0,172kgCO
2
.  En
canvi,  per  al  servidor  d’emmagatzemament  d’imatges  FS2  s’ha  negligit  el  cost  a  causa  del  poc
consum que s’ha fet del servei on no s’ha pujat m ́es de 50 imatges durant el desenvolupament.
Consum servidor F S1 = 0,172kgCO
2
En total, el consum deCO
2
fet per els recursos f ́ısics hardware es 1,7355kgCO
2
.
Respecte al consum dels recursos humans interns i externs,  s’ha de tindre en compte princi-
palment el consum que realitzen els tipus de recursos.  En el cas dels recursos humans interns es
desconeix el consum en kWh que han sigut necessaris per a fer els dissenys de la UI del sistema.  Aix ́ı
que per a proporcionar una estimaci ́o, el consum es calcular`a de la mateixa manera que el c`alcul
dels recursos f ́ısics del projecte, tenint en compte  ́unicament el port`atil com a recurs principal.
Consum de recursos externs=
67W∗1.5hores∗20hores
10hores∗1000W h
= 0,201kW h
Consum en kgCO
2
de recursos externs= 0,201kW h∗0,259kgCO
2
/kwh= 0,052059kgCO
2
Respecte als recursos humans interns, s’han de tindre en compte els recursos espacials definits
a Cap ́ıtol 8 que s’han utilitzat.  En aquest cas es disposava del recurs IDT, un espai decoworking
per a simular el desenvolupament a una oficina.  No obstant aix`o, aquest cos es pot veure reflectit
al consum fet pels recursos f ́ısics com el port`atil i perif`erics, ja que les c`arregues s’han fet utilitzant
aquest recurs.  Aix ́ı i tot, altres factors com la llum de l’edifici s’han de tindre en compte.  Simulant
que la llum necess`aria per a una persona consta d’una bombeta LED [73], el consum en llum del
recurs IDT  ́es el seg ̈uent:
Consum del recurs IDT= 0,013kW h∗530hores= 6,89kW
131

Consum de CO
2
del recurs IDT= 6,89kW∗0,259kgCO
2
/kW h= 1,7845kgCO
2
Aix ́ı doncs, el consum deCO
2
resultant de l’ ́us dels recursos de desenvolupament del projecte
es calculat per la seg ̈uent f ́ormula.
Consum CO
2
recursos desenvolupament= 6,89kW∗0,259kgCO
2
/kW h= 1,7845kgCO
2
Recursos del projecte a producci ́o
Per finalitzar el c`alcul del PPP, cal afegir el cost que han comportat la infraestructura de producci ́o.
En aquest cas  ́unicament contemplarem el consum mitj`a del servidor on es troben allotjades tant
CKBull Developer Console com CKBull Signer API. El recurs FS3  ́es l’utilitzat per allotjar els dos
serveis, i tenint en compte que  ́es una inst`anciat3.larged’AWS el seuconsum per hora  ́es de
14,1  kWhprodu ̈ınt  6,3gCO
2
[74].   Aquest  valor  no  s’inclou  en  el  PPP  degut  a  que  el  consum
d’aquest recurs es produir`a durant la vida  ́util del projecte.
16.1.2    Vida  ́util
Per determinar la sostenibilitat ambiental del projecte durant la vida   ́util d’aquest cal tindre en
compte quins recursos formen part d’aquest.  El recurs principal del projecte i del qual dep`en  ́es
de lablockchainCKB.Nervosno ofereix cap informaci ́o sobre el consum mitj`a d’una transacci ́o
de la sevablockchain, aix ́ı que per estimar el cost mitj`a d’una transacci ́o s’ha comparat el consum
d’una  xarxablockchainamb  el  mateix  algoritme  de  consens  (Proof  of  Work)  com  per  exemple
Bitcoin.  No obstant aix`o, el volum de transaccions de Bitcoin  ́es major que el volum de CKB, amb
m ́es nodes minant les transaccions, fent que el cost d’una transacci ́o s’elevi de manera exagerada.
SegonsCambridge Bitcoin Electricity Consumption Index[75], el consum total de les transaccions
de l’any 2022 va ser de 102.51 TWh, amb un nombre de transaccions realitzades de 109,54 milions.
No obstant aix`o, per a poder simular un cost que pugui aproximar-se al real, el cost per transacci ́o
es multiplicar`a pel percentatge de transaccions totals de CKB [76] entre les transaccions totals de
Bitcoin durant el mateix any.  Aix ́ı doncs, el cost simulat d’una transacci ́o a CKB suposa:
Consumd
′
unatransaccio=
102,51T W h∗10
9
109,54∗10
6
transaccions
∗
8.164.025transaccions
109,54∗10
6
transaccions
= 69,7469kW h
Consum d
′
una transaccio CO
2
= 69,7469kW h∗0,259kgCO
2
/kW h= 18,0644kgCO
2
Com es pot observar, tot i seruna estimaci ́o i no una dada oficial, el cost d’una transacci ́o
 ́es molt elevat.  Aquest cost equivaldria a unviatge aproximat de 400 km de dist`ancia amb
un Tesla Model S 60[77].  No obstant aix`o, la construcci ́o de la nostra soluci ́o aconsegueix no
augmentar la de manera dr`astica l’empremta ecol`ogica.  Al no haver realitzat la soluci ́o de manera
directa sobre el protocol de CKB, aquesta s’executa  ́unicament sobre un dispositiu (inst`ancia del
servidor de producci ́o).
Suposant que la soluci ́o proposada pot gestionar 40.000 transaccions per hora (unes 11 transaccions
132

per segon), i que el consum de la inst`ancia de producci ́o equival a 6,3gCO
2
el consum de gestionar
una petici ́o de transacci ́o amb la soluci ́o  ́es el seg ̈uent:
Consum de signatura transaccio=
6,3gCO2
40.000transaccions
= 0,0001575gCO2
Si comparem el cost en massa deCO
2
emitida pel nostre projecte en comparaci ́o amb el cost
d’una transacci ́o de CKB podem observar que el cost d’utilitzar la nostra soluci ́o  ́es pr`acticament
 ́ınfim.  Perqu`e CKBull Signer App arrib ́es a consumir tant com una transacci ́o de CKB, caldrien fer
aproximadament 11,42 milions de transaccions, havent-se dut a terme unes 8 milions l’any 2022.
T ransaccions=
18,0644kgCO2∗10
3
0,0001575gCO2
= 11.428.571,42transaccions
16.1.3    Riscos
Un dels factors que eviten que el projecte augmenti la seva empremta ecol`ogica  ́es la capacitat de
mantenir un consum baix respecte a les transaccions realitzades a lablockchainCKB. Com s’ha
especificat a l’apartat anterior,  caldrien fer moltes transaccions mitjan ̧cant la plataforma perqu`e
aquesta arrib ́es a consumir tant com ho faria una transacci ́o.
No obstant aix`o, si la plataforma aconsegueix el seu objectiu, que  ́es augmentar l’adopci ́o de CKB,
pot generar que augmentin el nombre de transaccions, fent aix ́ı que es consumeixin m ́es recursos
i  que  les  emissions  augmentin.   Per`o  aquest  factor  dep`en  de  com  actu ̈ın  els  usuaris.   Tot  i  aix`o,
perqu`e es generi aquesta adopci ́o ha de passar cert temps fins que la plataforma es trobi estable i
s’hagin desenvolupat dApps dins de l’ecosistema.
16.2    Sostenibilitat econ ́omica
El seg ̈uent domini d’an`alisi dins d’aquest informe de sostenibilitat correspon a l’economia relacio-
nada amb el projecte.
16.2.1    Posada en producci ́o del projecte (PPP)
Ja que l’estimaci ́o pressupost`aria es va dur a terme de manera detallada i que s’han produ ̈ıt desvia-
cions durant el desenvolupament, no s’ha pogut actuar per a poder reduir els costos del projecte de
manera significativa.  No obstant aix`o, amb aquest pressupost s’ha intentatminimitzar reduint
la quantitat de recursos al m ́ınim possible.  Un exemple d’aquesta optimitzaci ́o econ`omica ha
estat utilitzar simuladors de dispositius m`obils en comptes de dispositius m`obils f ́ısics, donat que
aquests podrien comportar una despesa que pot ser evitada.  A m ́es, gran part dels recursos digitals
fets servir al desenvolupament s ́onopen-sourceo s’ha fet servir amb la subscripci ́o m ́es econ`omica.
Tot  i  haver  superat  algun  cost  de  conting`encia  la  desviaci ́o  final  del  projecte  no  ha  sigut  relle-
vant i no ha suposat cap risc real sobre la soluci ́o.
16.2.2    Vida  ́util
Un cop finalitzat el projecte i assumits els costos de desenvolupament,  ́es moment de reflexionar
sobre el cost que pot comportar aquest durant la seva vida  ́util.  Com s’ha descrit anteriorment, la
soluci ́o es troba sobre una inst`ancia EC2 dins d’AWS. Aquesta inst`ancia comporta un cost mensual
133

aproximat de 120e.  Aix ́ı doncs,  el cost estimat del projecte durant la vida   ́util  ́es de 120eal
mes.  No obstant aix`o, aquesta quantitat pot variar segons la demanda del servei per part dels nous
usuaris.  En cas que amb la inst`ancia actual es produeixi un coll d’ampolla, s’hauria d’estudiar quin
factor provoca aquest esdeveniment i, en cas que sigui falta de recursos, s’haur`a de seleccionar una
nova inst`ancia amb m ́es prestacions per a poder satisfer la demanda del sistema.
16.3    Sostenibilitat social
Per finalitzar l’informe, aquesta secci ́o fa refer`encia a l’impacte en l’`ambit personal i social que ha
comportat el desenvolupament del projecte.
16.3.1    Posada en producci ́o del projecte
Personalment considero que he tingut sort d’haver pogut formar part d’un projecte dins d’un domini
tecnol`ogic molt especial, que  ́es lablockchain.  A l’inici del projecte, encara que havia sentit parlar
de la tecnologia, gaireb ́e no coneixia pr`acticament res sobre la tecnologiablockchaini, de fet, tenia
la sensaci ́o que no tenia l’experi`encia o coneixements necessaris per embarcar-me dins d’aquest m ́on.
No obstant aix`o, gr`acies als est`andards de desenvolupament de Peersyst i la informaci ́o disponible
que ofereix Nervos, he pogut adonar-me que  ́es possible aprendre, entendre i desenvolupar, amb el
temps suficient, els recursos adecuats i una gran quantitat d’esfor ̧c, un projecte com aquest.
Gr`acies a aquest projecte, he pogut avan ̧car un pas m ́es, dels molts que queden, com a enginyer,
sent capa ̧c d’enfrontar-me a problemes complexos i oferir solucions que s’adaptin al m ́on real.
16.3.2    Vida  ́util
Un dels objectius del projecte  ́es poder oferir als usuaris de CKB una millor experi`encia d’usuari
que puguiaugmentar l’adopci ́o de la tecnologia.  La tecnologiablockchaincomporta una gran
llista de beneficis (incloent-hi tamb ́e inconvenients) com la descentralitzaci ́o del capital, l’automa-
titzaci ́o de transaccions i l’eliminaci ́o d’intermediaris.  Per`ouna tecnologia sense adopci ́o no  ́es
 ́util.  D’aquesta manera, la plataforma fomenta la capacitat de crear unaexperi`encia d’usuari
m ́es satisfact`oria tant pels desenvolupadors de dApps com els usuaris regulars de la
blockchain.
No  obstant  aix`o,  altres  projectes  de  lablockchainCKB,  com  els  esmentats  a  la  Secci ́o  3.1,
poden  arribar  a  veure’s  afectats  per  una  possible  p`erdua  d’usuaris  que  vulguin  utilitzar  dApps
enregistrades a la plataforma.
16.3.3    Riscos
Ja  que  la  plataforma  ́es  un  projecte  que  s’ha  produ ̈ıt  sobre  lablockchainCKB  i  que,  per  tant,
actua com un valor afegit sobre aquesta, no existeixen grans riscos que puguin afectar els usuaris
de lablockchain.  Els afectats serien els usuaris que usessin la cartera de CKBull Wallet i, en cas
de desmantellament de la funcionalitat, nom ́es es veurien afectats a escala de la funcionalitat de
signatura amb l’API, sent capa ̧cos d’utilitzar totes les funcionalitats pr`evies com rebre, enviar, etc.
No  obstant  aix`o,  els  desenvolupadors  de  dApps  serien  el  sector  m ́es  afectat,  degut  a  queno
existiria cap altre soluci ́o amb un comportament semblant dins de l’ecosistema CKB. Encara que
aquest  projecte  es  trobi  a  la  primera  versi ́o  i  requereixi  l’adopci ́o  per  a  generar  aquest  risc,  cal
tindre’l  en  compte  per  al  desenvolupament  de  futures  funcionalitats  i  la  seguretat  associades  a
aquestes.
134

Cap ́ıtol 17
Conclusions
Per  finalitzar  aquesta  mem`oria  del  projecte  del  Treball  de  Fi  de  Grau,  he  dedicat  aquest   ́ultim
apartat  per  a  compartir  les  conclusions  i  reflexions  que  he  obtingut  durant  el  desenvolupament
d’aquest projecte.
Respecte  al  projecte  i  la  mem`oria,  considero  que  una  soluci ́o  com   ́es  CKBull  Signer  App  est`a
preparada per a poder ser utilitzada de manera introduct`oria en un entorn de producci ́o.  Aquest
projecte pot ajudar a molta gent que vulgui poder expandir m ́es enll`a l’adopci ́o d’una tecnologia
que podria ajudar molt a la societat, tal com  ́es lablockchain.  Tamb ́e  ́es cert que, tot i ser una
tecnologia  prometedora  i  amb  molts  avantatges,  disposa  que  certs  inconvenients  com  la  falta  de
sostenibilitat en l’`ambit ambiental.  No obstant aix`o, una soluci ́o com la que proposa aquest pro-
jecte  ́es capa ̧c de poder evitar aquest nivell baix de sostenibilitat i fer que una nova funcionalitat
dins CKB sigui sostenible.  A m ́es, la feina no finalitza amb l’entrega d’aquesta mem`oria ni amb el
llan ̧cament a producci ́o del projecte.
 ́
Es pr`acticament impossible evitar que sorgeixin nous incon-
venients, com ha succe ̈ıt durant el desenvolupament, encara que s’hagi volgut minimitzar la seva
aparici ́o.  Per`o la clau resideix en la cerca de la millora constant, tant a nivell de qualitat del pro-
jecte actual per a minimitzar l’impacte com les possibles funcionalitats que es puguin afegir al futur.
En l’`ambit personal, aquest projecte m’ha ajudat a introduir-me al m ́on laboral.  No  ́unicament a
nivell t`ecnic, on he sigut conscient de tot l’aprenentatge que he experimentat durant el proc ́es de
desenvolupament,  sin ́o a guanyar consci`encia que qualsevol concepte,  amb el temps i esfor ̧c,  pot
aprendre’s.  Si fa un any hagu ́es sabut que faria un projecte com el Treball de Fi de Grau sobre la
tecnologiablockchain, no m’ho hauria cregut.  I, tot i haver sigut un projecte amb una c`arrega de
treball considerable i moments dif ́ıcils, he pogut gaudir tant del desenvolupament com del resultat
del projecte.
135

Refer`encies
[1]    Peersyst.Peersyst.url:https://peersyst.com/(cons. 28-02-2023).
[2]    Nervos.Nervos.url:https://www.nervos.org/(cons. 28-02-2023).
[3]    Wikipedia.Cadena de bloques.url:https://es.wikipedia.org/wiki/Cadena_de_bloques
(cons. 28-02-2023).
[4]    IBM.¿Tecnolog ́ıa  Blockchain?url:https://www.ibm.com/es- es/topics/what- is-
blockchain(cons. 28-02-2023).
[5]    Nervos Docs.Nervos Blockchain.url:https://docs.nervos.org/docs/basics/concepts/
nervos-blockchain(cons. 28-02-2023).
[6]    Greg  Maxwell  Pieter  Wuille.BIP173.url:https://github.com/bitcoin/bips/blob/
master/bip-0173.mediawiki(cons. 30-05-2023).
[7]    Pieter  Wuille.BIP350.url:https://github.com/bitcoin/bips/blob/master/bip-
0350.mediawiki(cons. 30-05-2023).
[8]    Wikipedia.Criptomoneda.url:https://es.wikipedia.org/wiki/Criptomoneda(cons.
28-02-2023).
[9]    Ethereum.Introducci ́on  a  las  dapps.url:https://ethereum.org/es/developers/docs/
dapps/(cons. 28-02-2023).
[10]    Wikipedia.Cartera  de  criptodivisa.url:https://es.wikipedia.org/wiki/Cartera_de_
criptodivisa(cons. 28-02-2023).
[11]    Wikipedia.Unspent transaction output.url:https://en.wikipedia.org/wiki/Unspent_
transaction_output(cons. 30-05-2023).
[12]    Nervos.Repositori  de  codi  Neuron.url:https://github.com/nervosnetwork/neuron/
releases(cons. 14-03-2023).
[13]    imToken.imToken — Ethereum  Bitcoin Wallet.url:https://token.im/(cons. 14-03-2023).
[14]    SafePal.SafePal Crypto Hardware Wallet (Official) — The best wallet to protect your assets.
url:https://www.safepal.com/en/(cons. 14-03-2023).
[15]    JoyID.JoyID - Universal Account Protocol for Web3 Mass-adoption.url:https://joy.id/
(cons. 14-03-2023).
[16]What  is  software  testing?url:https://www.ibm.com/topics/software-testing(cons.
20-03-2023).
[17]    James Robertson & Suzanne Robertson.Volere Requirements Especification Template.url:
https://www.cs.uic.edu/
~
i440/VolereMaterials/templateArchive16/c%5C%20Volere%
5C%20template16.pdf(cons. 28-02-2023).
136

[18]    scrum.org.What  is  Scrum?url:https://www.scrum.org/resources/what-is-scrum
(cons. 28-02-2023).
[19]    Slack.Slack.url:https://slack.com/intl/es-es(cons. 28-02-2023).
[20]    Github.Github.url:https://github.com/(cons. 28-02-2023).
[21]    Github.About  Projects.url:https://docs.github.com/en/issues/planning- and-
tracking-with-projects/learning-about-projects/about-projects(cons. 28-02-2023).
[22]    RedHat.What  is  CI/CD?url:https://www.redhat.com/en/topics/devops/what-is-
ci-cd(cons. 28-02-2023).
[23]Features·Github Actions.url:https://github.com/features/actions(cons. 20-03-2023).
[24]    Wikipedia.Interfaz  de  usuario.url:https://es.wikipedia.org/wiki/Interfaz_de_
usuario(cons. 06-03-2023).
[25]    Wikipedia.API.url:https://es.wikipedia.org/wiki/API(cons. 06-03-2023).
[26]Urano P ́agina Principal.url:https://www.urano.studio/(cons. 12-03-2023).
[27]MacBook Pro de 14 pulgadas - Gris espacial - Apple (ES).url:https://www.apple.com/
es/shop/buy-mac/macbook-pro/14-pulgadas-gris-espacial-chip-m2-pro-de-apple-
con-cpu-de-10-n%5C%C3%5C%BAcleos-y-gpu-de-16-n%5C%C3%5C%BAcleos-512gb(cons.
12-03-2023).
[28]Magic Keyboard - Espa ̃nol - Apple (ES).url:https://www.apple.com/es/shop/product/
MK2A3Y/A/magic-keyboard-espa%5C%C3%5C%B1ol(cons. 12-03-2023).
[29]Logitech MX Master 3 Rat ́on Inal ́ambrico Avanzado 4000DPI Grafito — PcComponentes.com.
url:https://www.pccomponentes.com/logitech-mx-master-3-raton-inalambrico-
avanzado-4000dpi-grafito(cons. 12-03-2023).
[30]Comprar IntelliJ IDEA Ultimate: Precios y licencias, Descuentos - Suscripci ́on a JetBrains
Toolbox.url:https://www.jetbrains.com/es-es/idea/buy/?section=commercial&
billing=monthly(cons. 12-03-2023).
[31]Pricing·Plans for every developer.url:https://github.com/pricing(cons. 12-03-2023).
[32]Salario en Espa ̃na 2023.url:https://es.talent.com/salary(cons. 12-03-2023).
[33]    AWS.My Estimante - FS1.url:https://calculator.aws/#/estimate(cons. 14-03-2023).
[34]CREC  Gr`acia  —  Coworking  en  Barcelona.url:https://coworkingspain.es/espacios/
coworking/barcelona/crec-gracia(cons. 12-03-2023).
[35]    Ian Yang.CKB  Transaction  Structure.url:https://github.com/nervosnetwork/rfcs/
blob/master/rfcs/0022-transaction-structure/0022-transaction-structure.md
(cons. 30-05-2023).
[36]    Wikipedia.SOLID.url:https://es.wikipedia.org/wiki/SOLID(cons. 14-05-2023).
[37]    Refactoring Guru.Singleton.url:https://refactoring.guru/design-patterns/singleton
(cons. 30-05-2023).
[38]    Snesh Prajapati.Factory Patterns - Simple Factory Pattern.url:https://www.codeproject.
com/Articles/1131770/Factory-Patterns-Simple-Factory-Pattern(cons. 30-05-2023).
[39]    NodeJS.NodeJS.url:https://nodejs.org/en(cons. 30-05-2023).
[40]    MDN  web  docs.Javascript.url:https : / / developer . mozilla . org / es / docs / Web /
JavaScript(cons. 30-05-2023).
137

[41]    Typescript.Typescript.url:https://www.typescriptlang.org/(cons. 30-05-2023).
[42]    Yarn.Yarn.url:https://yarnpkg.com/(cons. 30-05-2023).
[43]    Wikipedia.Docker(software).url:https://es.wikipedia.org/wiki/Docker_(software)
(cons. 14-05-2023).
[44]    React.React.url:https://react.dev/(cons. 30-05-2023).
[45]    Peersyst.React Components docs.url:https://peersyst.github.io/react-components-
docs/(cons. 30-05-2023).
[46]    React Router.React Router.url:https://reactrouter.com/en/main(cons. 30-05-2023).
[47]    React Query.React Query.url:https://tanstack.com/query/v3/(cons. 30-05-2023).
[48]    styled  components.styled  components.url:https : / / styled - components . com/(cons.
30-05-2023).
[49]    Zustand  docs.Introduction.url:https://docs.pmnd.rs/zustand/getting-started/
introduction(cons. 30-05-2023).
[50]    i18next  documentation.i18next  documentation.url:https://www.i18next.com/(cons.
30-05-2023).
[51]    NestJS.NestJS.url:https://nestjs.com/(cons. 30-05-2023).
[52]    TypeORM.TypeORM docs.url:https://typeorm.io/(cons. 30-05-2023).
[53]    typestack.class-validator repository.url:https://github.com/typestack/class-validator
(cons. 30-05-2023).
[54]    PassportJS.PassportJS.url:https://www.passportjs.org/(cons. 30-05-2023).
[55]    Nat  Sakimura  Michael  B.  Jones  John  Bradley.RFC  7519.url:https://datatracker.
ietf.org/doc/html/rfc7519(cons. 30-05-2023).
[56]    Wikipedia.HMAC.url:https://es.wikipedia.org/wiki/HMAC(cons. 30-05-2023).
[57]    React Native.React Native. Learn once, write anywhere.url:https://reactnative.dev/
(cons. 30-05-2023).
[58]    Expo.Expo.url:https://expo.dev/(cons. 30-05-2023).
[59]    React Navigation.React Navigation.url:https://reactnavigation.org/(cons. 30-05-2023).
[60]    Recoil.Recoil.url:https://recoiljs.org/(cons. 30-05-2023).
[61]    ckb-js.Lumos  -  A  full  featured  dapp  framework  for  Nervos  CKB  -  GitHub.url:https:
//github.com/ckb-js/lumos(cons. 30-05-2023).
[62]    Wikipedia.Data Transfer Object.url:https://en.wikipedia.org/wiki/Data_transfer_
object(cons. 30-05-2023).
[63]    Wikipedia.Dependency  Injection.url:https://en.wikipedia.org/wiki/Dependency_
injection(cons. 30-05-2023).
[64]    Microsoft.Design  the  infrastructure  persistence  layer.url:https://learn.microsoft.
com/en-us/dotnet/architecture/microservices/microservice-ddd-cqrs-patterns/
infrastructure-persistence-layer-design(cons. 30-05-2023).
[65]    Wikipedia.Data  mapper  pattern.url:https://en.wikipedia.org/wiki/Data_mapper_
pattern(cons. 30-05-2023).
138

[66]    Wikipedia.Unit  testing.url:https://en.wikipedia.org/wiki/Unit_testing(cons.
30-05-2023).
[67]    Wikipedia.Mocko  bject.url:https://en.wikipedia.org/wiki/Mock_object(cons.
30-05-2023).
[68]    GitBook.GitBook  -  Where  technical  teams  document.url:https://www.gitbook.com/
(cons. 30-05-2023).
[69]    Wikipedia.Seguridad  de  la  capa  de  transporte.url:https://es.wikipedia.org/wiki/
Seguridad_de_la_capa_de_transporte(cons. 14-03-2023).
[70]    Wikipedia.Llic`encia  X11.url:https://ca.wikipedia.org/wiki/Llic%5C%C3%5C%
A8ncia_X11(cons. 14-03-2023).
[71]    Generalitat  de  Catalunya.Factor  d’emissi ́o  de  l’energia  el`ectrica:  el  mix  el`ectric.  Canvi
clim`atic.url:https://canviclimatic.gencat.cat/es/actua/factors_demissio_
associats_a_lenergia/(cons. 30-05-2023).
[72]    Teads.Carbon  footprint  estimator  for  AWS  instances.url:https://engineering.teads.
com/sustainability/carbon-footprint-estimator-for-aws-instances/?estimation=
true & instance _ id = 2615 & region _ id = 2248 & compute _ hours = 30 # calculator(cons.
06-02-2023).
[73]    Amazon.OGADA 13W Bombillas LED.url:https://www.amazon.es/OGADA-Bombillas-
casquillo-Reemplazar-Incandescente/dp/B0B5HJB41R/ref=sr_1_5?keywords=bombillas+
led&qid=1686593820&sr=8-5(cons. 06-02-2023).
[74]    Teads.Carbon  footprint  estimator  for  AWS  instances.url:https://engineering.teads.
com/sustainability/carbon-footprint-estimator-for-aws-instances/?estimation=
true & instance _ id = 2623 & region _ id = 2248 & compute _ hours = 1 # calculator(cons.
06-02-2023).
[75]    University of Cambridge.Cambridge Bitcoin Electricity Consumption Index (CBECI).url:
https://ccaf.io/cbnsi/cbeci(cons. 06-02-2023).
[76]    Nervos.CKB Explorer.url:https://explorer.nervos.org/charts/transaction-count
(cons. 06-02-2023).
[77]    Tesla.European  Union  energy  label.url:https://www.tesla.com/en_eu/support/
european-union-energy-label(cons. 06-02-2023).
139

Ap`endix A
Especificaci ́o
A.1    Diagrama de casos d’ ́us
140

Figura 58:  Diagrama de casos d’ ́us.
Font:  elaboraci ́o pr`opia.
141

Ap`endix B
Disseny
B.1    Rutes de CKBull Signer API
B.1.1    Rutes per peticions d’inici de sessi ́o (sign-in-requests)
Descripci ́o
Obtindre peticions d’inici de sessi ́o segons els atributs
status,networkiaddress.
Ruta/api/sign-in-requests
M`etodeGET
Par`ametres
status:  SignInRequestStatus,
network:  Network,
address:  string
Resposta
200:  [{
id:  0,
name:  string,
description:  string,
email:  string,
projectUrl:  string,
supportUrl:  string,
apiKey:  string,
termsUrl:  string,
privacyPolicyUrl:  string,
image:  string,
createdAt:date,
updatedAt:date
}]
Taula 74:  Petici ́o per obtindre peticions d’inici de sessi ́o.
142

Descripci ́o
Crear petici ́o d’inici de sessi ́o com a dApp mitjan ̧cant
autenticaci ́o API.
Ruta/api/sign-in-requests
M`etodePOST
Capceleres
x-timestamp:  number,
x-signature:  string,
x-api-key:  string
Resposta
200:{
id:  0,
signInToken:  string,
status:  pending,
createdAt:  date,
expiresAt:  date,
sessionExpiresAt:  date,
metadata:{address:  string, network:  mainnet},
dapp:  DAppDto
}
403:  Not authorized,
Taula 75:  Petici ́o per crear una petici ́o d’inici de sessi ́o.
Descripci ́o
Obtindre   peticions   d’inici   de   sessi ́o   mitjan ̧cant
l’apiKeyde la dApp.
Ruta/api/sign-in-requests/dapp/{apiKey}
M`etodeGET
Par`ametresapiKey:  string
Resposta
200:  [{
id:  0,
signInToken:  string,
status:  pending,
createdAt:  date,
expiresAt:  date,
sessionExpiresAt:  date,
metadata:{address:  string, network:  mainnet},
dapp:  DAppDto
}]
Taula 76:  Petici ́o per obtindre les peticions d’inici de sessi ́o creades per una dApp.
143

Descripci ́o
Obtindre petici ́o d’inici de sessi ́o mitjan ̧cant elsignIn-
Token.
Ruta/api/sign-in-requests/{token}
M`etodeGET
Par`ametrestoken:  string
Resposta
200:{
id:  0,
signInToken:  string,
status:  pending,
createdAt:  date,
expiresAt:  date,
sessionExpiresAt:  date,
metadata:{address:  string, network:  mainnet},
dapp:  DAppDto
}
404:  Not Found
Taula 77:  Petici ́o per obtenir informaci ́o d’una petici ́o d’inici de sessi ́o.
Descripci ́o
Endpointpensat per ferpollingde l’estat de la petici ́o
d’inici de sessi ́o.
Ruta/api/sign-in-requests/{token}/status
M`etodeGET
Par`ametrestoken:  string
Resposta
200:{
signInToken:  string,
status:  pending,
}
404:  Not Found
Taula 78:  Petici ́o per ferpollingd’una petici ́o d’inici de sessi ́o.
144

Descripci ́o
Endpointper acceptar una petici ́o per part d’un usuari
de CKBull Wallet.
Ruta/api/sign-in-requests/{token}/sign
M`etodePOST
Par`ametrestoken:  string
Cos
{
metadata:{address:  string, network:  Network},
}
Resposta
200:{
id:  0,
signInToken:  string,
status:  pending,
createdAt:  date,
expiresAt:  date,
sessionExpiresAt:  date,
metadata:{address:  string, network:  mainnet},
dapp:  DAppDto
}
400:  Bad request
404:  Not Found
Taula 79:  Petici ́o d’acceptaci ́o d’una petici ́o d’inici de sessi ́o.
Descripci ́o
Endpointper declinar una petici ́o per part d’un usuari
de CKBull Wallet.
Ruta/api/sign-in-requests/{token}/decline
M`etodePOST
Par`ametrestoken:  string
Resposta
200:{
id:  0,
signInToken:  string,
status:  pending,
createdAt:  date,
expiresAt:  date,
sessionExpiresAt:  date,
metadata:{address:  string, network:  mainnet},
dapp:  DAppDto
}
404:  Not Found
Taula 80:  Petici ́o de declinaci ́o d’una petici ́o de d’inici de sessi ́o.
145

Descripci ́o
Endpointper desconectar i invalidar les peticions d’i-
nici de sessi ́o siggnades per part d’un usuari de CKBull
Wallet.
Ruta/api/sign-in-requests/{token}/disconnect
M`etodePOST
Par`ametrestoken:  string
Resposta
200:  void
404:  Not Found
Taula 81:  Petici ́o de desconnexi ́o de dApps.
B.1.2    Rutes per peticions d’autenticaci ́o
Descripci ́o
Endpointper a iniciar sessi ́o com a desenvolupador de
dApps a CKBull Developer Console.
Ruta/api/auth/login
M`etodePOST
Cos{email:  string, password:  string}
Resposta
200:{accesstoken:  string}
400:  Bad Request (invalidcredentials)
Taula 82:  Petici ́o per iniciar sessi ́o com desenvolupador.
Descripci ́o
Endpointque redirigeix cap a l’inici de sessi ́o de Goo-
gle.
Ruta/api/auth/google
M`etodeGET
Resposta
200:  void
Taula 83:  Petici ́o per iniciar sessi ́o amb Google com desenvolupador.
Descripci ́o
Endpointper redirigir al client despr ́es d’haver iniciat
sessi ́o amb Google.
Ruta/api/auth/google/callback
M`etodeGET
Resposta
200:  void
Taula 84:  Petici ́o per redirigir despr ́es d’iniciar sessi ́o
146

Descripci ́o
Endpointper validar untokenpr`eviament envia’t per
correu electr`onic al desenvolupador.
Ruta/api/auth/verify-email
M`etodePOST
Cos{token:  string}
Resposta
200:{accesstoken:  string}
404:  Not found (tokennotfound)
409:  Conflict (tokenalreadyused)
Taula 85:  Petici ́o per validar direcci ́o de correu com desenvolupador.
Descripci ́o
Endpointper generar untokenper restablir la contra-
senya del desenvolupador.
Ruta/api/auth/recover-password
M`etodePOST
Cos{email:  string}
Resposta
200:  void
404:  Not found (user
notfound)
Taula 86:  Petici ́o per recuperar la contrasenya com desenvolupador.
Descripci ́o
Endpointper restablir la contrasenya d’un desenvolu-
pador amb eltokenenviat per correu electr`onic.
Ruta/api/auth/reset-password
M`etodePOST
Cos{password:  string, token:  string}
Resposta
200:  void
404:  Not found (tokennotfound)
409:  Not found (token
expired)
Taula 87:  Petici ́o per a restablir la contrasenya com desenvolupador.
147

B.1.3    Rutes per peticions d’usuari
Descripci ́o
Endpointper  obtindre  informaci ́o  de  l’usuari  que
sol·licita la informaci ́o.
Ruta/api/user
M`etodeGET
Autenticaci ́oBearer
Resposta
200:{
id:  0,
name:  string,
email:  string,
type:  string,
googleAuth:  true
}
401:  Unauthorized
403:  Forbidden
Taula 88:  Petici ́o per a obtenir informaci ́o d’un usuari.
Descripci ́oEndpointper crear un nou desenvolupador al sistema.
Ruta/api/user
M`etodePOST
Resposta
200:{
name:  string,
email:  string,
password:  string,
}
409:  Conflict(email
alreadyexpired)
Taula 89:  Petici ́o per a enregistrar un usuari.
148

Descripci ́o
Endpointper  a  editar  la  informaci ́o  de  l’usuari  que
sol·licita la petici ́o.
Ruta/api/user
M`etodePATCH
Autenticaci ́oBearer
Cos
{
name:  string,
email:  string,
password:  string,
}
Resposta
void
401:  Unauthorized
403:  Forbidden
Taula 90:  Petici ́o per a editar un usuari.
Descripci ́o
Endpointper  esborrar  la  inst`ancia  de  l’usuari  que
sol·licita la petici ́o.
Ruta/api/user
M`etodeDELETE
Autenticaci ́oBearer
Resposta
void
401:  Unauthorized
403:  Forbidden
Taula 91:  Petici ́o per eliminar un usuari.
B.1.4    Rutes per peticions de fitxers
Descripci ́oEndpointper a pujar imatges al servidor FS2.
Ruta/api/file/image
M`etodePOST
Autenticaci ́oBearer
Cosimatge
Resposta
200:  string
401:  Unauthorized
403:  Forbidden
Taula 92:  Petici ́o per a pujar una imatge.
149

B.1.5    Rutes per peticions de dApps
Descripci ́o
Endpointper obtindre totes les dApps generades per
el solicitant.
Ruta/api/dapps
M`etodeGET
Autenticaci ́oBearer
Resposta
[{
id:  0,
name:  string,
description:  string,
email:  string,
projectUrl:  string,
supportUrl:  string,
apiKey:  string,
termsUrl:  string,
privacyPolicyUrl:  string,
image:  string,
createdAt:  date,
updatedAt:  date
}]
401:  Unauthorized
403:  Forbidden
Taula 93:  Petici ́o per a obtindre totes les dApps d’un usuari.
150

Descripci ́o
Endpointper obtindre la informaci ́o d’una dApp mit-
jan ̧cant l’atributid.
Ruta/api/dapps/{id}
M`etodeGET
Autenticaci ́oBearer
Resposta
{
id:  0,
name:  string,
description:  string,
email:  string,
projectUrl:  string,
supportUrl:  string,
apiKey:  string,
termsUrl:  string,
privacyPolicyUrl:  string,
image:  string,
createdAt:  date,
updatedAt:  date
}
401:  Unauthorized
403:  Forbidden
404:  Not found
Taula 94:  Petici ́o per a obtindre una dApp.
151

Descripci ́oEndpointper enregistrar una nova dApp.
Ruta/api/dapps
M`etodePOST
Autenticaci ́oBearer
Cos
{
name:  string,
description:  string,
email:  string,
projectUrl:  string,
supportUrl:  string,
apiKey:  string,
termsUrl:  string,
privacyPolicyUrl:  string,
image:  string,
}
Resposta
201:{
id:  0,
name:  string,
description:  string,
email:  string,
projectUrl:  string,
supportUrl:  string,
apiKey:  string,
termsUrl:  string,
privacyPolicyUrl:  string,
image:  string,
createdAt:  date,
updatedAt:  date
}
401:  Unauthorized
403:  Forbidden
409:  Conflict
Taula 95:  Petici ́o per a enregistrar una dApp.
152

Descripci ́o
Endpointper  editar  la  informaci ́o  de  la  dApp  amb
identificadorid.
Ruta/api/dapps/{id}
M`etodePATCH
Autenticaci ́oBearer
Cos
{
name:  string,
description:  string,
email:  string,
projectUrl:  string,
supportUrl:  string,
apiKey:  string,
termsUrl:  string,
privacyPolicyUrl:  string,
image:  string,
}
Resposta
200:  void
401:  Unauthorized
403:  Forbidden
409:  Conflict
Taula 96:  Petici ́o per a enregistrar una dApp.
Descripci ́oEndpointper eliminar la dApp amb l’identificadorid.
Ruta/api/dapps/{id}
M`etodeDELETE
Autenticaci ́oBearer
Par`ametresid:  number
Resposta
200:  void
401:  Unauthorized
403:  Forbidden
404:  Not found
Taula 97:  Petici ́o per eliminar una dApp.
153

Descripci ́o
Endpointper regenerar l’API  secretde la dApp amb
identificadorid.
Ruta/api/dapps/{id}/credentials
M`etodeGET
Autenticaci ́oBearer
Par`ametresid:  number
Resposta
200:   apiSecret:  string
401:  Unauthorized
403:  Forbidden
404:  Not found
Taula 98:  Petici ́o per eliminar una dApp.
B.1.6    Rutes per peticions de transacci ́o
Descripci ́o
Endpointper obtindre totes les peticions de transacci ́o
amb els atributsstatus,networkiaddress.
Ruta/api/transaction-requests
M`etodeGET
Par`ametres
status:  TransactionRequestStatus,
network:  Network,
address:  string
Resposta
200:  [{
id:  number,
transactionToken:  string,
status:  TransactionRequestStatus,
transaction:{
id:  number,
transactionHash:  string,
transaction:{
cellProvider:  null,
cellDeps:  [],
headerDeps:  [],
inputs:  [],
outputs:  [],
witnesses:  [],
signingEntries:  [],
inputSinces:  object
}
}, createdAt:  date,
expiresAt:  date,
signInRequest:  SignInRequestDto
}]
Taula 99:  Petici ́o d’obtenci ́o de peticions de transaccions.
154

Descripci ́o
Endpointper  crear  una  petici ́o  de  transacci ́o  mit-
jan ̧cant  l’autenticaci ́o  API,  unsignInTokeni  una
transacci ́o.
Ruta/api/transaction-requests
M`etodePOST
Capceleres
x-timestamp:  number,
x-signature:  string,
x-api-key:  string
Cos
{
signInToken:  string,
transaction:{
cellProvider:  null,
cellDeps:  [],
headerDeps:  [],
inputs:  [],
outputs:  [],
witnesses:  [],
fixedEntries:  [],
signingEntries:  [],
inputSinces:  object
}
}
Resposta
200:  [{
id:  number,
transactionToken:  string,
status:  TransactionRequestStatus,
transaction:
id:  number,
transactionHash:  string,
transaction:{
cellProvider:  null,
cellDeps:  [],
headerDeps:  [],
inputs:  [],
outputs:  [],
witnesses:  [],
fixedEntries:  [],
signingEntries:  [],
inputSinces:  object
}
,
createdAt:  date,
expiresAt:  date,
signInRequest:  SignInRequestDto
}]
401:  Unauthorized
403:  Forbidden
Taula 100:  Petici ́o de creaci ́o de peticions de transaccions.
155

Descripci ́o
Endpointper  obtindre  totes  peticions  de  transacci ́o
mitjan ̧cant lapiKey.
Ruta/api/transaction-requests/dapp/{apiKey}
M`etodeGET
Par`ametresapiKey:  string
Resposta
200:  [{
id:  number,
transactionToken:  string,
status:  TransactionRequestStatus,
transaction:{
id:  number,
transactionHash:  string,
transaction:{
cellProvider:  null,
cellDeps:  [],
headerDeps:  [],
inputs:  [],
outputs:  [],
witnesses:  [],
fixedEntries:  [],
signingEntries:  [],
inputSinces:  object
},
createdAt:  date,
expiresAt:  date,
signInRequest:  SignInRequestDto
}]
404:  Not found
Taula 101:  Petici ́o d’obtenci ́o de peticions de transacci ́o per dApp.
156

Descripci ́o
Endpointper obtindre una petici ́o de transacci ́o mit-
jan ̧cant eltransactionToken.
Ruta/api/transaction-requests/{transactionToken}
M`etodeGET
Par`ametrestransactionToken:  string
Resposta
200:{
id:  number,
transactionToken:  string,
status:  TransactionRequestStatus,
transaction:{
id:  number,
transactionHash:  string,
transaction:{
cellProvider:  null,
cellDeps:  [],
headerDeps:  [],
inputs:  [],
outputs:  [],
witnesses:  [],
fixedEntries:  [],
signingEntries:  [],
inputSinces:  object
},
createdAt:  date,
expiresAt:  date,
signInRequest:  SignInRequestDto
}
404:  Not found
Taula 102:  Petici ́o d’obtenci ́o de petici ́o de transacci ́o per transactionToken.
Descripci ́o
Endpointpensat per ferpollingde l’estat de la petici ́o
de transacci ́o.
Ruta/api/transaction-requests/{transactionToken}/status
M`etodeGET
Par`ametrestransactionToken:  string
Resposta
200:{
transactionToken:  string,
status:  TransactionRequestStatus,
}
404:  Not found
Taula 103:  Petici ́o d’obtenci ́o de l’estat petici ́o de transacci ́o per transactionToken.
157

Descripci ́o
Endpointper generar una transacci ́o detokensnatius
mitjan ̧cant unaaddressi la quantitat a enviar.
Ruta
/api/transaction-requests/generate-native-token-
transaction
M`etodePOST
Cosamount:  string, to:  string
Resposta
201:{
cellProvider:  null,
cellDeps:  [],
headerDeps:  [],
inputs:  [],
outputs:  [],
witnesses:  [],
fixedEntries:  [],
signingEntries:  [],
inputSinces:  object
}
Taula 104:  Petici ́o de generaci ́o d’una transacci ́o de token natiu.
Descripci ́o
Endpointper  generar  una  transacci ́o  deNFTsmit-
jan ̧cant unaaddressi elNFTa enviar.
Ruta/api/transaction-requests/generate-nft-transaction
M`etodePOST
Cosnft:  string, to:  string
Resposta
201:{
cellProvider:  null,
cellDeps:  [],
headerDeps:  [],
inputs:  [],
outputs:  [],
witnesses:  [],
fixedEntries:  [],
signingEntries:  [],
inputSinces:  object
}
Taula 105:  Petici ́o de generaci ́o d’una transacci ́o d’un nft.
158

Descripci ́o
Endpointper a enviar una petici ́o de transacci ́o signa-
da per part d’un usuari de CKBull Wallet.
Ruta/api/transaction-requests/{transactionToken}/sign
M`etodePOST
Cos
{
signInToken:  string,
transaction:{
id:  number,
transactionHash:  string,
transaction:{
cellProvider:  null,
cellDeps:  [],
headerDeps:  [],
inputs:  [],
outputs:  [],
witnesses:  [],
fixedEntries:  [],
signingEntries:  [],
inputSinces:  object
}
}
}
Resposta
201:{
id:  number,
transactionToken:  string,
status:  TransactionRequestStatus,
transaction:{
id:  number,
transactionHash:  string,
transaction:{
cellProvider:  null,
cellDeps:  [],
headerDeps:  [],
inputs:  [],
outputs:  [],
witnesses:  [],
fixedEntries:  [],
signingEntries:  [],
inputSinces:  object
},
createdAt:  date,
expiresAt:  date,
signInRequest:  SignInRequestDto
}
Taula 106:  Petici ́o de generaci ́o d’una transacci ́o d’un nft.
159

Descripci ́o
Endpointper a rebutjar una petici ́o de transacci ́o per
part d’un usuari de CKBull Wallet.
Ruta/api/transaction-requests/{transactionToken}/decline
M`etodePOST
Cos
{
signInToken:  string,
transaction:{
id:  number,
transactionHash:  string,
transaction:{
cellProvider:  null,
cellDeps:  [],
headerDeps:  [],
inputs:  [],
outputs:  [],
witnesses:  [],
fixedEntries:  [],
signingEntries:  [],
inputSinces:  object
}
}
}
Resposta
201:{
id:  number,
transactionToken:  string,
status:  TransactionRequestStatus,
transaction:{
id:  number,
transactionHash:  string,
transaction:{
cellProvider:  null,
cellDeps:  [],
headerDeps:  [],
inputs:  [],
outputs:  [],
witnesses:  [],
fixedEntries:  [],
signingEntries:  [],
inputSinces:  object
},
createdAt:  date,
expiresAt:  date,
signInRequest:  SignInRequestDto
}
Taula 107:  Petici ́o de generaci ́o d’una transacci ́o d’un nft.
160

B.1.7    Rutes per peticions deplayground
Descripci ́o
Endpointper desconectar i invalidar les peticions d’i-
nici de sessi ́o siggnades per part d’un usuari de CKBull
Wallet.
Ruta/api/playground/verify
M`etodePOST
Capceleres
x-timestamp:  number,
x-signature:  string,
x-api-key:  string
Resposta
200:   verify:  boolean
404:  Not Found
Taula 108:  Petici ́o de desconnexi ́o de dApps.
161